
Individual_Contribution.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cf8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000cf8  00000d8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800076  00800076  00000da2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000da2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f68  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000746  00000000  00000000  00001e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007a1  00000000  00000000  00002592  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00002d34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004c4  00000000  00000000  00002ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000955  00000000  00000000  000033b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003d09  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 49 02 	jmp	0x492	; 0x492 <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ef       	ldi	r30, 0xF8	; 248
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e7       	ldi	r26, 0x76	; 118
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 39       	cpi	r26, 0x90	; 144
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 70 01 	call	0x2e0	; 0x2e0 <main>
  8a:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <TWIInit>:
		LcdChar(str[i]);
	}
}
void LcdCursor(uint8_t Cursor){
	if (Cursor==0)
	{LcdCommand(0xC);
  92:	11 b8       	out	0x01, r1	; 1
  94:	88 e4       	ldi	r24, 0x48	; 72
  96:	80 b9       	out	0x00, r24	; 0
  98:	84 e0       	ldi	r24, 0x04	; 4
  9a:	86 bf       	out	0x36, r24	; 54
  9c:	08 95       	ret

0000009e <TWIStart>:
  9e:	84 ea       	ldi	r24, 0xA4	; 164
  a0:	86 bf       	out	0x36, r24	; 54
  a2:	06 b6       	in	r0, 0x36	; 54
  a4:	07 fe       	sbrs	r0, 7
  a6:	fd cf       	rjmp	.-6      	; 0xa2 <TWIStart+0x4>
  a8:	08 95       	ret

000000aa <TWIStop>:
  aa:	84 e9       	ldi	r24, 0x94	; 148
  ac:	86 bf       	out	0x36, r24	; 54
  ae:	06 b6       	in	r0, 0x36	; 54
  b0:	04 fc       	sbrc	r0, 4
  b2:	fd cf       	rjmp	.-6      	; 0xae <TWIStop+0x4>
  b4:	08 95       	ret

000000b6 <TWIWriteAddrs>:
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	86 2b       	or	r24, r22
  be:	83 b9       	out	0x03, r24	; 3
  c0:	84 e8       	ldi	r24, 0x84	; 132
  c2:	86 bf       	out	0x36, r24	; 54
  c4:	06 b6       	in	r0, 0x36	; 54
  c6:	07 fe       	sbrs	r0, 7
  c8:	fd cf       	rjmp	.-6      	; 0xc4 <TWIWriteAddrs+0xe>
  ca:	81 b1       	in	r24, 0x01	; 1
  cc:	88 7f       	andi	r24, 0xF8	; 248
  ce:	08 95       	ret

000000d0 <TWIWriteData>:
  d0:	83 b9       	out	0x03, r24	; 3
  d2:	84 e8       	ldi	r24, 0x84	; 132
  d4:	86 bf       	out	0x36, r24	; 54
  d6:	06 b6       	in	r0, 0x36	; 54
  d8:	07 fe       	sbrs	r0, 7
  da:	fd cf       	rjmp	.-6      	; 0xd6 <TWIWriteData+0x6>
  dc:	81 b1       	in	r24, 0x01	; 1
  de:	88 7f       	andi	r24, 0xF8	; 248
  e0:	08 95       	ret

000000e2 <LcdBacklight>:
  e2:	81 30       	cpi	r24, 0x01	; 1
  e4:	21 f4       	brne	.+8      	; 0xee <LcdBacklight+0xc>
  e6:	88 e0       	ldi	r24, 0x08	; 8
  e8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <Backlight>
  ec:	08 95       	ret
  ee:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <Backlight>
  f2:	08 95       	ret

000000f4 <Lcd4bitdata>:
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	d8 2f       	mov	r29, r24
  fc:	c6 2f       	mov	r28, r22
  fe:	0e 94 4f 00 	call	0x9e	; 0x9e <TWIStart>
 102:	60 e0       	ldi	r22, 0x00	; 0
 104:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <deviceAdress>
 108:	0e 94 5b 00 	call	0xb6	; 0xb6 <TWIWriteAddrs>
 10c:	1d 2f       	mov	r17, r29
 10e:	1c 2b       	or	r17, r28
 110:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <Backlight>
 114:	81 2b       	or	r24, r17
 116:	0e 94 68 00 	call	0xd0	; 0xd0 <TWIWriteData>
 11a:	0e 94 55 00 	call	0xaa	; 0xaa <TWIStop>
 11e:	0e 94 4f 00 	call	0x9e	; 0x9e <TWIStart>
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <deviceAdress>
 128:	0e 94 5b 00 	call	0xb6	; 0xb6 <TWIWriteAddrs>
 12c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <Backlight>
 130:	81 2b       	or	r24, r17
 132:	84 60       	ori	r24, 0x04	; 4
 134:	0e 94 68 00 	call	0xd0	; 0xd0 <TWIWriteData>
 138:	0e 94 55 00 	call	0xaa	; 0xaa <TWIStop>
 13c:	8f e8       	ldi	r24, 0x8F	; 143
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <Lcd4bitdata+0x4c>
 144:	00 c0       	rjmp	.+0      	; 0x146 <Lcd4bitdata+0x52>
 146:	00 00       	nop
 148:	0e 94 4f 00 	call	0x9e	; 0x9e <TWIStart>
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <deviceAdress>
 152:	0e 94 5b 00 	call	0xb6	; 0xb6 <TWIWriteAddrs>
 156:	db 7f       	andi	r29, 0xFB	; 251
 158:	cd 2b       	or	r28, r29
 15a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <Backlight>
 15e:	8c 2b       	or	r24, r28
 160:	0e 94 68 00 	call	0xd0	; 0xd0 <TWIWriteData>
 164:	0e 94 55 00 	call	0xaa	; 0xaa <TWIStop>
 168:	8f e9       	ldi	r24, 0x9F	; 159
 16a:	9f e0       	ldi	r25, 0x0F	; 15
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <Lcd4bitdata+0x78>
 170:	00 c0       	rjmp	.+0      	; 0x172 <Lcd4bitdata+0x7e>
 172:	00 00       	nop
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	1f 91       	pop	r17
 17a:	08 95       	ret

0000017c <LcdCommand>:
 17c:	cf 93       	push	r28
 17e:	c8 2f       	mov	r28, r24
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	80 7f       	andi	r24, 0xF0	; 240
 184:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
 188:	60 e0       	ldi	r22, 0x00	; 0
 18a:	8c 2f       	mov	r24, r28
 18c:	82 95       	swap	r24
 18e:	80 7f       	andi	r24, 0xF0	; 240
 190:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <LcdInit>:
 198:	cf 93       	push	r28
 19a:	c8 2f       	mov	r28, r24
 19c:	0e 94 49 00 	call	0x92	; 0x92 <TWIInit>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	0e 94 71 00 	call	0xe2	; 0xe2 <LcdBacklight>
 1a6:	8f e3       	ldi	r24, 0x3F	; 63
 1a8:	9c e9       	ldi	r25, 0x9C	; 156
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <LcdInit+0x12>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <LcdInit+0x18>
 1b0:	00 00       	nop
 1b2:	c0 93 7b 00 	sts	0x007B, r28	; 0x80007b <deviceAdress>
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1bc:	88 e2       	ldi	r24, 0x28	; 40
 1be:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1c2:	8c e0       	ldi	r24, 0x0C	; 12
 1c4:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1c8:	86 e0       	ldi	r24, 0x06	; 6
 1ca:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1d4:	cf 91       	pop	r28
 1d6:	08 95       	ret

000001d8 <LcdChar>:
	Lcd4bitdata(command&0xF0,0);
	Lcd4bitdata((command<<4)&0xF0,0);
	
}

void LcdChar(uint8_t Lcdcharval){
 1d8:	cf 93       	push	r28
 1da:	c8 2f       	mov	r28, r24
	Lcd4bitdata(Lcdcharval&0xF0,1);
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	80 7f       	andi	r24, 0xF0	; 240
 1e0:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
 1e4:	61 e0       	ldi	r22, 0x01	; 1
 1e6:	8c 2f       	mov	r24, r28
 1e8:	82 95       	swap	r24
 1ea:	80 7f       	andi	r24, 0xF0	; 240
 1ec:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
	
}
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <LcdString>:
	LcdString(str);
	
}

void LcdString (char *str)		/* Send string to LCD function */
{
 1f4:	0f 93       	push	r16
 1f6:	1f 93       	push	r17
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	8c 01       	movw	r16, r24
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 1fe:	c0 e0       	ldi	r28, 0x00	; 0
 200:	d0 e0       	ldi	r29, 0x00	; 0
 202:	03 c0       	rjmp	.+6      	; 0x20a <LcdString+0x16>
	{
		LcdChar(str[i]);
 204:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LcdChar>
}

void LcdString (char *str)		/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 208:	21 96       	adiw	r28, 0x01	; 1
 20a:	f8 01       	movw	r30, r16
 20c:	ec 0f       	add	r30, r28
 20e:	fd 1f       	adc	r31, r29
 210:	80 81       	ld	r24, Z
 212:	81 11       	cpse	r24, r1
 214:	f7 cf       	rjmp	.-18     	; 0x204 <LcdString+0x10>
	{
		LcdChar(str[i]);
	}
}
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	1f 91       	pop	r17
 21c:	0f 91       	pop	r16
 21e:	08 95       	ret

00000220 <LcdSetCursor>:
	Lcd4bitdata(Lcdcharval&0xF0,1);
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
	
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
 220:	cf 93       	push	r28
 222:	df 93       	push	r29
 224:	ea 01       	movw	r28, r20
	uint8_t tempcommand;
	switch(yaxis){
 226:	61 30       	cpi	r22, 0x01	; 1
 228:	31 f0       	breq	.+12     	; 0x236 <LcdSetCursor+0x16>
 22a:	58 f0       	brcs	.+22     	; 0x242 <LcdSetCursor+0x22>
 22c:	62 30       	cpi	r22, 0x02	; 2
 22e:	29 f0       	breq	.+10     	; 0x23a <LcdSetCursor+0x1a>
 230:	63 30       	cpi	r22, 0x03	; 3
 232:	29 f0       	breq	.+10     	; 0x23e <LcdSetCursor+0x1e>
 234:	07 c0       	rjmp	.+14     	; 0x244 <LcdSetCursor+0x24>
		case 0:tempcommand=0x80;break;  //yaxis =0
		case 1:tempcommand=0xC0;break;
 236:	90 ec       	ldi	r25, 0xC0	; 192
 238:	05 c0       	rjmp	.+10     	; 0x244 <LcdSetCursor+0x24>
		case 2:tempcommand=0x94;break;
 23a:	94 e9       	ldi	r25, 0x94	; 148
 23c:	03 c0       	rjmp	.+6      	; 0x244 <LcdSetCursor+0x24>
		case 3:tempcommand=0xd4;break;		
 23e:	94 ed       	ldi	r25, 0xD4	; 212
 240:	01 c0       	rjmp	.+2      	; 0x244 <LcdSetCursor+0x24>
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
	uint8_t tempcommand;
	switch(yaxis){
		case 0:tempcommand=0x80;break;  //yaxis =0
 242:	90 e8       	ldi	r25, 0x80	; 128
		case 1:tempcommand=0xC0;break;
		case 2:tempcommand=0x94;break;
		case 3:tempcommand=0xd4;break;		
	}
	LcdCommand(tempcommand|(0x0F&xaxis));
 244:	8f 70       	andi	r24, 0x0F	; 15
 246:	89 2b       	or	r24, r25
 248:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
	LcdString(str);
 24c:	ce 01       	movw	r24, r28
 24e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LcdString>
	
}
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <getkeyNum>:
}



uint8_t getkeyNum(){
	DDRB=0b00001111;
 258:	8f e0       	ldi	r24, 0x0F	; 15
 25a:	87 bb       	out	0x17, r24	; 23
	PORTB=0b11110000;
 25c:	80 ef       	ldi	r24, 0xF0	; 240
 25e:	88 bb       	out	0x18, r24	; 24
	uint8_t getx;
	uint8_t gety;
	while(1){
		
		uint8_t pin=(~(PINB|0x0F));
 260:	86 b3       	in	r24, 0x16	; 22
 262:	8f 60       	ori	r24, 0x0F	; 15
 264:	80 95       	com	r24
		if (pin)
 266:	e1 f3       	breq	.-8      	; 0x260 <getkeyNum+0x8>
		{
			
			
			switch(pin){
 268:	80 32       	cpi	r24, 0x20	; 32
 26a:	49 f0       	breq	.+18     	; 0x27e <getkeyNum+0x26>
 26c:	18 f4       	brcc	.+6      	; 0x274 <getkeyNum+0x1c>
 26e:	80 31       	cpi	r24, 0x10	; 16
 270:	61 f0       	breq	.+24     	; 0x28a <getkeyNum+0x32>
 272:	0c c0       	rjmp	.+24     	; 0x28c <getkeyNum+0x34>
 274:	80 34       	cpi	r24, 0x40	; 64
 276:	29 f0       	breq	.+10     	; 0x282 <getkeyNum+0x2a>
 278:	80 38       	cpi	r24, 0x80	; 128
 27a:	29 f0       	breq	.+10     	; 0x286 <getkeyNum+0x2e>
 27c:	07 c0       	rjmp	.+14     	; 0x28c <getkeyNum+0x34>
				
				
				case (1<<4) :getx=0; break;
				case (1<<5) :getx=1;break;
 27e:	91 e0       	ldi	r25, 0x01	; 1
 280:	05 c0       	rjmp	.+10     	; 0x28c <getkeyNum+0x34>
				case (1<<6) :getx=2;break;
 282:	92 e0       	ldi	r25, 0x02	; 2
 284:	03 c0       	rjmp	.+6      	; 0x28c <getkeyNum+0x34>
				case (1<<7) :getx=3;break;
 286:	93 e0       	ldi	r25, 0x03	; 3
 288:	01 c0       	rjmp	.+2      	; 0x28c <getkeyNum+0x34>
			
			
			switch(pin){
				
				
				case (1<<4) :getx=0; break;
 28a:	90 e0       	ldi	r25, 0x00	; 0
				case (1<<6) :getx=2;break;
				case (1<<7) :getx=3;break;
				
				
			} //switch
			DDRB=0b0;
 28c:	17 ba       	out	0x17, r1	; 23
			PORTB=0b0;
 28e:	18 ba       	out	0x18, r1	; 24
			
			DDRB=0b11110000;
 290:	80 ef       	ldi	r24, 0xF0	; 240
 292:	87 bb       	out	0x17, r24	; 23
			PORTB=0b00001111;
 294:	8f e0       	ldi	r24, 0x0F	; 15
 296:	88 bb       	out	0x18, r24	; 24
			
			pin=~(PINB|0xF0);
 298:	86 b3       	in	r24, 0x16	; 22
 29a:	80 6f       	ori	r24, 0xF0	; 240
 29c:	80 95       	com	r24
			
			switch(pin){
 29e:	82 30       	cpi	r24, 0x02	; 2
 2a0:	49 f0       	breq	.+18     	; 0x2b4 <getkeyNum+0x5c>
 2a2:	18 f4       	brcc	.+6      	; 0x2aa <getkeyNum+0x52>
 2a4:	81 30       	cpi	r24, 0x01	; 1
 2a6:	61 f0       	breq	.+24     	; 0x2c0 <getkeyNum+0x68>
 2a8:	0c c0       	rjmp	.+24     	; 0x2c2 <getkeyNum+0x6a>
 2aa:	84 30       	cpi	r24, 0x04	; 4
 2ac:	29 f0       	breq	.+10     	; 0x2b8 <getkeyNum+0x60>
 2ae:	88 30       	cpi	r24, 0x08	; 8
 2b0:	29 f0       	breq	.+10     	; 0x2bc <getkeyNum+0x64>
 2b2:	07 c0       	rjmp	.+14     	; 0x2c2 <getkeyNum+0x6a>
				case (1<<0) :gety=0;break;
				case (1<<1) :gety=1;break;
 2b4:	e1 e0       	ldi	r30, 0x01	; 1
 2b6:	05 c0       	rjmp	.+10     	; 0x2c2 <getkeyNum+0x6a>
				case (1<<2) :gety=2;break;
 2b8:	e2 e0       	ldi	r30, 0x02	; 2
 2ba:	03 c0       	rjmp	.+6      	; 0x2c2 <getkeyNum+0x6a>
				case (1<<3) :gety=3;break;
 2bc:	e3 e0       	ldi	r30, 0x03	; 3
 2be:	01 c0       	rjmp	.+2      	; 0x2c2 <getkeyNum+0x6a>
			PORTB=0b00001111;
			
			pin=~(PINB|0xF0);
			
			switch(pin){
				case (1<<0) :gety=0;break;
 2c0:	e0 e0       	ldi	r30, 0x00	; 0
				case (1<<2) :gety=2;break;
				case (1<<3) :gety=3;break;
				
			} //switch
			
			DDRB=0b00001111;
 2c2:	8f e0       	ldi	r24, 0x0F	; 15
 2c4:	87 bb       	out	0x17, r24	; 23
			PORTB=0b11110000;
 2c6:	80 ef       	ldi	r24, 0xF0	; 240
 2c8:	88 bb       	out	0x18, r24	; 24
			
			
			return kaypad[gety][getx];
 2ca:	f0 e0       	ldi	r31, 0x00	; 0
 2cc:	ee 0f       	add	r30, r30
 2ce:	ff 1f       	adc	r31, r31
 2d0:	ee 0f       	add	r30, r30
 2d2:	ff 1f       	adc	r31, r31
 2d4:	eb 59       	subi	r30, 0x9B	; 155
 2d6:	ff 4f       	sbci	r31, 0xFF	; 255
 2d8:	e9 0f       	add	r30, r25
 2da:	f1 1d       	adc	r31, r1
		}//if
		
		
		
	}//while 1
}
 2dc:	80 81       	ld	r24, Z
 2de:	08 95       	ret

000002e0 <main>:
uint16_t ultraINT0=0;

char lcddata[20];
int main(void)
{
	LcdInit(0x27);
 2e0:	87 e2       	ldi	r24, 0x27	; 39
 2e2:	0e 94 cc 00 	call	0x198	; 0x198 <LcdInit>
	/*Ultrasonic Timer Part*/
	DDRD|=(1<<3); //D4 as output
 2e6:	81 b3       	in	r24, 0x11	; 17
 2e8:	88 60       	ori	r24, 0x08	; 8
 2ea:	81 bb       	out	0x11, r24	; 17
	TCCR0|=(1<<WGM01);//Enable Compare match mode
 2ec:	83 b7       	in	r24, 0x33	; 51
 2ee:	88 60       	ori	r24, 0x08	; 8
 2f0:	83 bf       	out	0x33, r24	; 51
	TCCR0|=(1<<CS11);//Start timer  prescaler =8
 2f2:	83 b7       	in	r24, 0x33	; 51
 2f4:	82 60       	ori	r24, 0x02	; 2
 2f6:	83 bf       	out	0x33, r24	; 51
	TCNT0=0;
 2f8:	12 be       	out	0x32, r1	; 50
	OCR0=10;
 2fa:	8a e0       	ldi	r24, 0x0A	; 10
 2fc:	8c bf       	out	0x3c, r24	; 60
	/*register value= time*(clock speed/prescale)
	register value=0.000001*(8000000/1)
	register value=10*/
	TIMSK|=(1<<OCIE0);//enable timer Compare inturrept
 2fe:	89 b7       	in	r24, 0x39	; 57
 300:	82 60       	ori	r24, 0x02	; 2
 302:	89 bf       	out	0x39, r24	; 57
	sei();	
 304:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 306:	2f ef       	ldi	r18, 0xFF	; 255
 308:	84 e3       	ldi	r24, 0x34	; 52
 30a:	9c e0       	ldi	r25, 0x0C	; 12
 30c:	21 50       	subi	r18, 0x01	; 1
 30e:	80 40       	sbci	r24, 0x00	; 0
 310:	90 40       	sbci	r25, 0x00	; 0
 312:	e1 f7       	brne	.-8      	; 0x30c <main+0x2c>
 314:	00 c0       	rjmp	.+0      	; 0x316 <main+0x36>
 316:	00 00       	nop
	_delay_ms(500);
	PORTD&=~(1<<3);//TRIG pin low
 318:	82 b3       	in	r24, 0x12	; 18
 31a:	87 7f       	andi	r24, 0xF7	; 247
 31c:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 31e:	e5 e8       	ldi	r30, 0x85	; 133
 320:	ea 95       	dec	r30
 322:	f1 f7       	brne	.-4      	; 0x320 <main+0x40>
 324:	00 00       	nop
	_delay_us(50);//wait 50 micro sec
	PORTD|=(1<<3);//TRIG pin high
 326:	82 b3       	in	r24, 0x12	; 18
 328:	88 60       	ori	r24, 0x08	; 8
 32a:	82 bb       	out	0x12, r24	; 18
 32c:	f5 e8       	ldi	r31, 0x85	; 133
 32e:	fa 95       	dec	r31
 330:	f1 f7       	brne	.-4      	; 0x32e <main+0x4e>
 332:	00 00       	nop
	_delay_us(50);//wait 50 micro sec
	PORTD&=~(1<<3);////TRIG pin low
 334:	82 b3       	in	r24, 0x12	; 18
 336:	87 7f       	andi	r24, 0xF7	; 247
 338:	82 bb       	out	0x12, r24	; 18
	while(!(PIND&(1<<2)))//wait for pulse
 33a:	04 c0       	rjmp	.+8      	; 0x344 <main+0x64>
	TimerCal=0;//rest timer
 33c:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <TimerCal+0x1>
 340:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <TimerCal>
	PORTD&=~(1<<3);//TRIG pin low
	_delay_us(50);//wait 50 micro sec
	PORTD|=(1<<3);//TRIG pin high
	_delay_us(50);//wait 50 micro sec
	PORTD&=~(1<<3);////TRIG pin low
	while(!(PIND&(1<<2)))//wait for pulse
 344:	82 9b       	sbis	0x10, 2	; 16
 346:	fa cf       	rjmp	.-12     	; 0x33c <main+0x5c>
 348:	14 c0       	rjmp	.+40     	; 0x372 <main+0x92>
	TimerCal=0;//rest timer
	while((PIND&(1<<2)))////wait for pulse down
	ultraINT0=TimerCal/4.12;//copy timer value
 34a:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <TimerCal>
 34e:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <TimerCal+0x1>
 352:	80 e0       	ldi	r24, 0x00	; 0
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	0e 94 02 03 	call	0x604	; 0x604 <__floatunsisf>
 35a:	2a e0       	ldi	r18, 0x0A	; 10
 35c:	37 ed       	ldi	r19, 0xD7	; 215
 35e:	43 e8       	ldi	r20, 0x83	; 131
 360:	50 e4       	ldi	r21, 0x40	; 64
 362:	0e 94 61 02 	call	0x4c2	; 0x4c2 <__divsf3>
 366:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__fixunssfsi>
 36a:	70 93 77 00 	sts	0x0077, r23	; 0x800077 <__data_end+0x1>
 36e:	60 93 76 00 	sts	0x0076, r22	; 0x800076 <__data_end>
	PORTD|=(1<<3);//TRIG pin high
	_delay_us(50);//wait 50 micro sec
	PORTD&=~(1<<3);////TRIG pin low
	while(!(PIND&(1<<2)))//wait for pulse
	TimerCal=0;//rest timer
	while((PIND&(1<<2)))////wait for pulse down
 372:	82 99       	sbic	0x10, 2	; 16
 374:	ea cf       	rjmp	.-44     	; 0x34a <main+0x6a>
	ultraINT0=TimerCal/4.12;//copy timer value
	
	sprintf(lcddata,"%02u",ultraINT0);
 376:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <__data_end+0x1>
 37a:	8f 93       	push	r24
 37c:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
 380:	8f 93       	push	r24
 382:	80 e6       	ldi	r24, 0x60	; 96
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	9f 93       	push	r25
 388:	8f 93       	push	r24
 38a:	8c e7       	ldi	r24, 0x7C	; 124
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	9f 93       	push	r25
 390:	8f 93       	push	r24
 392:	0e 94 90 03 	call	0x720	; 0x720 <sprintf>
	LcdSetCursor(0,0,lcddata);
 396:	4c e7       	ldi	r20, 0x7C	; 124
 398:	50 e0       	ldi	r21, 0x00	; 0
 39a:	60 e0       	ldi	r22, 0x00	; 0
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	0e 94 10 01 	call	0x220	; 0x220 <LcdSetCursor>
	DDRD|=(1<<4);
 3a2:	81 b3       	in	r24, 0x11	; 17
 3a4:	80 61       	ori	r24, 0x10	; 16
 3a6:	81 bb       	out	0x11, r24	; 17
	
	for(uint8_t j=0;j<100;j++){
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	0f 90       	pop	r0
 3ae:	0f 90       	pop	r0
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	1d c0       	rjmp	.+58     	; 0x3f2 <main+0x112>
		PORTD|=(1<<4);
 3b8:	82 b3       	in	r24, 0x12	; 18
 3ba:	80 61       	ori	r24, 0x10	; 16
 3bc:	82 bb       	out	0x12, r24	; 18
		for(uint8_t i=0;i<10;i++){
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	07 c0       	rjmp	.+14     	; 0x3d0 <main+0xf0>
 3c2:	e7 ec       	ldi	r30, 0xC7	; 199
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	31 97       	sbiw	r30, 0x01	; 1
 3c8:	f1 f7       	brne	.-4      	; 0x3c6 <main+0xe6>
 3ca:	00 c0       	rjmp	.+0      	; 0x3cc <main+0xec>
 3cc:	00 00       	nop
 3ce:	8f 5f       	subi	r24, 0xFF	; 255
 3d0:	8a 30       	cpi	r24, 0x0A	; 10
 3d2:	b8 f3       	brcs	.-18     	; 0x3c2 <main+0xe2>
			_delay_us(100);
		}
		PORTD&=~(1<<4);
 3d4:	82 b3       	in	r24, 0x12	; 18
 3d6:	8f 7e       	andi	r24, 0xEF	; 239
 3d8:	82 bb       	out	0x12, r24	; 18
		
		uint8_t ser=200-10;
		
		for(uint8_t i=0;i<ser;i++){
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	07 c0       	rjmp	.+14     	; 0x3ec <main+0x10c>
 3de:	e7 ec       	ldi	r30, 0xC7	; 199
 3e0:	f0 e0       	ldi	r31, 0x00	; 0
 3e2:	31 97       	sbiw	r30, 0x01	; 1
 3e4:	f1 f7       	brne	.-4      	; 0x3e2 <main+0x102>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <main+0x108>
 3e8:	00 00       	nop
 3ea:	8f 5f       	subi	r24, 0xFF	; 255
 3ec:	8e 3b       	cpi	r24, 0xBE	; 190
 3ee:	b8 f3       	brcs	.-18     	; 0x3de <main+0xfe>
	
	sprintf(lcddata,"%02u",ultraINT0);
	LcdSetCursor(0,0,lcddata);
	DDRD|=(1<<4);
	
	for(uint8_t j=0;j<100;j++){
 3f0:	9f 5f       	subi	r25, 0xFF	; 255
 3f2:	94 36       	cpi	r25, 0x64	; 100
 3f4:	08 f3       	brcs	.-62     	; 0x3b8 <main+0xd8>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3f6:	ff ef       	ldi	r31, 0xFF	; 255
 3f8:	24 e3       	ldi	r18, 0x34	; 52
 3fa:	8c e0       	ldi	r24, 0x0C	; 12
 3fc:	f1 50       	subi	r31, 0x01	; 1
 3fe:	20 40       	sbci	r18, 0x00	; 0
 400:	80 40       	sbci	r24, 0x00	; 0
 402:	e1 f7       	brne	.-8      	; 0x3fc <main+0x11c>
 404:	00 c0       	rjmp	.+0      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 406:	00 00       	nop
		for(uint8_t i=0;i<ser;i++){
			_delay_us(100);
		}
	}
	_delay_ms(500);
	for(uint8_t j=0;j<100;j++){
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	1d c0       	rjmp	.+58     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
		
		PORTD|=(1<<4);
 40c:	82 b3       	in	r24, 0x12	; 18
 40e:	80 61       	ori	r24, 0x10	; 16
 410:	82 bb       	out	0x12, r24	; 18
		for(uint8_t i=0;i<15;i++){
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	07 c0       	rjmp	.+14     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 416:	e7 ec       	ldi	r30, 0xC7	; 199
 418:	f0 e0       	ldi	r31, 0x00	; 0
 41a:	31 97       	sbiw	r30, 0x01	; 1
 41c:	f1 f7       	brne	.-4      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 41e:	00 c0       	rjmp	.+0      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 420:	00 00       	nop
 422:	8f 5f       	subi	r24, 0xFF	; 255
 424:	8f 30       	cpi	r24, 0x0F	; 15
 426:	b8 f3       	brcs	.-18     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
			_delay_us(100);
		}
		PORTD&=~(1<<4);
 428:	82 b3       	in	r24, 0x12	; 18
 42a:	8f 7e       	andi	r24, 0xEF	; 239
 42c:	82 bb       	out	0x12, r24	; 18
		
		uint8_t ser=200-15;
		
		for(uint8_t i=0;i<15;i++){
 42e:	80 e0       	ldi	r24, 0x00	; 0
 430:	07 c0       	rjmp	.+14     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 432:	e7 ec       	ldi	r30, 0xC7	; 199
 434:	f0 e0       	ldi	r31, 0x00	; 0
 436:	31 97       	sbiw	r30, 0x01	; 1
 438:	f1 f7       	brne	.-4      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 43a:	00 c0       	rjmp	.+0      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 43c:	00 00       	nop
 43e:	8f 5f       	subi	r24, 0xFF	; 255
 440:	8f 30       	cpi	r24, 0x0F	; 15
 442:	b8 f3       	brcs	.-18     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
		for(uint8_t i=0;i<ser;i++){
			_delay_us(100);
		}
	}
	_delay_ms(500);
	for(uint8_t j=0;j<100;j++){
 444:	9f 5f       	subi	r25, 0xFF	; 255
 446:	94 36       	cpi	r25, 0x64	; 100
 448:	08 f3       	brcs	.-62     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 44a:	ff ef       	ldi	r31, 0xFF	; 255
 44c:	24 e3       	ldi	r18, 0x34	; 52
 44e:	8c e0       	ldi	r24, 0x0C	; 12
 450:	f1 50       	subi	r31, 0x01	; 1
 452:	20 40       	sbci	r18, 0x00	; 0
 454:	80 40       	sbci	r24, 0x00	; 0
 456:	e1 f7       	brne	.-8      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 458:	00 c0       	rjmp	.+0      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 45a:	00 00       	nop
			_delay_us(100);
		}
	}_delay_ms(500);
	
	while (1)
	{	uint8_t key=getkeyNum();
 45c:	0e 94 2c 01 	call	0x258	; 0x258 <getkeyNum>
		sprintf(lcddata,"%02u",key);
 460:	1f 92       	push	r1
 462:	8f 93       	push	r24
 464:	80 e6       	ldi	r24, 0x60	; 96
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	9f 93       	push	r25
 46a:	8f 93       	push	r24
 46c:	8c e7       	ldi	r24, 0x7C	; 124
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	9f 93       	push	r25
 472:	8f 93       	push	r24
 474:	0e 94 90 03 	call	0x720	; 0x720 <sprintf>
		LcdSetCursor(0,1,lcddata);
 478:	4c e7       	ldi	r20, 0x7C	; 124
 47a:	50 e0       	ldi	r21, 0x00	; 0
 47c:	61 e0       	ldi	r22, 0x01	; 1
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	0e 94 10 01 	call	0x220	; 0x220 <LcdSetCursor>
 484:	0f 90       	pop	r0
 486:	0f 90       	pop	r0
 488:	0f 90       	pop	r0
 48a:	0f 90       	pop	r0
 48c:	0f 90       	pop	r0
 48e:	0f 90       	pop	r0
 490:	e5 cf       	rjmp	.-54     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>

00000492 <__vector_10>:
		
		
	}//while 1
}

ISR(TIMER0_COMP_vect){//ultrasonic
 492:	1f 92       	push	r1
 494:	0f 92       	push	r0
 496:	0f b6       	in	r0, 0x3f	; 63
 498:	0f 92       	push	r0
 49a:	11 24       	eor	r1, r1
 49c:	8f 93       	push	r24
 49e:	9f 93       	push	r25
	TimerCal++;
 4a0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <TimerCal>
 4a4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <TimerCal+0x1>
 4a8:	01 96       	adiw	r24, 0x01	; 1
 4aa:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <TimerCal+0x1>
 4ae:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <TimerCal>
	TCNT0=0;
 4b2:	12 be       	out	0x32, r1	; 50
	
 4b4:	9f 91       	pop	r25
 4b6:	8f 91       	pop	r24
 4b8:	0f 90       	pop	r0
 4ba:	0f be       	out	0x3f, r0	; 63
 4bc:	0f 90       	pop	r0
 4be:	1f 90       	pop	r1
 4c0:	18 95       	reti

000004c2 <__divsf3>:
 4c2:	0e 94 75 02 	call	0x4ea	; 0x4ea <__divsf3x>
 4c6:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_round>
 4ca:	0e 94 4f 03 	call	0x69e	; 0x69e <__fp_pscB>
 4ce:	58 f0       	brcs	.+22     	; 0x4e6 <__divsf3+0x24>
 4d0:	0e 94 48 03 	call	0x690	; 0x690 <__fp_pscA>
 4d4:	40 f0       	brcs	.+16     	; 0x4e6 <__divsf3+0x24>
 4d6:	29 f4       	brne	.+10     	; 0x4e2 <__divsf3+0x20>
 4d8:	5f 3f       	cpi	r21, 0xFF	; 255
 4da:	29 f0       	breq	.+10     	; 0x4e6 <__divsf3+0x24>
 4dc:	0c 94 3f 03 	jmp	0x67e	; 0x67e <__fp_inf>
 4e0:	51 11       	cpse	r21, r1
 4e2:	0c 94 8a 03 	jmp	0x714	; 0x714 <__fp_szero>
 4e6:	0c 94 45 03 	jmp	0x68a	; 0x68a <__fp_nan>

000004ea <__divsf3x>:
 4ea:	0e 94 67 03 	call	0x6ce	; 0x6ce <__fp_split3>
 4ee:	68 f3       	brcs	.-38     	; 0x4ca <__divsf3+0x8>

000004f0 <__divsf3_pse>:
 4f0:	99 23       	and	r25, r25
 4f2:	b1 f3       	breq	.-20     	; 0x4e0 <__divsf3+0x1e>
 4f4:	55 23       	and	r21, r21
 4f6:	91 f3       	breq	.-28     	; 0x4dc <__divsf3+0x1a>
 4f8:	95 1b       	sub	r25, r21
 4fa:	55 0b       	sbc	r21, r21
 4fc:	bb 27       	eor	r27, r27
 4fe:	aa 27       	eor	r26, r26
 500:	62 17       	cp	r22, r18
 502:	73 07       	cpc	r23, r19
 504:	84 07       	cpc	r24, r20
 506:	38 f0       	brcs	.+14     	; 0x516 <__divsf3_pse+0x26>
 508:	9f 5f       	subi	r25, 0xFF	; 255
 50a:	5f 4f       	sbci	r21, 0xFF	; 255
 50c:	22 0f       	add	r18, r18
 50e:	33 1f       	adc	r19, r19
 510:	44 1f       	adc	r20, r20
 512:	aa 1f       	adc	r26, r26
 514:	a9 f3       	breq	.-22     	; 0x500 <__divsf3_pse+0x10>
 516:	35 d0       	rcall	.+106    	; 0x582 <__divsf3_pse+0x92>
 518:	0e 2e       	mov	r0, r30
 51a:	3a f0       	brmi	.+14     	; 0x52a <__divsf3_pse+0x3a>
 51c:	e0 e8       	ldi	r30, 0x80	; 128
 51e:	32 d0       	rcall	.+100    	; 0x584 <__divsf3_pse+0x94>
 520:	91 50       	subi	r25, 0x01	; 1
 522:	50 40       	sbci	r21, 0x00	; 0
 524:	e6 95       	lsr	r30
 526:	00 1c       	adc	r0, r0
 528:	ca f7       	brpl	.-14     	; 0x51c <__divsf3_pse+0x2c>
 52a:	2b d0       	rcall	.+86     	; 0x582 <__divsf3_pse+0x92>
 52c:	fe 2f       	mov	r31, r30
 52e:	29 d0       	rcall	.+82     	; 0x582 <__divsf3_pse+0x92>
 530:	66 0f       	add	r22, r22
 532:	77 1f       	adc	r23, r23
 534:	88 1f       	adc	r24, r24
 536:	bb 1f       	adc	r27, r27
 538:	26 17       	cp	r18, r22
 53a:	37 07       	cpc	r19, r23
 53c:	48 07       	cpc	r20, r24
 53e:	ab 07       	cpc	r26, r27
 540:	b0 e8       	ldi	r27, 0x80	; 128
 542:	09 f0       	breq	.+2      	; 0x546 <__divsf3_pse+0x56>
 544:	bb 0b       	sbc	r27, r27
 546:	80 2d       	mov	r24, r0
 548:	bf 01       	movw	r22, r30
 54a:	ff 27       	eor	r31, r31
 54c:	93 58       	subi	r25, 0x83	; 131
 54e:	5f 4f       	sbci	r21, 0xFF	; 255
 550:	3a f0       	brmi	.+14     	; 0x560 <__divsf3_pse+0x70>
 552:	9e 3f       	cpi	r25, 0xFE	; 254
 554:	51 05       	cpc	r21, r1
 556:	78 f0       	brcs	.+30     	; 0x576 <__divsf3_pse+0x86>
 558:	0c 94 3f 03 	jmp	0x67e	; 0x67e <__fp_inf>
 55c:	0c 94 8a 03 	jmp	0x714	; 0x714 <__fp_szero>
 560:	5f 3f       	cpi	r21, 0xFF	; 255
 562:	e4 f3       	brlt	.-8      	; 0x55c <__divsf3_pse+0x6c>
 564:	98 3e       	cpi	r25, 0xE8	; 232
 566:	d4 f3       	brlt	.-12     	; 0x55c <__divsf3_pse+0x6c>
 568:	86 95       	lsr	r24
 56a:	77 95       	ror	r23
 56c:	67 95       	ror	r22
 56e:	b7 95       	ror	r27
 570:	f7 95       	ror	r31
 572:	9f 5f       	subi	r25, 0xFF	; 255
 574:	c9 f7       	brne	.-14     	; 0x568 <__divsf3_pse+0x78>
 576:	88 0f       	add	r24, r24
 578:	91 1d       	adc	r25, r1
 57a:	96 95       	lsr	r25
 57c:	87 95       	ror	r24
 57e:	97 f9       	bld	r25, 7
 580:	08 95       	ret
 582:	e1 e0       	ldi	r30, 0x01	; 1
 584:	66 0f       	add	r22, r22
 586:	77 1f       	adc	r23, r23
 588:	88 1f       	adc	r24, r24
 58a:	bb 1f       	adc	r27, r27
 58c:	62 17       	cp	r22, r18
 58e:	73 07       	cpc	r23, r19
 590:	84 07       	cpc	r24, r20
 592:	ba 07       	cpc	r27, r26
 594:	20 f0       	brcs	.+8      	; 0x59e <__divsf3_pse+0xae>
 596:	62 1b       	sub	r22, r18
 598:	73 0b       	sbc	r23, r19
 59a:	84 0b       	sbc	r24, r20
 59c:	ba 0b       	sbc	r27, r26
 59e:	ee 1f       	adc	r30, r30
 5a0:	88 f7       	brcc	.-30     	; 0x584 <__divsf3_pse+0x94>
 5a2:	e0 95       	com	r30
 5a4:	08 95       	ret

000005a6 <__fixunssfsi>:
 5a6:	0e 94 6f 03 	call	0x6de	; 0x6de <__fp_splitA>
 5aa:	88 f0       	brcs	.+34     	; 0x5ce <__fixunssfsi+0x28>
 5ac:	9f 57       	subi	r25, 0x7F	; 127
 5ae:	98 f0       	brcs	.+38     	; 0x5d6 <__fixunssfsi+0x30>
 5b0:	b9 2f       	mov	r27, r25
 5b2:	99 27       	eor	r25, r25
 5b4:	b7 51       	subi	r27, 0x17	; 23
 5b6:	b0 f0       	brcs	.+44     	; 0x5e4 <__fixunssfsi+0x3e>
 5b8:	e1 f0       	breq	.+56     	; 0x5f2 <__fixunssfsi+0x4c>
 5ba:	66 0f       	add	r22, r22
 5bc:	77 1f       	adc	r23, r23
 5be:	88 1f       	adc	r24, r24
 5c0:	99 1f       	adc	r25, r25
 5c2:	1a f0       	brmi	.+6      	; 0x5ca <__fixunssfsi+0x24>
 5c4:	ba 95       	dec	r27
 5c6:	c9 f7       	brne	.-14     	; 0x5ba <__fixunssfsi+0x14>
 5c8:	14 c0       	rjmp	.+40     	; 0x5f2 <__fixunssfsi+0x4c>
 5ca:	b1 30       	cpi	r27, 0x01	; 1
 5cc:	91 f0       	breq	.+36     	; 0x5f2 <__fixunssfsi+0x4c>
 5ce:	0e 94 89 03 	call	0x712	; 0x712 <__fp_zero>
 5d2:	b1 e0       	ldi	r27, 0x01	; 1
 5d4:	08 95       	ret
 5d6:	0c 94 89 03 	jmp	0x712	; 0x712 <__fp_zero>
 5da:	67 2f       	mov	r22, r23
 5dc:	78 2f       	mov	r23, r24
 5de:	88 27       	eor	r24, r24
 5e0:	b8 5f       	subi	r27, 0xF8	; 248
 5e2:	39 f0       	breq	.+14     	; 0x5f2 <__fixunssfsi+0x4c>
 5e4:	b9 3f       	cpi	r27, 0xF9	; 249
 5e6:	cc f3       	brlt	.-14     	; 0x5da <__fixunssfsi+0x34>
 5e8:	86 95       	lsr	r24
 5ea:	77 95       	ror	r23
 5ec:	67 95       	ror	r22
 5ee:	b3 95       	inc	r27
 5f0:	d9 f7       	brne	.-10     	; 0x5e8 <__fixunssfsi+0x42>
 5f2:	3e f4       	brtc	.+14     	; 0x602 <__fixunssfsi+0x5c>
 5f4:	90 95       	com	r25
 5f6:	80 95       	com	r24
 5f8:	70 95       	com	r23
 5fa:	61 95       	neg	r22
 5fc:	7f 4f       	sbci	r23, 0xFF	; 255
 5fe:	8f 4f       	sbci	r24, 0xFF	; 255
 600:	9f 4f       	sbci	r25, 0xFF	; 255
 602:	08 95       	ret

00000604 <__floatunsisf>:
 604:	e8 94       	clt
 606:	09 c0       	rjmp	.+18     	; 0x61a <__floatsisf+0x12>

00000608 <__floatsisf>:
 608:	97 fb       	bst	r25, 7
 60a:	3e f4       	brtc	.+14     	; 0x61a <__floatsisf+0x12>
 60c:	90 95       	com	r25
 60e:	80 95       	com	r24
 610:	70 95       	com	r23
 612:	61 95       	neg	r22
 614:	7f 4f       	sbci	r23, 0xFF	; 255
 616:	8f 4f       	sbci	r24, 0xFF	; 255
 618:	9f 4f       	sbci	r25, 0xFF	; 255
 61a:	99 23       	and	r25, r25
 61c:	a9 f0       	breq	.+42     	; 0x648 <__floatsisf+0x40>
 61e:	f9 2f       	mov	r31, r25
 620:	96 e9       	ldi	r25, 0x96	; 150
 622:	bb 27       	eor	r27, r27
 624:	93 95       	inc	r25
 626:	f6 95       	lsr	r31
 628:	87 95       	ror	r24
 62a:	77 95       	ror	r23
 62c:	67 95       	ror	r22
 62e:	b7 95       	ror	r27
 630:	f1 11       	cpse	r31, r1
 632:	f8 cf       	rjmp	.-16     	; 0x624 <__floatsisf+0x1c>
 634:	fa f4       	brpl	.+62     	; 0x674 <__floatsisf+0x6c>
 636:	bb 0f       	add	r27, r27
 638:	11 f4       	brne	.+4      	; 0x63e <__floatsisf+0x36>
 63a:	60 ff       	sbrs	r22, 0
 63c:	1b c0       	rjmp	.+54     	; 0x674 <__floatsisf+0x6c>
 63e:	6f 5f       	subi	r22, 0xFF	; 255
 640:	7f 4f       	sbci	r23, 0xFF	; 255
 642:	8f 4f       	sbci	r24, 0xFF	; 255
 644:	9f 4f       	sbci	r25, 0xFF	; 255
 646:	16 c0       	rjmp	.+44     	; 0x674 <__floatsisf+0x6c>
 648:	88 23       	and	r24, r24
 64a:	11 f0       	breq	.+4      	; 0x650 <__floatsisf+0x48>
 64c:	96 e9       	ldi	r25, 0x96	; 150
 64e:	11 c0       	rjmp	.+34     	; 0x672 <__floatsisf+0x6a>
 650:	77 23       	and	r23, r23
 652:	21 f0       	breq	.+8      	; 0x65c <__floatsisf+0x54>
 654:	9e e8       	ldi	r25, 0x8E	; 142
 656:	87 2f       	mov	r24, r23
 658:	76 2f       	mov	r23, r22
 65a:	05 c0       	rjmp	.+10     	; 0x666 <__floatsisf+0x5e>
 65c:	66 23       	and	r22, r22
 65e:	71 f0       	breq	.+28     	; 0x67c <__floatsisf+0x74>
 660:	96 e8       	ldi	r25, 0x86	; 134
 662:	86 2f       	mov	r24, r22
 664:	70 e0       	ldi	r23, 0x00	; 0
 666:	60 e0       	ldi	r22, 0x00	; 0
 668:	2a f0       	brmi	.+10     	; 0x674 <__floatsisf+0x6c>
 66a:	9a 95       	dec	r25
 66c:	66 0f       	add	r22, r22
 66e:	77 1f       	adc	r23, r23
 670:	88 1f       	adc	r24, r24
 672:	da f7       	brpl	.-10     	; 0x66a <__floatsisf+0x62>
 674:	88 0f       	add	r24, r24
 676:	96 95       	lsr	r25
 678:	87 95       	ror	r24
 67a:	97 f9       	bld	r25, 7
 67c:	08 95       	ret

0000067e <__fp_inf>:
 67e:	97 f9       	bld	r25, 7
 680:	9f 67       	ori	r25, 0x7F	; 127
 682:	80 e8       	ldi	r24, 0x80	; 128
 684:	70 e0       	ldi	r23, 0x00	; 0
 686:	60 e0       	ldi	r22, 0x00	; 0
 688:	08 95       	ret

0000068a <__fp_nan>:
 68a:	9f ef       	ldi	r25, 0xFF	; 255
 68c:	80 ec       	ldi	r24, 0xC0	; 192
 68e:	08 95       	ret

00000690 <__fp_pscA>:
 690:	00 24       	eor	r0, r0
 692:	0a 94       	dec	r0
 694:	16 16       	cp	r1, r22
 696:	17 06       	cpc	r1, r23
 698:	18 06       	cpc	r1, r24
 69a:	09 06       	cpc	r0, r25
 69c:	08 95       	ret

0000069e <__fp_pscB>:
 69e:	00 24       	eor	r0, r0
 6a0:	0a 94       	dec	r0
 6a2:	12 16       	cp	r1, r18
 6a4:	13 06       	cpc	r1, r19
 6a6:	14 06       	cpc	r1, r20
 6a8:	05 06       	cpc	r0, r21
 6aa:	08 95       	ret

000006ac <__fp_round>:
 6ac:	09 2e       	mov	r0, r25
 6ae:	03 94       	inc	r0
 6b0:	00 0c       	add	r0, r0
 6b2:	11 f4       	brne	.+4      	; 0x6b8 <__fp_round+0xc>
 6b4:	88 23       	and	r24, r24
 6b6:	52 f0       	brmi	.+20     	; 0x6cc <__fp_round+0x20>
 6b8:	bb 0f       	add	r27, r27
 6ba:	40 f4       	brcc	.+16     	; 0x6cc <__fp_round+0x20>
 6bc:	bf 2b       	or	r27, r31
 6be:	11 f4       	brne	.+4      	; 0x6c4 <__fp_round+0x18>
 6c0:	60 ff       	sbrs	r22, 0
 6c2:	04 c0       	rjmp	.+8      	; 0x6cc <__fp_round+0x20>
 6c4:	6f 5f       	subi	r22, 0xFF	; 255
 6c6:	7f 4f       	sbci	r23, 0xFF	; 255
 6c8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ca:	9f 4f       	sbci	r25, 0xFF	; 255
 6cc:	08 95       	ret

000006ce <__fp_split3>:
 6ce:	57 fd       	sbrc	r21, 7
 6d0:	90 58       	subi	r25, 0x80	; 128
 6d2:	44 0f       	add	r20, r20
 6d4:	55 1f       	adc	r21, r21
 6d6:	59 f0       	breq	.+22     	; 0x6ee <__fp_splitA+0x10>
 6d8:	5f 3f       	cpi	r21, 0xFF	; 255
 6da:	71 f0       	breq	.+28     	; 0x6f8 <__fp_splitA+0x1a>
 6dc:	47 95       	ror	r20

000006de <__fp_splitA>:
 6de:	88 0f       	add	r24, r24
 6e0:	97 fb       	bst	r25, 7
 6e2:	99 1f       	adc	r25, r25
 6e4:	61 f0       	breq	.+24     	; 0x6fe <__fp_splitA+0x20>
 6e6:	9f 3f       	cpi	r25, 0xFF	; 255
 6e8:	79 f0       	breq	.+30     	; 0x708 <__fp_splitA+0x2a>
 6ea:	87 95       	ror	r24
 6ec:	08 95       	ret
 6ee:	12 16       	cp	r1, r18
 6f0:	13 06       	cpc	r1, r19
 6f2:	14 06       	cpc	r1, r20
 6f4:	55 1f       	adc	r21, r21
 6f6:	f2 cf       	rjmp	.-28     	; 0x6dc <__fp_split3+0xe>
 6f8:	46 95       	lsr	r20
 6fa:	f1 df       	rcall	.-30     	; 0x6de <__fp_splitA>
 6fc:	08 c0       	rjmp	.+16     	; 0x70e <__fp_splitA+0x30>
 6fe:	16 16       	cp	r1, r22
 700:	17 06       	cpc	r1, r23
 702:	18 06       	cpc	r1, r24
 704:	99 1f       	adc	r25, r25
 706:	f1 cf       	rjmp	.-30     	; 0x6ea <__fp_splitA+0xc>
 708:	86 95       	lsr	r24
 70a:	71 05       	cpc	r23, r1
 70c:	61 05       	cpc	r22, r1
 70e:	08 94       	sec
 710:	08 95       	ret

00000712 <__fp_zero>:
 712:	e8 94       	clt

00000714 <__fp_szero>:
 714:	bb 27       	eor	r27, r27
 716:	66 27       	eor	r22, r22
 718:	77 27       	eor	r23, r23
 71a:	cb 01       	movw	r24, r22
 71c:	97 f9       	bld	r25, 7
 71e:	08 95       	ret

00000720 <sprintf>:
 720:	ae e0       	ldi	r26, 0x0E	; 14
 722:	b0 e0       	ldi	r27, 0x00	; 0
 724:	e6 e9       	ldi	r30, 0x96	; 150
 726:	f3 e0       	ldi	r31, 0x03	; 3
 728:	0c 94 51 06 	jmp	0xca2	; 0xca2 <__prologue_saves__+0x1c>
 72c:	0d 89       	ldd	r16, Y+21	; 0x15
 72e:	1e 89       	ldd	r17, Y+22	; 0x16
 730:	86 e0       	ldi	r24, 0x06	; 6
 732:	8c 83       	std	Y+4, r24	; 0x04
 734:	1a 83       	std	Y+2, r17	; 0x02
 736:	09 83       	std	Y+1, r16	; 0x01
 738:	8f ef       	ldi	r24, 0xFF	; 255
 73a:	9f e7       	ldi	r25, 0x7F	; 127
 73c:	9e 83       	std	Y+6, r25	; 0x06
 73e:	8d 83       	std	Y+5, r24	; 0x05
 740:	ae 01       	movw	r20, r28
 742:	47 5e       	subi	r20, 0xE7	; 231
 744:	5f 4f       	sbci	r21, 0xFF	; 255
 746:	6f 89       	ldd	r22, Y+23	; 0x17
 748:	78 8d       	ldd	r23, Y+24	; 0x18
 74a:	ce 01       	movw	r24, r28
 74c:	01 96       	adiw	r24, 0x01	; 1
 74e:	0e 94 b2 03 	call	0x764	; 0x764 <vfprintf>
 752:	ef 81       	ldd	r30, Y+7	; 0x07
 754:	f8 85       	ldd	r31, Y+8	; 0x08
 756:	e0 0f       	add	r30, r16
 758:	f1 1f       	adc	r31, r17
 75a:	10 82       	st	Z, r1
 75c:	2e 96       	adiw	r28, 0x0e	; 14
 75e:	e4 e0       	ldi	r30, 0x04	; 4
 760:	0c 94 6d 06 	jmp	0xcda	; 0xcda <__epilogue_restores__+0x1c>

00000764 <vfprintf>:
 764:	ab e0       	ldi	r26, 0x0B	; 11
 766:	b0 e0       	ldi	r27, 0x00	; 0
 768:	e8 eb       	ldi	r30, 0xB8	; 184
 76a:	f3 e0       	ldi	r31, 0x03	; 3
 76c:	0c 94 43 06 	jmp	0xc86	; 0xc86 <__prologue_saves__>
 770:	6c 01       	movw	r12, r24
 772:	7b 01       	movw	r14, r22
 774:	8a 01       	movw	r16, r20
 776:	fc 01       	movw	r30, r24
 778:	17 82       	std	Z+7, r1	; 0x07
 77a:	16 82       	std	Z+6, r1	; 0x06
 77c:	83 81       	ldd	r24, Z+3	; 0x03
 77e:	81 ff       	sbrs	r24, 1
 780:	cc c1       	rjmp	.+920    	; 0xb1a <__stack+0x2bb>
 782:	ce 01       	movw	r24, r28
 784:	01 96       	adiw	r24, 0x01	; 1
 786:	3c 01       	movw	r6, r24
 788:	f6 01       	movw	r30, r12
 78a:	93 81       	ldd	r25, Z+3	; 0x03
 78c:	f7 01       	movw	r30, r14
 78e:	93 fd       	sbrc	r25, 3
 790:	85 91       	lpm	r24, Z+
 792:	93 ff       	sbrs	r25, 3
 794:	81 91       	ld	r24, Z+
 796:	7f 01       	movw	r14, r30
 798:	88 23       	and	r24, r24
 79a:	09 f4       	brne	.+2      	; 0x79e <vfprintf+0x3a>
 79c:	ba c1       	rjmp	.+884    	; 0xb12 <__stack+0x2b3>
 79e:	85 32       	cpi	r24, 0x25	; 37
 7a0:	39 f4       	brne	.+14     	; 0x7b0 <vfprintf+0x4c>
 7a2:	93 fd       	sbrc	r25, 3
 7a4:	85 91       	lpm	r24, Z+
 7a6:	93 ff       	sbrs	r25, 3
 7a8:	81 91       	ld	r24, Z+
 7aa:	7f 01       	movw	r14, r30
 7ac:	85 32       	cpi	r24, 0x25	; 37
 7ae:	29 f4       	brne	.+10     	; 0x7ba <vfprintf+0x56>
 7b0:	b6 01       	movw	r22, r12
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	0e 94 a9 05 	call	0xb52	; 0xb52 <fputc>
 7b8:	e7 cf       	rjmp	.-50     	; 0x788 <vfprintf+0x24>
 7ba:	91 2c       	mov	r9, r1
 7bc:	21 2c       	mov	r2, r1
 7be:	31 2c       	mov	r3, r1
 7c0:	ff e1       	ldi	r31, 0x1F	; 31
 7c2:	f3 15       	cp	r31, r3
 7c4:	d8 f0       	brcs	.+54     	; 0x7fc <vfprintf+0x98>
 7c6:	8b 32       	cpi	r24, 0x2B	; 43
 7c8:	79 f0       	breq	.+30     	; 0x7e8 <vfprintf+0x84>
 7ca:	38 f4       	brcc	.+14     	; 0x7da <vfprintf+0x76>
 7cc:	80 32       	cpi	r24, 0x20	; 32
 7ce:	79 f0       	breq	.+30     	; 0x7ee <vfprintf+0x8a>
 7d0:	83 32       	cpi	r24, 0x23	; 35
 7d2:	a1 f4       	brne	.+40     	; 0x7fc <vfprintf+0x98>
 7d4:	23 2d       	mov	r18, r3
 7d6:	20 61       	ori	r18, 0x10	; 16
 7d8:	1d c0       	rjmp	.+58     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7da:	8d 32       	cpi	r24, 0x2D	; 45
 7dc:	61 f0       	breq	.+24     	; 0x7f6 <vfprintf+0x92>
 7de:	80 33       	cpi	r24, 0x30	; 48
 7e0:	69 f4       	brne	.+26     	; 0x7fc <vfprintf+0x98>
 7e2:	23 2d       	mov	r18, r3
 7e4:	21 60       	ori	r18, 0x01	; 1
 7e6:	16 c0       	rjmp	.+44     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7e8:	83 2d       	mov	r24, r3
 7ea:	82 60       	ori	r24, 0x02	; 2
 7ec:	38 2e       	mov	r3, r24
 7ee:	e3 2d       	mov	r30, r3
 7f0:	e4 60       	ori	r30, 0x04	; 4
 7f2:	3e 2e       	mov	r3, r30
 7f4:	2a c0       	rjmp	.+84     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 7f6:	f3 2d       	mov	r31, r3
 7f8:	f8 60       	ori	r31, 0x08	; 8
 7fa:	1d c0       	rjmp	.+58     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 7fc:	37 fc       	sbrc	r3, 7
 7fe:	2d c0       	rjmp	.+90     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 800:	20 ed       	ldi	r18, 0xD0	; 208
 802:	28 0f       	add	r18, r24
 804:	2a 30       	cpi	r18, 0x0A	; 10
 806:	40 f0       	brcs	.+16     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 808:	8e 32       	cpi	r24, 0x2E	; 46
 80a:	b9 f4       	brne	.+46     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 80c:	36 fc       	sbrc	r3, 6
 80e:	81 c1       	rjmp	.+770    	; 0xb12 <__stack+0x2b3>
 810:	23 2d       	mov	r18, r3
 812:	20 64       	ori	r18, 0x40	; 64
 814:	32 2e       	mov	r3, r18
 816:	19 c0       	rjmp	.+50     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 818:	36 fe       	sbrs	r3, 6
 81a:	06 c0       	rjmp	.+12     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 81c:	8a e0       	ldi	r24, 0x0A	; 10
 81e:	98 9e       	mul	r9, r24
 820:	20 0d       	add	r18, r0
 822:	11 24       	eor	r1, r1
 824:	92 2e       	mov	r9, r18
 826:	11 c0       	rjmp	.+34     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 828:	ea e0       	ldi	r30, 0x0A	; 10
 82a:	2e 9e       	mul	r2, r30
 82c:	20 0d       	add	r18, r0
 82e:	11 24       	eor	r1, r1
 830:	22 2e       	mov	r2, r18
 832:	f3 2d       	mov	r31, r3
 834:	f0 62       	ori	r31, 0x20	; 32
 836:	3f 2e       	mov	r3, r31
 838:	08 c0       	rjmp	.+16     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 83a:	8c 36       	cpi	r24, 0x6C	; 108
 83c:	21 f4       	brne	.+8      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 83e:	83 2d       	mov	r24, r3
 840:	80 68       	ori	r24, 0x80	; 128
 842:	38 2e       	mov	r3, r24
 844:	02 c0       	rjmp	.+4      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 846:	88 36       	cpi	r24, 0x68	; 104
 848:	41 f4       	brne	.+16     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 84a:	f7 01       	movw	r30, r14
 84c:	93 fd       	sbrc	r25, 3
 84e:	85 91       	lpm	r24, Z+
 850:	93 ff       	sbrs	r25, 3
 852:	81 91       	ld	r24, Z+
 854:	7f 01       	movw	r14, r30
 856:	81 11       	cpse	r24, r1
 858:	b3 cf       	rjmp	.-154    	; 0x7c0 <vfprintf+0x5c>
 85a:	98 2f       	mov	r25, r24
 85c:	9f 7d       	andi	r25, 0xDF	; 223
 85e:	95 54       	subi	r25, 0x45	; 69
 860:	93 30       	cpi	r25, 0x03	; 3
 862:	28 f4       	brcc	.+10     	; 0x86e <__stack+0xf>
 864:	0c 5f       	subi	r16, 0xFC	; 252
 866:	1f 4f       	sbci	r17, 0xFF	; 255
 868:	9f e3       	ldi	r25, 0x3F	; 63
 86a:	99 83       	std	Y+1, r25	; 0x01
 86c:	0d c0       	rjmp	.+26     	; 0x888 <__stack+0x29>
 86e:	83 36       	cpi	r24, 0x63	; 99
 870:	31 f0       	breq	.+12     	; 0x87e <__stack+0x1f>
 872:	83 37       	cpi	r24, 0x73	; 115
 874:	71 f0       	breq	.+28     	; 0x892 <__stack+0x33>
 876:	83 35       	cpi	r24, 0x53	; 83
 878:	09 f0       	breq	.+2      	; 0x87c <__stack+0x1d>
 87a:	59 c0       	rjmp	.+178    	; 0x92e <__stack+0xcf>
 87c:	21 c0       	rjmp	.+66     	; 0x8c0 <__stack+0x61>
 87e:	f8 01       	movw	r30, r16
 880:	80 81       	ld	r24, Z
 882:	89 83       	std	Y+1, r24	; 0x01
 884:	0e 5f       	subi	r16, 0xFE	; 254
 886:	1f 4f       	sbci	r17, 0xFF	; 255
 888:	88 24       	eor	r8, r8
 88a:	83 94       	inc	r8
 88c:	91 2c       	mov	r9, r1
 88e:	53 01       	movw	r10, r6
 890:	13 c0       	rjmp	.+38     	; 0x8b8 <__stack+0x59>
 892:	28 01       	movw	r4, r16
 894:	f2 e0       	ldi	r31, 0x02	; 2
 896:	4f 0e       	add	r4, r31
 898:	51 1c       	adc	r5, r1
 89a:	f8 01       	movw	r30, r16
 89c:	a0 80       	ld	r10, Z
 89e:	b1 80       	ldd	r11, Z+1	; 0x01
 8a0:	36 fe       	sbrs	r3, 6
 8a2:	03 c0       	rjmp	.+6      	; 0x8aa <__stack+0x4b>
 8a4:	69 2d       	mov	r22, r9
 8a6:	70 e0       	ldi	r23, 0x00	; 0
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <__stack+0x4f>
 8aa:	6f ef       	ldi	r22, 0xFF	; 255
 8ac:	7f ef       	ldi	r23, 0xFF	; 255
 8ae:	c5 01       	movw	r24, r10
 8b0:	0e 94 9e 05 	call	0xb3c	; 0xb3c <strnlen>
 8b4:	4c 01       	movw	r8, r24
 8b6:	82 01       	movw	r16, r4
 8b8:	f3 2d       	mov	r31, r3
 8ba:	ff 77       	andi	r31, 0x7F	; 127
 8bc:	3f 2e       	mov	r3, r31
 8be:	16 c0       	rjmp	.+44     	; 0x8ec <__stack+0x8d>
 8c0:	28 01       	movw	r4, r16
 8c2:	22 e0       	ldi	r18, 0x02	; 2
 8c4:	42 0e       	add	r4, r18
 8c6:	51 1c       	adc	r5, r1
 8c8:	f8 01       	movw	r30, r16
 8ca:	a0 80       	ld	r10, Z
 8cc:	b1 80       	ldd	r11, Z+1	; 0x01
 8ce:	36 fe       	sbrs	r3, 6
 8d0:	03 c0       	rjmp	.+6      	; 0x8d8 <__stack+0x79>
 8d2:	69 2d       	mov	r22, r9
 8d4:	70 e0       	ldi	r23, 0x00	; 0
 8d6:	02 c0       	rjmp	.+4      	; 0x8dc <__stack+0x7d>
 8d8:	6f ef       	ldi	r22, 0xFF	; 255
 8da:	7f ef       	ldi	r23, 0xFF	; 255
 8dc:	c5 01       	movw	r24, r10
 8de:	0e 94 93 05 	call	0xb26	; 0xb26 <strnlen_P>
 8e2:	4c 01       	movw	r8, r24
 8e4:	f3 2d       	mov	r31, r3
 8e6:	f0 68       	ori	r31, 0x80	; 128
 8e8:	3f 2e       	mov	r3, r31
 8ea:	82 01       	movw	r16, r4
 8ec:	33 fc       	sbrc	r3, 3
 8ee:	1b c0       	rjmp	.+54     	; 0x926 <__stack+0xc7>
 8f0:	82 2d       	mov	r24, r2
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	88 16       	cp	r8, r24
 8f6:	99 06       	cpc	r9, r25
 8f8:	b0 f4       	brcc	.+44     	; 0x926 <__stack+0xc7>
 8fa:	b6 01       	movw	r22, r12
 8fc:	80 e2       	ldi	r24, 0x20	; 32
 8fe:	90 e0       	ldi	r25, 0x00	; 0
 900:	0e 94 a9 05 	call	0xb52	; 0xb52 <fputc>
 904:	2a 94       	dec	r2
 906:	f4 cf       	rjmp	.-24     	; 0x8f0 <__stack+0x91>
 908:	f5 01       	movw	r30, r10
 90a:	37 fc       	sbrc	r3, 7
 90c:	85 91       	lpm	r24, Z+
 90e:	37 fe       	sbrs	r3, 7
 910:	81 91       	ld	r24, Z+
 912:	5f 01       	movw	r10, r30
 914:	b6 01       	movw	r22, r12
 916:	90 e0       	ldi	r25, 0x00	; 0
 918:	0e 94 a9 05 	call	0xb52	; 0xb52 <fputc>
 91c:	21 10       	cpse	r2, r1
 91e:	2a 94       	dec	r2
 920:	21 e0       	ldi	r18, 0x01	; 1
 922:	82 1a       	sub	r8, r18
 924:	91 08       	sbc	r9, r1
 926:	81 14       	cp	r8, r1
 928:	91 04       	cpc	r9, r1
 92a:	71 f7       	brne	.-36     	; 0x908 <__stack+0xa9>
 92c:	e8 c0       	rjmp	.+464    	; 0xafe <__stack+0x29f>
 92e:	84 36       	cpi	r24, 0x64	; 100
 930:	11 f0       	breq	.+4      	; 0x936 <__stack+0xd7>
 932:	89 36       	cpi	r24, 0x69	; 105
 934:	41 f5       	brne	.+80     	; 0x986 <__stack+0x127>
 936:	f8 01       	movw	r30, r16
 938:	37 fe       	sbrs	r3, 7
 93a:	07 c0       	rjmp	.+14     	; 0x94a <__stack+0xeb>
 93c:	60 81       	ld	r22, Z
 93e:	71 81       	ldd	r23, Z+1	; 0x01
 940:	82 81       	ldd	r24, Z+2	; 0x02
 942:	93 81       	ldd	r25, Z+3	; 0x03
 944:	0c 5f       	subi	r16, 0xFC	; 252
 946:	1f 4f       	sbci	r17, 0xFF	; 255
 948:	08 c0       	rjmp	.+16     	; 0x95a <__stack+0xfb>
 94a:	60 81       	ld	r22, Z
 94c:	71 81       	ldd	r23, Z+1	; 0x01
 94e:	07 2e       	mov	r0, r23
 950:	00 0c       	add	r0, r0
 952:	88 0b       	sbc	r24, r24
 954:	99 0b       	sbc	r25, r25
 956:	0e 5f       	subi	r16, 0xFE	; 254
 958:	1f 4f       	sbci	r17, 0xFF	; 255
 95a:	f3 2d       	mov	r31, r3
 95c:	ff 76       	andi	r31, 0x6F	; 111
 95e:	3f 2e       	mov	r3, r31
 960:	97 ff       	sbrs	r25, 7
 962:	09 c0       	rjmp	.+18     	; 0x976 <__stack+0x117>
 964:	90 95       	com	r25
 966:	80 95       	com	r24
 968:	70 95       	com	r23
 96a:	61 95       	neg	r22
 96c:	7f 4f       	sbci	r23, 0xFF	; 255
 96e:	8f 4f       	sbci	r24, 0xFF	; 255
 970:	9f 4f       	sbci	r25, 0xFF	; 255
 972:	f0 68       	ori	r31, 0x80	; 128
 974:	3f 2e       	mov	r3, r31
 976:	2a e0       	ldi	r18, 0x0A	; 10
 978:	30 e0       	ldi	r19, 0x00	; 0
 97a:	a3 01       	movw	r20, r6
 97c:	0e 94 e5 05 	call	0xbca	; 0xbca <__ultoa_invert>
 980:	88 2e       	mov	r8, r24
 982:	86 18       	sub	r8, r6
 984:	45 c0       	rjmp	.+138    	; 0xa10 <__stack+0x1b1>
 986:	85 37       	cpi	r24, 0x75	; 117
 988:	31 f4       	brne	.+12     	; 0x996 <__stack+0x137>
 98a:	23 2d       	mov	r18, r3
 98c:	2f 7e       	andi	r18, 0xEF	; 239
 98e:	b2 2e       	mov	r11, r18
 990:	2a e0       	ldi	r18, 0x0A	; 10
 992:	30 e0       	ldi	r19, 0x00	; 0
 994:	25 c0       	rjmp	.+74     	; 0x9e0 <__stack+0x181>
 996:	93 2d       	mov	r25, r3
 998:	99 7f       	andi	r25, 0xF9	; 249
 99a:	b9 2e       	mov	r11, r25
 99c:	8f 36       	cpi	r24, 0x6F	; 111
 99e:	c1 f0       	breq	.+48     	; 0x9d0 <__stack+0x171>
 9a0:	18 f4       	brcc	.+6      	; 0x9a8 <__stack+0x149>
 9a2:	88 35       	cpi	r24, 0x58	; 88
 9a4:	79 f0       	breq	.+30     	; 0x9c4 <__stack+0x165>
 9a6:	b5 c0       	rjmp	.+362    	; 0xb12 <__stack+0x2b3>
 9a8:	80 37       	cpi	r24, 0x70	; 112
 9aa:	19 f0       	breq	.+6      	; 0x9b2 <__stack+0x153>
 9ac:	88 37       	cpi	r24, 0x78	; 120
 9ae:	21 f0       	breq	.+8      	; 0x9b8 <__stack+0x159>
 9b0:	b0 c0       	rjmp	.+352    	; 0xb12 <__stack+0x2b3>
 9b2:	e9 2f       	mov	r30, r25
 9b4:	e0 61       	ori	r30, 0x10	; 16
 9b6:	be 2e       	mov	r11, r30
 9b8:	b4 fe       	sbrs	r11, 4
 9ba:	0d c0       	rjmp	.+26     	; 0x9d6 <__stack+0x177>
 9bc:	fb 2d       	mov	r31, r11
 9be:	f4 60       	ori	r31, 0x04	; 4
 9c0:	bf 2e       	mov	r11, r31
 9c2:	09 c0       	rjmp	.+18     	; 0x9d6 <__stack+0x177>
 9c4:	34 fe       	sbrs	r3, 4
 9c6:	0a c0       	rjmp	.+20     	; 0x9dc <__stack+0x17d>
 9c8:	29 2f       	mov	r18, r25
 9ca:	26 60       	ori	r18, 0x06	; 6
 9cc:	b2 2e       	mov	r11, r18
 9ce:	06 c0       	rjmp	.+12     	; 0x9dc <__stack+0x17d>
 9d0:	28 e0       	ldi	r18, 0x08	; 8
 9d2:	30 e0       	ldi	r19, 0x00	; 0
 9d4:	05 c0       	rjmp	.+10     	; 0x9e0 <__stack+0x181>
 9d6:	20 e1       	ldi	r18, 0x10	; 16
 9d8:	30 e0       	ldi	r19, 0x00	; 0
 9da:	02 c0       	rjmp	.+4      	; 0x9e0 <__stack+0x181>
 9dc:	20 e1       	ldi	r18, 0x10	; 16
 9de:	32 e0       	ldi	r19, 0x02	; 2
 9e0:	f8 01       	movw	r30, r16
 9e2:	b7 fe       	sbrs	r11, 7
 9e4:	07 c0       	rjmp	.+14     	; 0x9f4 <__stack+0x195>
 9e6:	60 81       	ld	r22, Z
 9e8:	71 81       	ldd	r23, Z+1	; 0x01
 9ea:	82 81       	ldd	r24, Z+2	; 0x02
 9ec:	93 81       	ldd	r25, Z+3	; 0x03
 9ee:	0c 5f       	subi	r16, 0xFC	; 252
 9f0:	1f 4f       	sbci	r17, 0xFF	; 255
 9f2:	06 c0       	rjmp	.+12     	; 0xa00 <__stack+0x1a1>
 9f4:	60 81       	ld	r22, Z
 9f6:	71 81       	ldd	r23, Z+1	; 0x01
 9f8:	80 e0       	ldi	r24, 0x00	; 0
 9fa:	90 e0       	ldi	r25, 0x00	; 0
 9fc:	0e 5f       	subi	r16, 0xFE	; 254
 9fe:	1f 4f       	sbci	r17, 0xFF	; 255
 a00:	a3 01       	movw	r20, r6
 a02:	0e 94 e5 05 	call	0xbca	; 0xbca <__ultoa_invert>
 a06:	88 2e       	mov	r8, r24
 a08:	86 18       	sub	r8, r6
 a0a:	fb 2d       	mov	r31, r11
 a0c:	ff 77       	andi	r31, 0x7F	; 127
 a0e:	3f 2e       	mov	r3, r31
 a10:	36 fe       	sbrs	r3, 6
 a12:	0d c0       	rjmp	.+26     	; 0xa2e <__stack+0x1cf>
 a14:	23 2d       	mov	r18, r3
 a16:	2e 7f       	andi	r18, 0xFE	; 254
 a18:	a2 2e       	mov	r10, r18
 a1a:	89 14       	cp	r8, r9
 a1c:	58 f4       	brcc	.+22     	; 0xa34 <__stack+0x1d5>
 a1e:	34 fe       	sbrs	r3, 4
 a20:	0b c0       	rjmp	.+22     	; 0xa38 <__stack+0x1d9>
 a22:	32 fc       	sbrc	r3, 2
 a24:	09 c0       	rjmp	.+18     	; 0xa38 <__stack+0x1d9>
 a26:	83 2d       	mov	r24, r3
 a28:	8e 7e       	andi	r24, 0xEE	; 238
 a2a:	a8 2e       	mov	r10, r24
 a2c:	05 c0       	rjmp	.+10     	; 0xa38 <__stack+0x1d9>
 a2e:	b8 2c       	mov	r11, r8
 a30:	a3 2c       	mov	r10, r3
 a32:	03 c0       	rjmp	.+6      	; 0xa3a <__stack+0x1db>
 a34:	b8 2c       	mov	r11, r8
 a36:	01 c0       	rjmp	.+2      	; 0xa3a <__stack+0x1db>
 a38:	b9 2c       	mov	r11, r9
 a3a:	a4 fe       	sbrs	r10, 4
 a3c:	0f c0       	rjmp	.+30     	; 0xa5c <__stack+0x1fd>
 a3e:	fe 01       	movw	r30, r28
 a40:	e8 0d       	add	r30, r8
 a42:	f1 1d       	adc	r31, r1
 a44:	80 81       	ld	r24, Z
 a46:	80 33       	cpi	r24, 0x30	; 48
 a48:	21 f4       	brne	.+8      	; 0xa52 <__stack+0x1f3>
 a4a:	9a 2d       	mov	r25, r10
 a4c:	99 7e       	andi	r25, 0xE9	; 233
 a4e:	a9 2e       	mov	r10, r25
 a50:	09 c0       	rjmp	.+18     	; 0xa64 <__stack+0x205>
 a52:	a2 fe       	sbrs	r10, 2
 a54:	06 c0       	rjmp	.+12     	; 0xa62 <__stack+0x203>
 a56:	b3 94       	inc	r11
 a58:	b3 94       	inc	r11
 a5a:	04 c0       	rjmp	.+8      	; 0xa64 <__stack+0x205>
 a5c:	8a 2d       	mov	r24, r10
 a5e:	86 78       	andi	r24, 0x86	; 134
 a60:	09 f0       	breq	.+2      	; 0xa64 <__stack+0x205>
 a62:	b3 94       	inc	r11
 a64:	a3 fc       	sbrc	r10, 3
 a66:	11 c0       	rjmp	.+34     	; 0xa8a <__stack+0x22b>
 a68:	a0 fe       	sbrs	r10, 0
 a6a:	06 c0       	rjmp	.+12     	; 0xa78 <__stack+0x219>
 a6c:	b2 14       	cp	r11, r2
 a6e:	88 f4       	brcc	.+34     	; 0xa92 <__stack+0x233>
 a70:	28 0c       	add	r2, r8
 a72:	92 2c       	mov	r9, r2
 a74:	9b 18       	sub	r9, r11
 a76:	0e c0       	rjmp	.+28     	; 0xa94 <__stack+0x235>
 a78:	b2 14       	cp	r11, r2
 a7a:	60 f4       	brcc	.+24     	; 0xa94 <__stack+0x235>
 a7c:	b6 01       	movw	r22, r12
 a7e:	80 e2       	ldi	r24, 0x20	; 32
 a80:	90 e0       	ldi	r25, 0x00	; 0
 a82:	0e 94 a9 05 	call	0xb52	; 0xb52 <fputc>
 a86:	b3 94       	inc	r11
 a88:	f7 cf       	rjmp	.-18     	; 0xa78 <__stack+0x219>
 a8a:	b2 14       	cp	r11, r2
 a8c:	18 f4       	brcc	.+6      	; 0xa94 <__stack+0x235>
 a8e:	2b 18       	sub	r2, r11
 a90:	02 c0       	rjmp	.+4      	; 0xa96 <__stack+0x237>
 a92:	98 2c       	mov	r9, r8
 a94:	21 2c       	mov	r2, r1
 a96:	a4 fe       	sbrs	r10, 4
 a98:	10 c0       	rjmp	.+32     	; 0xaba <__stack+0x25b>
 a9a:	b6 01       	movw	r22, r12
 a9c:	80 e3       	ldi	r24, 0x30	; 48
 a9e:	90 e0       	ldi	r25, 0x00	; 0
 aa0:	0e 94 a9 05 	call	0xb52	; 0xb52 <fputc>
 aa4:	a2 fe       	sbrs	r10, 2
 aa6:	17 c0       	rjmp	.+46     	; 0xad6 <__stack+0x277>
 aa8:	a1 fc       	sbrc	r10, 1
 aaa:	03 c0       	rjmp	.+6      	; 0xab2 <__stack+0x253>
 aac:	88 e7       	ldi	r24, 0x78	; 120
 aae:	90 e0       	ldi	r25, 0x00	; 0
 ab0:	02 c0       	rjmp	.+4      	; 0xab6 <__stack+0x257>
 ab2:	88 e5       	ldi	r24, 0x58	; 88
 ab4:	90 e0       	ldi	r25, 0x00	; 0
 ab6:	b6 01       	movw	r22, r12
 ab8:	0c c0       	rjmp	.+24     	; 0xad2 <__stack+0x273>
 aba:	8a 2d       	mov	r24, r10
 abc:	86 78       	andi	r24, 0x86	; 134
 abe:	59 f0       	breq	.+22     	; 0xad6 <__stack+0x277>
 ac0:	a1 fe       	sbrs	r10, 1
 ac2:	02 c0       	rjmp	.+4      	; 0xac8 <__stack+0x269>
 ac4:	8b e2       	ldi	r24, 0x2B	; 43
 ac6:	01 c0       	rjmp	.+2      	; 0xaca <__stack+0x26b>
 ac8:	80 e2       	ldi	r24, 0x20	; 32
 aca:	a7 fc       	sbrc	r10, 7
 acc:	8d e2       	ldi	r24, 0x2D	; 45
 ace:	b6 01       	movw	r22, r12
 ad0:	90 e0       	ldi	r25, 0x00	; 0
 ad2:	0e 94 a9 05 	call	0xb52	; 0xb52 <fputc>
 ad6:	89 14       	cp	r8, r9
 ad8:	38 f4       	brcc	.+14     	; 0xae8 <__stack+0x289>
 ada:	b6 01       	movw	r22, r12
 adc:	80 e3       	ldi	r24, 0x30	; 48
 ade:	90 e0       	ldi	r25, 0x00	; 0
 ae0:	0e 94 a9 05 	call	0xb52	; 0xb52 <fputc>
 ae4:	9a 94       	dec	r9
 ae6:	f7 cf       	rjmp	.-18     	; 0xad6 <__stack+0x277>
 ae8:	8a 94       	dec	r8
 aea:	f3 01       	movw	r30, r6
 aec:	e8 0d       	add	r30, r8
 aee:	f1 1d       	adc	r31, r1
 af0:	80 81       	ld	r24, Z
 af2:	b6 01       	movw	r22, r12
 af4:	90 e0       	ldi	r25, 0x00	; 0
 af6:	0e 94 a9 05 	call	0xb52	; 0xb52 <fputc>
 afa:	81 10       	cpse	r8, r1
 afc:	f5 cf       	rjmp	.-22     	; 0xae8 <__stack+0x289>
 afe:	22 20       	and	r2, r2
 b00:	09 f4       	brne	.+2      	; 0xb04 <__stack+0x2a5>
 b02:	42 ce       	rjmp	.-892    	; 0x788 <vfprintf+0x24>
 b04:	b6 01       	movw	r22, r12
 b06:	80 e2       	ldi	r24, 0x20	; 32
 b08:	90 e0       	ldi	r25, 0x00	; 0
 b0a:	0e 94 a9 05 	call	0xb52	; 0xb52 <fputc>
 b0e:	2a 94       	dec	r2
 b10:	f6 cf       	rjmp	.-20     	; 0xafe <__stack+0x29f>
 b12:	f6 01       	movw	r30, r12
 b14:	86 81       	ldd	r24, Z+6	; 0x06
 b16:	97 81       	ldd	r25, Z+7	; 0x07
 b18:	02 c0       	rjmp	.+4      	; 0xb1e <__stack+0x2bf>
 b1a:	8f ef       	ldi	r24, 0xFF	; 255
 b1c:	9f ef       	ldi	r25, 0xFF	; 255
 b1e:	2b 96       	adiw	r28, 0x0b	; 11
 b20:	e2 e1       	ldi	r30, 0x12	; 18
 b22:	0c 94 5f 06 	jmp	0xcbe	; 0xcbe <__epilogue_restores__>

00000b26 <strnlen_P>:
 b26:	fc 01       	movw	r30, r24
 b28:	05 90       	lpm	r0, Z+
 b2a:	61 50       	subi	r22, 0x01	; 1
 b2c:	70 40       	sbci	r23, 0x00	; 0
 b2e:	01 10       	cpse	r0, r1
 b30:	d8 f7       	brcc	.-10     	; 0xb28 <strnlen_P+0x2>
 b32:	80 95       	com	r24
 b34:	90 95       	com	r25
 b36:	8e 0f       	add	r24, r30
 b38:	9f 1f       	adc	r25, r31
 b3a:	08 95       	ret

00000b3c <strnlen>:
 b3c:	fc 01       	movw	r30, r24
 b3e:	61 50       	subi	r22, 0x01	; 1
 b40:	70 40       	sbci	r23, 0x00	; 0
 b42:	01 90       	ld	r0, Z+
 b44:	01 10       	cpse	r0, r1
 b46:	d8 f7       	brcc	.-10     	; 0xb3e <strnlen+0x2>
 b48:	80 95       	com	r24
 b4a:	90 95       	com	r25
 b4c:	8e 0f       	add	r24, r30
 b4e:	9f 1f       	adc	r25, r31
 b50:	08 95       	ret

00000b52 <fputc>:
 b52:	0f 93       	push	r16
 b54:	1f 93       	push	r17
 b56:	cf 93       	push	r28
 b58:	df 93       	push	r29
 b5a:	fb 01       	movw	r30, r22
 b5c:	23 81       	ldd	r18, Z+3	; 0x03
 b5e:	21 fd       	sbrc	r18, 1
 b60:	03 c0       	rjmp	.+6      	; 0xb68 <fputc+0x16>
 b62:	8f ef       	ldi	r24, 0xFF	; 255
 b64:	9f ef       	ldi	r25, 0xFF	; 255
 b66:	2c c0       	rjmp	.+88     	; 0xbc0 <fputc+0x6e>
 b68:	22 ff       	sbrs	r18, 2
 b6a:	16 c0       	rjmp	.+44     	; 0xb98 <fputc+0x46>
 b6c:	46 81       	ldd	r20, Z+6	; 0x06
 b6e:	57 81       	ldd	r21, Z+7	; 0x07
 b70:	24 81       	ldd	r18, Z+4	; 0x04
 b72:	35 81       	ldd	r19, Z+5	; 0x05
 b74:	42 17       	cp	r20, r18
 b76:	53 07       	cpc	r21, r19
 b78:	44 f4       	brge	.+16     	; 0xb8a <fputc+0x38>
 b7a:	a0 81       	ld	r26, Z
 b7c:	b1 81       	ldd	r27, Z+1	; 0x01
 b7e:	9d 01       	movw	r18, r26
 b80:	2f 5f       	subi	r18, 0xFF	; 255
 b82:	3f 4f       	sbci	r19, 0xFF	; 255
 b84:	31 83       	std	Z+1, r19	; 0x01
 b86:	20 83       	st	Z, r18
 b88:	8c 93       	st	X, r24
 b8a:	26 81       	ldd	r18, Z+6	; 0x06
 b8c:	37 81       	ldd	r19, Z+7	; 0x07
 b8e:	2f 5f       	subi	r18, 0xFF	; 255
 b90:	3f 4f       	sbci	r19, 0xFF	; 255
 b92:	37 83       	std	Z+7, r19	; 0x07
 b94:	26 83       	std	Z+6, r18	; 0x06
 b96:	14 c0       	rjmp	.+40     	; 0xbc0 <fputc+0x6e>
 b98:	8b 01       	movw	r16, r22
 b9a:	ec 01       	movw	r28, r24
 b9c:	fb 01       	movw	r30, r22
 b9e:	00 84       	ldd	r0, Z+8	; 0x08
 ba0:	f1 85       	ldd	r31, Z+9	; 0x09
 ba2:	e0 2d       	mov	r30, r0
 ba4:	09 95       	icall
 ba6:	89 2b       	or	r24, r25
 ba8:	e1 f6       	brne	.-72     	; 0xb62 <fputc+0x10>
 baa:	d8 01       	movw	r26, r16
 bac:	16 96       	adiw	r26, 0x06	; 6
 bae:	8d 91       	ld	r24, X+
 bb0:	9c 91       	ld	r25, X
 bb2:	17 97       	sbiw	r26, 0x07	; 7
 bb4:	01 96       	adiw	r24, 0x01	; 1
 bb6:	17 96       	adiw	r26, 0x07	; 7
 bb8:	9c 93       	st	X, r25
 bba:	8e 93       	st	-X, r24
 bbc:	16 97       	sbiw	r26, 0x06	; 6
 bbe:	ce 01       	movw	r24, r28
 bc0:	df 91       	pop	r29
 bc2:	cf 91       	pop	r28
 bc4:	1f 91       	pop	r17
 bc6:	0f 91       	pop	r16
 bc8:	08 95       	ret

00000bca <__ultoa_invert>:
 bca:	fa 01       	movw	r30, r20
 bcc:	aa 27       	eor	r26, r26
 bce:	28 30       	cpi	r18, 0x08	; 8
 bd0:	51 f1       	breq	.+84     	; 0xc26 <__ultoa_invert+0x5c>
 bd2:	20 31       	cpi	r18, 0x10	; 16
 bd4:	81 f1       	breq	.+96     	; 0xc36 <__ultoa_invert+0x6c>
 bd6:	e8 94       	clt
 bd8:	6f 93       	push	r22
 bda:	6e 7f       	andi	r22, 0xFE	; 254
 bdc:	6e 5f       	subi	r22, 0xFE	; 254
 bde:	7f 4f       	sbci	r23, 0xFF	; 255
 be0:	8f 4f       	sbci	r24, 0xFF	; 255
 be2:	9f 4f       	sbci	r25, 0xFF	; 255
 be4:	af 4f       	sbci	r26, 0xFF	; 255
 be6:	b1 e0       	ldi	r27, 0x01	; 1
 be8:	3e d0       	rcall	.+124    	; 0xc66 <__ultoa_invert+0x9c>
 bea:	b4 e0       	ldi	r27, 0x04	; 4
 bec:	3c d0       	rcall	.+120    	; 0xc66 <__ultoa_invert+0x9c>
 bee:	67 0f       	add	r22, r23
 bf0:	78 1f       	adc	r23, r24
 bf2:	89 1f       	adc	r24, r25
 bf4:	9a 1f       	adc	r25, r26
 bf6:	a1 1d       	adc	r26, r1
 bf8:	68 0f       	add	r22, r24
 bfa:	79 1f       	adc	r23, r25
 bfc:	8a 1f       	adc	r24, r26
 bfe:	91 1d       	adc	r25, r1
 c00:	a1 1d       	adc	r26, r1
 c02:	6a 0f       	add	r22, r26
 c04:	71 1d       	adc	r23, r1
 c06:	81 1d       	adc	r24, r1
 c08:	91 1d       	adc	r25, r1
 c0a:	a1 1d       	adc	r26, r1
 c0c:	20 d0       	rcall	.+64     	; 0xc4e <__ultoa_invert+0x84>
 c0e:	09 f4       	brne	.+2      	; 0xc12 <__ultoa_invert+0x48>
 c10:	68 94       	set
 c12:	3f 91       	pop	r19
 c14:	2a e0       	ldi	r18, 0x0A	; 10
 c16:	26 9f       	mul	r18, r22
 c18:	11 24       	eor	r1, r1
 c1a:	30 19       	sub	r19, r0
 c1c:	30 5d       	subi	r19, 0xD0	; 208
 c1e:	31 93       	st	Z+, r19
 c20:	de f6       	brtc	.-74     	; 0xbd8 <__ultoa_invert+0xe>
 c22:	cf 01       	movw	r24, r30
 c24:	08 95       	ret
 c26:	46 2f       	mov	r20, r22
 c28:	47 70       	andi	r20, 0x07	; 7
 c2a:	40 5d       	subi	r20, 0xD0	; 208
 c2c:	41 93       	st	Z+, r20
 c2e:	b3 e0       	ldi	r27, 0x03	; 3
 c30:	0f d0       	rcall	.+30     	; 0xc50 <__ultoa_invert+0x86>
 c32:	c9 f7       	brne	.-14     	; 0xc26 <__ultoa_invert+0x5c>
 c34:	f6 cf       	rjmp	.-20     	; 0xc22 <__ultoa_invert+0x58>
 c36:	46 2f       	mov	r20, r22
 c38:	4f 70       	andi	r20, 0x0F	; 15
 c3a:	40 5d       	subi	r20, 0xD0	; 208
 c3c:	4a 33       	cpi	r20, 0x3A	; 58
 c3e:	18 f0       	brcs	.+6      	; 0xc46 <__ultoa_invert+0x7c>
 c40:	49 5d       	subi	r20, 0xD9	; 217
 c42:	31 fd       	sbrc	r19, 1
 c44:	40 52       	subi	r20, 0x20	; 32
 c46:	41 93       	st	Z+, r20
 c48:	02 d0       	rcall	.+4      	; 0xc4e <__ultoa_invert+0x84>
 c4a:	a9 f7       	brne	.-22     	; 0xc36 <__ultoa_invert+0x6c>
 c4c:	ea cf       	rjmp	.-44     	; 0xc22 <__ultoa_invert+0x58>
 c4e:	b4 e0       	ldi	r27, 0x04	; 4
 c50:	a6 95       	lsr	r26
 c52:	97 95       	ror	r25
 c54:	87 95       	ror	r24
 c56:	77 95       	ror	r23
 c58:	67 95       	ror	r22
 c5a:	ba 95       	dec	r27
 c5c:	c9 f7       	brne	.-14     	; 0xc50 <__ultoa_invert+0x86>
 c5e:	00 97       	sbiw	r24, 0x00	; 0
 c60:	61 05       	cpc	r22, r1
 c62:	71 05       	cpc	r23, r1
 c64:	08 95       	ret
 c66:	9b 01       	movw	r18, r22
 c68:	ac 01       	movw	r20, r24
 c6a:	0a 2e       	mov	r0, r26
 c6c:	06 94       	lsr	r0
 c6e:	57 95       	ror	r21
 c70:	47 95       	ror	r20
 c72:	37 95       	ror	r19
 c74:	27 95       	ror	r18
 c76:	ba 95       	dec	r27
 c78:	c9 f7       	brne	.-14     	; 0xc6c <__ultoa_invert+0xa2>
 c7a:	62 0f       	add	r22, r18
 c7c:	73 1f       	adc	r23, r19
 c7e:	84 1f       	adc	r24, r20
 c80:	95 1f       	adc	r25, r21
 c82:	a0 1d       	adc	r26, r0
 c84:	08 95       	ret

00000c86 <__prologue_saves__>:
 c86:	2f 92       	push	r2
 c88:	3f 92       	push	r3
 c8a:	4f 92       	push	r4
 c8c:	5f 92       	push	r5
 c8e:	6f 92       	push	r6
 c90:	7f 92       	push	r7
 c92:	8f 92       	push	r8
 c94:	9f 92       	push	r9
 c96:	af 92       	push	r10
 c98:	bf 92       	push	r11
 c9a:	cf 92       	push	r12
 c9c:	df 92       	push	r13
 c9e:	ef 92       	push	r14
 ca0:	ff 92       	push	r15
 ca2:	0f 93       	push	r16
 ca4:	1f 93       	push	r17
 ca6:	cf 93       	push	r28
 ca8:	df 93       	push	r29
 caa:	cd b7       	in	r28, 0x3d	; 61
 cac:	de b7       	in	r29, 0x3e	; 62
 cae:	ca 1b       	sub	r28, r26
 cb0:	db 0b       	sbc	r29, r27
 cb2:	0f b6       	in	r0, 0x3f	; 63
 cb4:	f8 94       	cli
 cb6:	de bf       	out	0x3e, r29	; 62
 cb8:	0f be       	out	0x3f, r0	; 63
 cba:	cd bf       	out	0x3d, r28	; 61
 cbc:	09 94       	ijmp

00000cbe <__epilogue_restores__>:
 cbe:	2a 88       	ldd	r2, Y+18	; 0x12
 cc0:	39 88       	ldd	r3, Y+17	; 0x11
 cc2:	48 88       	ldd	r4, Y+16	; 0x10
 cc4:	5f 84       	ldd	r5, Y+15	; 0x0f
 cc6:	6e 84       	ldd	r6, Y+14	; 0x0e
 cc8:	7d 84       	ldd	r7, Y+13	; 0x0d
 cca:	8c 84       	ldd	r8, Y+12	; 0x0c
 ccc:	9b 84       	ldd	r9, Y+11	; 0x0b
 cce:	aa 84       	ldd	r10, Y+10	; 0x0a
 cd0:	b9 84       	ldd	r11, Y+9	; 0x09
 cd2:	c8 84       	ldd	r12, Y+8	; 0x08
 cd4:	df 80       	ldd	r13, Y+7	; 0x07
 cd6:	ee 80       	ldd	r14, Y+6	; 0x06
 cd8:	fd 80       	ldd	r15, Y+5	; 0x05
 cda:	0c 81       	ldd	r16, Y+4	; 0x04
 cdc:	1b 81       	ldd	r17, Y+3	; 0x03
 cde:	aa 81       	ldd	r26, Y+2	; 0x02
 ce0:	b9 81       	ldd	r27, Y+1	; 0x01
 ce2:	ce 0f       	add	r28, r30
 ce4:	d1 1d       	adc	r29, r1
 ce6:	0f b6       	in	r0, 0x3f	; 63
 ce8:	f8 94       	cli
 cea:	de bf       	out	0x3e, r29	; 62
 cec:	0f be       	out	0x3f, r0	; 63
 cee:	cd bf       	out	0x3d, r28	; 61
 cf0:	ed 01       	movw	r28, r26
 cf2:	08 95       	ret

00000cf4 <_exit>:
 cf4:	f8 94       	cli

00000cf6 <__stop_program>:
 cf6:	ff cf       	rjmp	.-2      	; 0xcf6 <__stop_program>
