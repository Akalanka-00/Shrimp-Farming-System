
Individual_Contribution.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000bd8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  00000bd8  00000c6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800086  00800086  00000c92  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c92  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000cf0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d35  00000000  00000000  00000dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000070e  00000000  00000000  00001b09  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000687  00000000  00000000  00002217  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b0  00000000  00000000  000028a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a8  00000000  00000000  00002a50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000669  00000000  00000000  00002ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003561  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ed       	ldi	r30, 0xD8	; 216
  68:	fb e0       	ldi	r31, 0x0B	; 11
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 38       	cpi	r26, 0x86	; 134
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e8       	ldi	r26, 0x86	; 134
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 3a       	cpi	r26, 0xA0	; 160
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 7d 01 	call	0x2fa	; 0x2fa <main>
  8a:	0c 94 ea 05 	jmp	0xbd4	; 0xbd4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <TWIInit>:
		LcdChar(str[i]);
	}
}
void LcdCursor(uint8_t Cursor){
	if (Cursor==0)
	{LcdCommand(0xC);
  92:	11 b8       	out	0x01, r1	; 1
  94:	88 e4       	ldi	r24, 0x48	; 72
  96:	80 b9       	out	0x00, r24	; 0
  98:	84 e0       	ldi	r24, 0x04	; 4
  9a:	86 bf       	out	0x36, r24	; 54
  9c:	08 95       	ret

0000009e <TWIStart>:
  9e:	84 ea       	ldi	r24, 0xA4	; 164
  a0:	86 bf       	out	0x36, r24	; 54
  a2:	06 b6       	in	r0, 0x36	; 54
  a4:	07 fe       	sbrs	r0, 7
  a6:	fd cf       	rjmp	.-6      	; 0xa2 <TWIStart+0x4>
  a8:	08 95       	ret

000000aa <TWIStop>:
  aa:	84 e9       	ldi	r24, 0x94	; 148
  ac:	86 bf       	out	0x36, r24	; 54
  ae:	06 b6       	in	r0, 0x36	; 54
  b0:	04 fc       	sbrc	r0, 4
  b2:	fd cf       	rjmp	.-6      	; 0xae <TWIStop+0x4>
  b4:	08 95       	ret

000000b6 <TWIWriteAddrs>:
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	86 2b       	or	r24, r22
  be:	83 b9       	out	0x03, r24	; 3
  c0:	84 e8       	ldi	r24, 0x84	; 132
  c2:	86 bf       	out	0x36, r24	; 54
  c4:	06 b6       	in	r0, 0x36	; 54
  c6:	07 fe       	sbrs	r0, 7
  c8:	fd cf       	rjmp	.-6      	; 0xc4 <TWIWriteAddrs+0xe>
  ca:	81 b1       	in	r24, 0x01	; 1
  cc:	88 7f       	andi	r24, 0xF8	; 248
  ce:	08 95       	ret

000000d0 <TWIWriteData>:
  d0:	83 b9       	out	0x03, r24	; 3
  d2:	84 e8       	ldi	r24, 0x84	; 132
  d4:	86 bf       	out	0x36, r24	; 54
  d6:	06 b6       	in	r0, 0x36	; 54
  d8:	07 fe       	sbrs	r0, 7
  da:	fd cf       	rjmp	.-6      	; 0xd6 <TWIWriteData+0x6>
  dc:	81 b1       	in	r24, 0x01	; 1
  de:	88 7f       	andi	r24, 0xF8	; 248
  e0:	08 95       	ret

000000e2 <LcdBacklight>:
  e2:	81 30       	cpi	r24, 0x01	; 1
  e4:	21 f4       	brne	.+8      	; 0xee <LcdBacklight+0xc>
  e6:	88 e0       	ldi	r24, 0x08	; 8
  e8:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <Backlight>
  ec:	08 95       	ret
  ee:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <Backlight>
  f2:	08 95       	ret

000000f4 <Lcd4bitdata>:
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	d8 2f       	mov	r29, r24
  fc:	c6 2f       	mov	r28, r22
  fe:	0e 94 4f 00 	call	0x9e	; 0x9e <TWIStart>
 102:	60 e0       	ldi	r22, 0x00	; 0
 104:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <deviceAdress>
 108:	0e 94 5b 00 	call	0xb6	; 0xb6 <TWIWriteAddrs>
 10c:	1d 2f       	mov	r17, r29
 10e:	1c 2b       	or	r17, r28
 110:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <Backlight>
 114:	81 2b       	or	r24, r17
 116:	0e 94 68 00 	call	0xd0	; 0xd0 <TWIWriteData>
 11a:	0e 94 55 00 	call	0xaa	; 0xaa <TWIStop>
 11e:	0e 94 4f 00 	call	0x9e	; 0x9e <TWIStart>
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <deviceAdress>
 128:	0e 94 5b 00 	call	0xb6	; 0xb6 <TWIWriteAddrs>
 12c:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <Backlight>
 130:	81 2b       	or	r24, r17
 132:	84 60       	ori	r24, 0x04	; 4
 134:	0e 94 68 00 	call	0xd0	; 0xd0 <TWIWriteData>
 138:	0e 94 55 00 	call	0xaa	; 0xaa <TWIStop>
 13c:	8f e8       	ldi	r24, 0x8F	; 143
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <Lcd4bitdata+0x4c>
 144:	00 c0       	rjmp	.+0      	; 0x146 <Lcd4bitdata+0x52>
 146:	00 00       	nop
 148:	0e 94 4f 00 	call	0x9e	; 0x9e <TWIStart>
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <deviceAdress>
 152:	0e 94 5b 00 	call	0xb6	; 0xb6 <TWIWriteAddrs>
 156:	db 7f       	andi	r29, 0xFB	; 251
 158:	cd 2b       	or	r28, r29
 15a:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <Backlight>
 15e:	8c 2b       	or	r24, r28
 160:	0e 94 68 00 	call	0xd0	; 0xd0 <TWIWriteData>
 164:	0e 94 55 00 	call	0xaa	; 0xaa <TWIStop>
 168:	8f e9       	ldi	r24, 0x9F	; 159
 16a:	9f e0       	ldi	r25, 0x0F	; 15
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <Lcd4bitdata+0x78>
 170:	00 c0       	rjmp	.+0      	; 0x172 <Lcd4bitdata+0x7e>
 172:	00 00       	nop
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	1f 91       	pop	r17
 17a:	08 95       	ret

0000017c <LcdCommand>:
 17c:	cf 93       	push	r28
 17e:	c8 2f       	mov	r28, r24
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	80 7f       	andi	r24, 0xF0	; 240
 184:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
 188:	60 e0       	ldi	r22, 0x00	; 0
 18a:	8c 2f       	mov	r24, r28
 18c:	82 95       	swap	r24
 18e:	80 7f       	andi	r24, 0xF0	; 240
 190:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <LcdInit>:
 198:	cf 93       	push	r28
 19a:	c8 2f       	mov	r28, r24
 19c:	0e 94 49 00 	call	0x92	; 0x92 <TWIInit>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	0e 94 71 00 	call	0xe2	; 0xe2 <LcdBacklight>
 1a6:	8f e3       	ldi	r24, 0x3F	; 63
 1a8:	9c e9       	ldi	r25, 0x9C	; 156
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <LcdInit+0x12>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <LcdInit+0x18>
 1b0:	00 00       	nop
 1b2:	c0 93 8b 00 	sts	0x008B, r28	; 0x80008b <deviceAdress>
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1bc:	88 e2       	ldi	r24, 0x28	; 40
 1be:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1c2:	8c e0       	ldi	r24, 0x0C	; 12
 1c4:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1c8:	86 e0       	ldi	r24, 0x06	; 6
 1ca:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1d4:	cf 91       	pop	r28
 1d6:	08 95       	ret

000001d8 <LcdChar>:
	Lcd4bitdata(command&0xF0,0);
	Lcd4bitdata((command<<4)&0xF0,0);
	
}

void LcdChar(uint8_t Lcdcharval){
 1d8:	cf 93       	push	r28
 1da:	c8 2f       	mov	r28, r24
	Lcd4bitdata(Lcdcharval&0xF0,1);
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	80 7f       	andi	r24, 0xF0	; 240
 1e0:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
 1e4:	61 e0       	ldi	r22, 0x01	; 1
 1e6:	8c 2f       	mov	r24, r28
 1e8:	82 95       	swap	r24
 1ea:	80 7f       	andi	r24, 0xF0	; 240
 1ec:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
	
}
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <LcdString>:
	LcdString(str);
	
}

void LcdString (char *str)		/* Send string to LCD function */
{
 1f4:	0f 93       	push	r16
 1f6:	1f 93       	push	r17
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	8c 01       	movw	r16, r24
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 1fe:	c0 e0       	ldi	r28, 0x00	; 0
 200:	d0 e0       	ldi	r29, 0x00	; 0
 202:	03 c0       	rjmp	.+6      	; 0x20a <LcdString+0x16>
	{
		LcdChar(str[i]);
 204:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LcdChar>
}

void LcdString (char *str)		/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 208:	21 96       	adiw	r28, 0x01	; 1
 20a:	f8 01       	movw	r30, r16
 20c:	ec 0f       	add	r30, r28
 20e:	fd 1f       	adc	r31, r29
 210:	80 81       	ld	r24, Z
 212:	81 11       	cpse	r24, r1
 214:	f7 cf       	rjmp	.-18     	; 0x204 <LcdString+0x10>
	{
		LcdChar(str[i]);
	}
}
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	1f 91       	pop	r17
 21c:	0f 91       	pop	r16
 21e:	08 95       	ret

00000220 <LcdSetCursor>:
	Lcd4bitdata(Lcdcharval&0xF0,1);
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
	
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
 220:	cf 93       	push	r28
 222:	df 93       	push	r29
 224:	ea 01       	movw	r28, r20
	uint8_t tempcommand;
	switch(yaxis){
 226:	61 30       	cpi	r22, 0x01	; 1
 228:	31 f0       	breq	.+12     	; 0x236 <LcdSetCursor+0x16>
 22a:	58 f0       	brcs	.+22     	; 0x242 <LcdSetCursor+0x22>
 22c:	62 30       	cpi	r22, 0x02	; 2
 22e:	29 f0       	breq	.+10     	; 0x23a <LcdSetCursor+0x1a>
 230:	63 30       	cpi	r22, 0x03	; 3
 232:	29 f0       	breq	.+10     	; 0x23e <LcdSetCursor+0x1e>
 234:	07 c0       	rjmp	.+14     	; 0x244 <LcdSetCursor+0x24>
		case 0:tempcommand=0x80;break;  //yaxis =0
		case 1:tempcommand=0xC0;break;
 236:	90 ec       	ldi	r25, 0xC0	; 192
 238:	05 c0       	rjmp	.+10     	; 0x244 <LcdSetCursor+0x24>
		case 2:tempcommand=0x94;break;
 23a:	94 e9       	ldi	r25, 0x94	; 148
 23c:	03 c0       	rjmp	.+6      	; 0x244 <LcdSetCursor+0x24>
		case 3:tempcommand=0xd4;break;		
 23e:	94 ed       	ldi	r25, 0xD4	; 212
 240:	01 c0       	rjmp	.+2      	; 0x244 <LcdSetCursor+0x24>
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
	uint8_t tempcommand;
	switch(yaxis){
		case 0:tempcommand=0x80;break;  //yaxis =0
 242:	90 e8       	ldi	r25, 0x80	; 128
		case 1:tempcommand=0xC0;break;
		case 2:tempcommand=0x94;break;
		case 3:tempcommand=0xd4;break;		
	}
	LcdCommand(tempcommand|(0x0F&xaxis));
 244:	8f 70       	andi	r24, 0x0F	; 15
 246:	89 2b       	or	r24, r25
 248:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
	LcdString(str);
 24c:	ce 01       	movw	r24, r28
 24e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LcdString>
	
}
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <ReadADC>:
}

uint16_t ReadADC(uint8_t ADCchannel)
{
	//select ADC channel with safety mask
	ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
 258:	97 b1       	in	r25, 0x07	; 7
 25a:	90 7f       	andi	r25, 0xF0	; 240
 25c:	8f 70       	andi	r24, 0x0F	; 15
 25e:	89 2b       	or	r24, r25
 260:	87 b9       	out	0x07, r24	; 7
	//single conversion mode
	ADCSRA |= (1<<ADSC);
 262:	86 b1       	in	r24, 0x06	; 6
 264:	80 64       	ori	r24, 0x40	; 64
 266:	86 b9       	out	0x06, r24	; 6
	// wait until ADC conversion is complete
	while( ADCSRA & (1<<ADSC) );
 268:	36 99       	sbic	0x06, 6	; 6
 26a:	fe cf       	rjmp	.-4      	; 0x268 <ReadADC+0x10>
	return ADCW;
 26c:	84 b1       	in	r24, 0x04	; 4
 26e:	95 b1       	in	r25, 0x05	; 5
}
 270:	08 95       	ret

00000272 <getkeyNum>:

uint8_t getkeyNum(){
	DDRB=0b00001111;
 272:	8f e0       	ldi	r24, 0x0F	; 15
 274:	87 bb       	out	0x17, r24	; 23
	PORTB=0b11110000;
 276:	80 ef       	ldi	r24, 0xF0	; 240
 278:	88 bb       	out	0x18, r24	; 24
	uint8_t getx;
	uint8_t gety;
	while(1){
		
		uint8_t pin=(~(PINB|0x0F));
 27a:	86 b3       	in	r24, 0x16	; 22
 27c:	8f 60       	ori	r24, 0x0F	; 15
 27e:	80 95       	com	r24
		if (pin)
 280:	e1 f3       	breq	.-8      	; 0x27a <getkeyNum+0x8>
		{
			
			
			switch(pin){
 282:	80 32       	cpi	r24, 0x20	; 32
 284:	49 f0       	breq	.+18     	; 0x298 <getkeyNum+0x26>
 286:	18 f4       	brcc	.+6      	; 0x28e <getkeyNum+0x1c>
 288:	80 31       	cpi	r24, 0x10	; 16
 28a:	61 f0       	breq	.+24     	; 0x2a4 <getkeyNum+0x32>
 28c:	0c c0       	rjmp	.+24     	; 0x2a6 <getkeyNum+0x34>
 28e:	80 34       	cpi	r24, 0x40	; 64
 290:	29 f0       	breq	.+10     	; 0x29c <getkeyNum+0x2a>
 292:	80 38       	cpi	r24, 0x80	; 128
 294:	29 f0       	breq	.+10     	; 0x2a0 <getkeyNum+0x2e>
 296:	07 c0       	rjmp	.+14     	; 0x2a6 <getkeyNum+0x34>
				
				
				case (1<<4) :getx=0; break;
				case (1<<5) :getx=1;break;
 298:	91 e0       	ldi	r25, 0x01	; 1
 29a:	05 c0       	rjmp	.+10     	; 0x2a6 <getkeyNum+0x34>
				case (1<<6) :getx=2;break;
 29c:	92 e0       	ldi	r25, 0x02	; 2
 29e:	03 c0       	rjmp	.+6      	; 0x2a6 <getkeyNum+0x34>
				case (1<<7) :getx=3;break;
 2a0:	93 e0       	ldi	r25, 0x03	; 3
 2a2:	01 c0       	rjmp	.+2      	; 0x2a6 <getkeyNum+0x34>
			
			
			switch(pin){
				
				
				case (1<<4) :getx=0; break;
 2a4:	90 e0       	ldi	r25, 0x00	; 0
				case (1<<6) :getx=2;break;
				case (1<<7) :getx=3;break;
				
				
			} //switch
			DDRB=0b0;
 2a6:	17 ba       	out	0x17, r1	; 23
			PORTB=0b0;
 2a8:	18 ba       	out	0x18, r1	; 24
			
			DDRB=0b11110000;
 2aa:	80 ef       	ldi	r24, 0xF0	; 240
 2ac:	87 bb       	out	0x17, r24	; 23
			PORTB=0b00001111;
 2ae:	8f e0       	ldi	r24, 0x0F	; 15
 2b0:	88 bb       	out	0x18, r24	; 24
			
			pin=~(PINB|0xF0);
 2b2:	86 b3       	in	r24, 0x16	; 22
 2b4:	80 6f       	ori	r24, 0xF0	; 240
 2b6:	80 95       	com	r24
			
			switch(pin){
 2b8:	82 30       	cpi	r24, 0x02	; 2
 2ba:	49 f0       	breq	.+18     	; 0x2ce <getkeyNum+0x5c>
 2bc:	18 f4       	brcc	.+6      	; 0x2c4 <getkeyNum+0x52>
 2be:	81 30       	cpi	r24, 0x01	; 1
 2c0:	61 f0       	breq	.+24     	; 0x2da <getkeyNum+0x68>
 2c2:	0c c0       	rjmp	.+24     	; 0x2dc <getkeyNum+0x6a>
 2c4:	84 30       	cpi	r24, 0x04	; 4
 2c6:	29 f0       	breq	.+10     	; 0x2d2 <getkeyNum+0x60>
 2c8:	88 30       	cpi	r24, 0x08	; 8
 2ca:	29 f0       	breq	.+10     	; 0x2d6 <getkeyNum+0x64>
 2cc:	07 c0       	rjmp	.+14     	; 0x2dc <getkeyNum+0x6a>
				case (1<<0) :gety=0;break;
				case (1<<1) :gety=1;break;
 2ce:	e1 e0       	ldi	r30, 0x01	; 1
 2d0:	05 c0       	rjmp	.+10     	; 0x2dc <getkeyNum+0x6a>
				case (1<<2) :gety=2;break;
 2d2:	e2 e0       	ldi	r30, 0x02	; 2
 2d4:	03 c0       	rjmp	.+6      	; 0x2dc <getkeyNum+0x6a>
				case (1<<3) :gety=3;break;
 2d6:	e3 e0       	ldi	r30, 0x03	; 3
 2d8:	01 c0       	rjmp	.+2      	; 0x2dc <getkeyNum+0x6a>
			PORTB=0b00001111;
			
			pin=~(PINB|0xF0);
			
			switch(pin){
				case (1<<0) :gety=0;break;
 2da:	e0 e0       	ldi	r30, 0x00	; 0
				case (1<<2) :gety=2;break;
				case (1<<3) :gety=3;break;
				
			} //switch
			
			DDRB=0b00001111;
 2dc:	8f e0       	ldi	r24, 0x0F	; 15
 2de:	87 bb       	out	0x17, r24	; 23
			PORTB=0b11110000;
 2e0:	80 ef       	ldi	r24, 0xF0	; 240
 2e2:	88 bb       	out	0x18, r24	; 24
			
			
			return kaypad[gety][getx];
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	ee 0f       	add	r30, r30
 2e8:	ff 1f       	adc	r31, r31
 2ea:	ee 0f       	add	r30, r30
 2ec:	ff 1f       	adc	r31, r31
 2ee:	ea 58       	subi	r30, 0x8A	; 138
 2f0:	ff 4f       	sbci	r31, 0xFF	; 255
 2f2:	e9 0f       	add	r30, r25
 2f4:	f1 1d       	adc	r31, r1
		}//if
		
		
		
	}//while 1
}
 2f6:	80 81       	ld	r24, Z
 2f8:	08 95       	ret

000002fa <main>:
uint16_t ReadADC(uint8_t ADCchannel);
float ph=0.0;
char lcddata[20];
int main(void)
{
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));   // prescaler 128
 2fa:	86 b1       	in	r24, 0x06	; 6
 2fc:	87 60       	ori	r24, 0x07	; 7
 2fe:	86 b9       	out	0x06, r24	; 6
	ADMUX |= (1<<REFS0);					//external vcc
 300:	87 b1       	in	r24, 0x07	; 7
 302:	80 64       	ori	r24, 0x40	; 64
 304:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADEN);                            // Turn on ADC
 306:	86 b1       	in	r24, 0x06	; 6
 308:	80 68       	ori	r24, 0x80	; 128
 30a:	86 b9       	out	0x06, r24	; 6
	LcdInit(0x27);
 30c:	87 e2       	ldi	r24, 0x27	; 39
 30e:	0e 94 cc 00 	call	0x198	; 0x198 <LcdInit>
	LcdSetCursor(0,0,"Wait . . .");
 312:	40 e6       	ldi	r20, 0x60	; 96
 314:	50 e0       	ldi	r21, 0x00	; 0
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	0e 94 10 01 	call	0x220	; 0x220 <LcdSetCursor>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 31e:	2f ef       	ldi	r18, 0xFF	; 255
 320:	89 e6       	ldi	r24, 0x69	; 105
 322:	98 e1       	ldi	r25, 0x18	; 24
 324:	21 50       	subi	r18, 0x01	; 1
 326:	80 40       	sbci	r24, 0x00	; 0
 328:	90 40       	sbci	r25, 0x00	; 0
 32a:	e1 f7       	brne	.-8      	; 0x324 <main+0x2a>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <main+0x34>
 32e:	00 00       	nop
	_delay_ms(1000);
	LcdCommand(LCD_CLEARDISPLAY);
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
	ADMUX = (1<<REFS0);		
 336:	80 e4       	ldi	r24, 0x40	; 64
 338:	87 b9       	out	0x07, r24	; 7
	ph=ReadADC(0)*5.0/1024;
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	0e 94 2c 01 	call	0x258	; 0x258 <ReadADC>
 340:	bc 01       	movw	r22, r24
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	0e 94 05 02 	call	0x40a	; 0x40a <__floatunsisf>
 34a:	20 e0       	ldi	r18, 0x00	; 0
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	40 ea       	ldi	r20, 0xA0	; 160
 350:	50 e4       	ldi	r21, 0x40	; 64
 352:	0e 94 42 02 	call	0x484	; 0x484 <__mulsf3>
 356:	20 e0       	ldi	r18, 0x00	; 0
 358:	30 e0       	ldi	r19, 0x00	; 0
 35a:	40 e8       	ldi	r20, 0x80	; 128
 35c:	5a e3       	ldi	r21, 0x3A	; 58
 35e:	0e 94 42 02 	call	0x484	; 0x484 <__mulsf3>
	ph= ph*3.5;
 362:	20 e0       	ldi	r18, 0x00	; 0
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	40 e6       	ldi	r20, 0x60	; 96
 368:	50 e4       	ldi	r21, 0x40	; 64
 36a:	0e 94 42 02 	call	0x484	; 0x484 <__mulsf3>
 36e:	26 2f       	mov	r18, r22
 370:	37 2f       	mov	r19, r23
 372:	46 2f       	mov	r20, r22
 374:	57 2f       	mov	r21, r23
 376:	68 2f       	mov	r22, r24
 378:	79 2f       	mov	r23, r25
 37a:	40 93 86 00 	sts	0x0086, r20	; 0x800086 <__data_end>
 37e:	50 93 87 00 	sts	0x0087, r21	; 0x800087 <__data_end+0x1>
 382:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__data_end+0x2>
 386:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__data_end+0x3>
	sprintf(lcddata,"%0.1f",ph);
 38a:	9f 93       	push	r25
 38c:	8f 93       	push	r24
 38e:	3f 93       	push	r19
 390:	2f 93       	push	r18
 392:	8b e6       	ldi	r24, 0x6B	; 107
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	9f 93       	push	r25
 398:	8f 93       	push	r24
 39a:	8c e8       	ldi	r24, 0x8C	; 140
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	9f 93       	push	r25
 3a0:	8f 93       	push	r24
 3a2:	0e 94 00 03 	call	0x600	; 0x600 <sprintf>
	LcdSetCursor(0,0,lcddata);
 3a6:	4c e8       	ldi	r20, 0x8C	; 140
 3a8:	50 e0       	ldi	r21, 0x00	; 0
 3aa:	60 e0       	ldi	r22, 0x00	; 0
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	0e 94 10 01 	call	0x220	; 0x220 <LcdSetCursor>
	DDRD=0b1;
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	81 bb       	out	0x11, r24	; 17
 3b6:	8d b7       	in	r24, 0x3d	; 61
 3b8:	9e b7       	in	r25, 0x3e	; 62
 3ba:	08 96       	adiw	r24, 0x08	; 8
 3bc:	0f b6       	in	r0, 0x3f	; 63
 3be:	f8 94       	cli
 3c0:	9e bf       	out	0x3e, r25	; 62
 3c2:	0f be       	out	0x3f, r0	; 63
 3c4:	8d bf       	out	0x3d, r24	; 61
	while (1)
	{	uint8_t key=getkeyNum();
 3c6:	0e 94 39 01 	call	0x272	; 0x272 <getkeyNum>
 3ca:	c8 2f       	mov	r28, r24
		sprintf(lcddata,"%02u",key);
 3cc:	1f 92       	push	r1
 3ce:	8f 93       	push	r24
 3d0:	81 e7       	ldi	r24, 0x71	; 113
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	9f 93       	push	r25
 3d6:	8f 93       	push	r24
 3d8:	8c e8       	ldi	r24, 0x8C	; 140
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	9f 93       	push	r25
 3de:	8f 93       	push	r24
 3e0:	0e 94 00 03 	call	0x600	; 0x600 <sprintf>
		LcdSetCursor(0,1,lcddata);
 3e4:	4c e8       	ldi	r20, 0x8C	; 140
 3e6:	50 e0       	ldi	r21, 0x00	; 0
 3e8:	61 e0       	ldi	r22, 0x01	; 1
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	0e 94 10 01 	call	0x220	; 0x220 <LcdSetCursor>
		if (key>5)
 3f0:	0f 90       	pop	r0
 3f2:	0f 90       	pop	r0
 3f4:	0f 90       	pop	r0
 3f6:	0f 90       	pop	r0
 3f8:	0f 90       	pop	r0
 3fa:	0f 90       	pop	r0
 3fc:	c6 30       	cpi	r28, 0x06	; 6
 3fe:	18 f0       	brcs	.+6      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
		{PORTD=0b1;
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	82 bb       	out	0x12, r24	; 18
 404:	e0 cf       	rjmp	.-64     	; 0x3c6 <main+0xcc>
		}
		else
		{PORTD=0b0;
 406:	12 ba       	out	0x12, r1	; 18
 408:	de cf       	rjmp	.-68     	; 0x3c6 <main+0xcc>

0000040a <__floatunsisf>:
 40a:	e8 94       	clt
 40c:	09 c0       	rjmp	.+18     	; 0x420 <__floatsisf+0x12>

0000040e <__floatsisf>:
 40e:	97 fb       	bst	r25, 7
 410:	3e f4       	brtc	.+14     	; 0x420 <__floatsisf+0x12>
 412:	90 95       	com	r25
 414:	80 95       	com	r24
 416:	70 95       	com	r23
 418:	61 95       	neg	r22
 41a:	7f 4f       	sbci	r23, 0xFF	; 255
 41c:	8f 4f       	sbci	r24, 0xFF	; 255
 41e:	9f 4f       	sbci	r25, 0xFF	; 255
 420:	99 23       	and	r25, r25
 422:	a9 f0       	breq	.+42     	; 0x44e <__floatsisf+0x40>
 424:	f9 2f       	mov	r31, r25
 426:	96 e9       	ldi	r25, 0x96	; 150
 428:	bb 27       	eor	r27, r27
 42a:	93 95       	inc	r25
 42c:	f6 95       	lsr	r31
 42e:	87 95       	ror	r24
 430:	77 95       	ror	r23
 432:	67 95       	ror	r22
 434:	b7 95       	ror	r27
 436:	f1 11       	cpse	r31, r1
 438:	f8 cf       	rjmp	.-16     	; 0x42a <__floatsisf+0x1c>
 43a:	fa f4       	brpl	.+62     	; 0x47a <__floatsisf+0x6c>
 43c:	bb 0f       	add	r27, r27
 43e:	11 f4       	brne	.+4      	; 0x444 <__floatsisf+0x36>
 440:	60 ff       	sbrs	r22, 0
 442:	1b c0       	rjmp	.+54     	; 0x47a <__floatsisf+0x6c>
 444:	6f 5f       	subi	r22, 0xFF	; 255
 446:	7f 4f       	sbci	r23, 0xFF	; 255
 448:	8f 4f       	sbci	r24, 0xFF	; 255
 44a:	9f 4f       	sbci	r25, 0xFF	; 255
 44c:	16 c0       	rjmp	.+44     	; 0x47a <__floatsisf+0x6c>
 44e:	88 23       	and	r24, r24
 450:	11 f0       	breq	.+4      	; 0x456 <__floatsisf+0x48>
 452:	96 e9       	ldi	r25, 0x96	; 150
 454:	11 c0       	rjmp	.+34     	; 0x478 <__floatsisf+0x6a>
 456:	77 23       	and	r23, r23
 458:	21 f0       	breq	.+8      	; 0x462 <__floatsisf+0x54>
 45a:	9e e8       	ldi	r25, 0x8E	; 142
 45c:	87 2f       	mov	r24, r23
 45e:	76 2f       	mov	r23, r22
 460:	05 c0       	rjmp	.+10     	; 0x46c <__floatsisf+0x5e>
 462:	66 23       	and	r22, r22
 464:	71 f0       	breq	.+28     	; 0x482 <__floatsisf+0x74>
 466:	96 e8       	ldi	r25, 0x86	; 134
 468:	86 2f       	mov	r24, r22
 46a:	70 e0       	ldi	r23, 0x00	; 0
 46c:	60 e0       	ldi	r22, 0x00	; 0
 46e:	2a f0       	brmi	.+10     	; 0x47a <__floatsisf+0x6c>
 470:	9a 95       	dec	r25
 472:	66 0f       	add	r22, r22
 474:	77 1f       	adc	r23, r23
 476:	88 1f       	adc	r24, r24
 478:	da f7       	brpl	.-10     	; 0x470 <__floatsisf+0x62>
 47a:	88 0f       	add	r24, r24
 47c:	96 95       	lsr	r25
 47e:	87 95       	ror	r24
 480:	97 f9       	bld	r25, 7
 482:	08 95       	ret

00000484 <__mulsf3>:
 484:	0e 94 55 02 	call	0x4aa	; 0x4aa <__mulsf3x>
 488:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__fp_round>
 48c:	0e 94 b8 02 	call	0x570	; 0x570 <__fp_pscA>
 490:	38 f0       	brcs	.+14     	; 0x4a0 <__mulsf3+0x1c>
 492:	0e 94 bf 02 	call	0x57e	; 0x57e <__fp_pscB>
 496:	20 f0       	brcs	.+8      	; 0x4a0 <__mulsf3+0x1c>
 498:	95 23       	and	r25, r21
 49a:	11 f0       	breq	.+4      	; 0x4a0 <__mulsf3+0x1c>
 49c:	0c 94 af 02 	jmp	0x55e	; 0x55e <__fp_inf>
 4a0:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_nan>
 4a4:	11 24       	eor	r1, r1
 4a6:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__fp_szero>

000004aa <__mulsf3x>:
 4aa:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__fp_split3>
 4ae:	70 f3       	brcs	.-36     	; 0x48c <__mulsf3+0x8>

000004b0 <__mulsf3_pse>:
 4b0:	95 9f       	mul	r25, r21
 4b2:	c1 f3       	breq	.-16     	; 0x4a4 <__mulsf3+0x20>
 4b4:	95 0f       	add	r25, r21
 4b6:	50 e0       	ldi	r21, 0x00	; 0
 4b8:	55 1f       	adc	r21, r21
 4ba:	62 9f       	mul	r22, r18
 4bc:	f0 01       	movw	r30, r0
 4be:	72 9f       	mul	r23, r18
 4c0:	bb 27       	eor	r27, r27
 4c2:	f0 0d       	add	r31, r0
 4c4:	b1 1d       	adc	r27, r1
 4c6:	63 9f       	mul	r22, r19
 4c8:	aa 27       	eor	r26, r26
 4ca:	f0 0d       	add	r31, r0
 4cc:	b1 1d       	adc	r27, r1
 4ce:	aa 1f       	adc	r26, r26
 4d0:	64 9f       	mul	r22, r20
 4d2:	66 27       	eor	r22, r22
 4d4:	b0 0d       	add	r27, r0
 4d6:	a1 1d       	adc	r26, r1
 4d8:	66 1f       	adc	r22, r22
 4da:	82 9f       	mul	r24, r18
 4dc:	22 27       	eor	r18, r18
 4de:	b0 0d       	add	r27, r0
 4e0:	a1 1d       	adc	r26, r1
 4e2:	62 1f       	adc	r22, r18
 4e4:	73 9f       	mul	r23, r19
 4e6:	b0 0d       	add	r27, r0
 4e8:	a1 1d       	adc	r26, r1
 4ea:	62 1f       	adc	r22, r18
 4ec:	83 9f       	mul	r24, r19
 4ee:	a0 0d       	add	r26, r0
 4f0:	61 1d       	adc	r22, r1
 4f2:	22 1f       	adc	r18, r18
 4f4:	74 9f       	mul	r23, r20
 4f6:	33 27       	eor	r19, r19
 4f8:	a0 0d       	add	r26, r0
 4fa:	61 1d       	adc	r22, r1
 4fc:	23 1f       	adc	r18, r19
 4fe:	84 9f       	mul	r24, r20
 500:	60 0d       	add	r22, r0
 502:	21 1d       	adc	r18, r1
 504:	82 2f       	mov	r24, r18
 506:	76 2f       	mov	r23, r22
 508:	6a 2f       	mov	r22, r26
 50a:	11 24       	eor	r1, r1
 50c:	9f 57       	subi	r25, 0x7F	; 127
 50e:	50 40       	sbci	r21, 0x00	; 0
 510:	9a f0       	brmi	.+38     	; 0x538 <__mulsf3_pse+0x88>
 512:	f1 f0       	breq	.+60     	; 0x550 <__mulsf3_pse+0xa0>
 514:	88 23       	and	r24, r24
 516:	4a f0       	brmi	.+18     	; 0x52a <__mulsf3_pse+0x7a>
 518:	ee 0f       	add	r30, r30
 51a:	ff 1f       	adc	r31, r31
 51c:	bb 1f       	adc	r27, r27
 51e:	66 1f       	adc	r22, r22
 520:	77 1f       	adc	r23, r23
 522:	88 1f       	adc	r24, r24
 524:	91 50       	subi	r25, 0x01	; 1
 526:	50 40       	sbci	r21, 0x00	; 0
 528:	a9 f7       	brne	.-22     	; 0x514 <__mulsf3_pse+0x64>
 52a:	9e 3f       	cpi	r25, 0xFE	; 254
 52c:	51 05       	cpc	r21, r1
 52e:	80 f0       	brcs	.+32     	; 0x550 <__mulsf3_pse+0xa0>
 530:	0c 94 af 02 	jmp	0x55e	; 0x55e <__fp_inf>
 534:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__fp_szero>
 538:	5f 3f       	cpi	r21, 0xFF	; 255
 53a:	e4 f3       	brlt	.-8      	; 0x534 <__mulsf3_pse+0x84>
 53c:	98 3e       	cpi	r25, 0xE8	; 232
 53e:	d4 f3       	brlt	.-12     	; 0x534 <__mulsf3_pse+0x84>
 540:	86 95       	lsr	r24
 542:	77 95       	ror	r23
 544:	67 95       	ror	r22
 546:	b7 95       	ror	r27
 548:	f7 95       	ror	r31
 54a:	e7 95       	ror	r30
 54c:	9f 5f       	subi	r25, 0xFF	; 255
 54e:	c1 f7       	brne	.-16     	; 0x540 <__mulsf3_pse+0x90>
 550:	fe 2b       	or	r31, r30
 552:	88 0f       	add	r24, r24
 554:	91 1d       	adc	r25, r1
 556:	96 95       	lsr	r25
 558:	87 95       	ror	r24
 55a:	97 f9       	bld	r25, 7
 55c:	08 95       	ret

0000055e <__fp_inf>:
 55e:	97 f9       	bld	r25, 7
 560:	9f 67       	ori	r25, 0x7F	; 127
 562:	80 e8       	ldi	r24, 0x80	; 128
 564:	70 e0       	ldi	r23, 0x00	; 0
 566:	60 e0       	ldi	r22, 0x00	; 0
 568:	08 95       	ret

0000056a <__fp_nan>:
 56a:	9f ef       	ldi	r25, 0xFF	; 255
 56c:	80 ec       	ldi	r24, 0xC0	; 192
 56e:	08 95       	ret

00000570 <__fp_pscA>:
 570:	00 24       	eor	r0, r0
 572:	0a 94       	dec	r0
 574:	16 16       	cp	r1, r22
 576:	17 06       	cpc	r1, r23
 578:	18 06       	cpc	r1, r24
 57a:	09 06       	cpc	r0, r25
 57c:	08 95       	ret

0000057e <__fp_pscB>:
 57e:	00 24       	eor	r0, r0
 580:	0a 94       	dec	r0
 582:	12 16       	cp	r1, r18
 584:	13 06       	cpc	r1, r19
 586:	14 06       	cpc	r1, r20
 588:	05 06       	cpc	r0, r21
 58a:	08 95       	ret

0000058c <__fp_round>:
 58c:	09 2e       	mov	r0, r25
 58e:	03 94       	inc	r0
 590:	00 0c       	add	r0, r0
 592:	11 f4       	brne	.+4      	; 0x598 <__fp_round+0xc>
 594:	88 23       	and	r24, r24
 596:	52 f0       	brmi	.+20     	; 0x5ac <__fp_round+0x20>
 598:	bb 0f       	add	r27, r27
 59a:	40 f4       	brcc	.+16     	; 0x5ac <__fp_round+0x20>
 59c:	bf 2b       	or	r27, r31
 59e:	11 f4       	brne	.+4      	; 0x5a4 <__fp_round+0x18>
 5a0:	60 ff       	sbrs	r22, 0
 5a2:	04 c0       	rjmp	.+8      	; 0x5ac <__fp_round+0x20>
 5a4:	6f 5f       	subi	r22, 0xFF	; 255
 5a6:	7f 4f       	sbci	r23, 0xFF	; 255
 5a8:	8f 4f       	sbci	r24, 0xFF	; 255
 5aa:	9f 4f       	sbci	r25, 0xFF	; 255
 5ac:	08 95       	ret

000005ae <__fp_split3>:
 5ae:	57 fd       	sbrc	r21, 7
 5b0:	90 58       	subi	r25, 0x80	; 128
 5b2:	44 0f       	add	r20, r20
 5b4:	55 1f       	adc	r21, r21
 5b6:	59 f0       	breq	.+22     	; 0x5ce <__fp_splitA+0x10>
 5b8:	5f 3f       	cpi	r21, 0xFF	; 255
 5ba:	71 f0       	breq	.+28     	; 0x5d8 <__fp_splitA+0x1a>
 5bc:	47 95       	ror	r20

000005be <__fp_splitA>:
 5be:	88 0f       	add	r24, r24
 5c0:	97 fb       	bst	r25, 7
 5c2:	99 1f       	adc	r25, r25
 5c4:	61 f0       	breq	.+24     	; 0x5de <__fp_splitA+0x20>
 5c6:	9f 3f       	cpi	r25, 0xFF	; 255
 5c8:	79 f0       	breq	.+30     	; 0x5e8 <__fp_splitA+0x2a>
 5ca:	87 95       	ror	r24
 5cc:	08 95       	ret
 5ce:	12 16       	cp	r1, r18
 5d0:	13 06       	cpc	r1, r19
 5d2:	14 06       	cpc	r1, r20
 5d4:	55 1f       	adc	r21, r21
 5d6:	f2 cf       	rjmp	.-28     	; 0x5bc <__fp_split3+0xe>
 5d8:	46 95       	lsr	r20
 5da:	f1 df       	rcall	.-30     	; 0x5be <__fp_splitA>
 5dc:	08 c0       	rjmp	.+16     	; 0x5ee <__fp_splitA+0x30>
 5de:	16 16       	cp	r1, r22
 5e0:	17 06       	cpc	r1, r23
 5e2:	18 06       	cpc	r1, r24
 5e4:	99 1f       	adc	r25, r25
 5e6:	f1 cf       	rjmp	.-30     	; 0x5ca <__fp_splitA+0xc>
 5e8:	86 95       	lsr	r24
 5ea:	71 05       	cpc	r23, r1
 5ec:	61 05       	cpc	r22, r1
 5ee:	08 94       	sec
 5f0:	08 95       	ret

000005f2 <__fp_zero>:
 5f2:	e8 94       	clt

000005f4 <__fp_szero>:
 5f4:	bb 27       	eor	r27, r27
 5f6:	66 27       	eor	r22, r22
 5f8:	77 27       	eor	r23, r23
 5fa:	cb 01       	movw	r24, r22
 5fc:	97 f9       	bld	r25, 7
 5fe:	08 95       	ret

00000600 <sprintf>:
 600:	ae e0       	ldi	r26, 0x0E	; 14
 602:	b0 e0       	ldi	r27, 0x00	; 0
 604:	e6 e0       	ldi	r30, 0x06	; 6
 606:	f3 e0       	ldi	r31, 0x03	; 3
 608:	0c 94 c1 05 	jmp	0xb82	; 0xb82 <__prologue_saves__+0x1c>
 60c:	0d 89       	ldd	r16, Y+21	; 0x15
 60e:	1e 89       	ldd	r17, Y+22	; 0x16
 610:	86 e0       	ldi	r24, 0x06	; 6
 612:	8c 83       	std	Y+4, r24	; 0x04
 614:	1a 83       	std	Y+2, r17	; 0x02
 616:	09 83       	std	Y+1, r16	; 0x01
 618:	8f ef       	ldi	r24, 0xFF	; 255
 61a:	9f e7       	ldi	r25, 0x7F	; 127
 61c:	9e 83       	std	Y+6, r25	; 0x06
 61e:	8d 83       	std	Y+5, r24	; 0x05
 620:	ae 01       	movw	r20, r28
 622:	47 5e       	subi	r20, 0xE7	; 231
 624:	5f 4f       	sbci	r21, 0xFF	; 255
 626:	6f 89       	ldd	r22, Y+23	; 0x17
 628:	78 8d       	ldd	r23, Y+24	; 0x18
 62a:	ce 01       	movw	r24, r28
 62c:	01 96       	adiw	r24, 0x01	; 1
 62e:	0e 94 22 03 	call	0x644	; 0x644 <vfprintf>
 632:	ef 81       	ldd	r30, Y+7	; 0x07
 634:	f8 85       	ldd	r31, Y+8	; 0x08
 636:	e0 0f       	add	r30, r16
 638:	f1 1f       	adc	r31, r17
 63a:	10 82       	st	Z, r1
 63c:	2e 96       	adiw	r28, 0x0e	; 14
 63e:	e4 e0       	ldi	r30, 0x04	; 4
 640:	0c 94 dd 05 	jmp	0xbba	; 0xbba <__epilogue_restores__+0x1c>

00000644 <vfprintf>:
 644:	ab e0       	ldi	r26, 0x0B	; 11
 646:	b0 e0       	ldi	r27, 0x00	; 0
 648:	e8 e2       	ldi	r30, 0x28	; 40
 64a:	f3 e0       	ldi	r31, 0x03	; 3
 64c:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__prologue_saves__>
 650:	6c 01       	movw	r12, r24
 652:	7b 01       	movw	r14, r22
 654:	8a 01       	movw	r16, r20
 656:	fc 01       	movw	r30, r24
 658:	17 82       	std	Z+7, r1	; 0x07
 65a:	16 82       	std	Z+6, r1	; 0x06
 65c:	83 81       	ldd	r24, Z+3	; 0x03
 65e:	81 ff       	sbrs	r24, 1
 660:	cc c1       	rjmp	.+920    	; 0x9fa <__stack+0x19b>
 662:	ce 01       	movw	r24, r28
 664:	01 96       	adiw	r24, 0x01	; 1
 666:	3c 01       	movw	r6, r24
 668:	f6 01       	movw	r30, r12
 66a:	93 81       	ldd	r25, Z+3	; 0x03
 66c:	f7 01       	movw	r30, r14
 66e:	93 fd       	sbrc	r25, 3
 670:	85 91       	lpm	r24, Z+
 672:	93 ff       	sbrs	r25, 3
 674:	81 91       	ld	r24, Z+
 676:	7f 01       	movw	r14, r30
 678:	88 23       	and	r24, r24
 67a:	09 f4       	brne	.+2      	; 0x67e <vfprintf+0x3a>
 67c:	ba c1       	rjmp	.+884    	; 0x9f2 <__stack+0x193>
 67e:	85 32       	cpi	r24, 0x25	; 37
 680:	39 f4       	brne	.+14     	; 0x690 <vfprintf+0x4c>
 682:	93 fd       	sbrc	r25, 3
 684:	85 91       	lpm	r24, Z+
 686:	93 ff       	sbrs	r25, 3
 688:	81 91       	ld	r24, Z+
 68a:	7f 01       	movw	r14, r30
 68c:	85 32       	cpi	r24, 0x25	; 37
 68e:	29 f4       	brne	.+10     	; 0x69a <vfprintf+0x56>
 690:	b6 01       	movw	r22, r12
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	0e 94 19 05 	call	0xa32	; 0xa32 <fputc>
 698:	e7 cf       	rjmp	.-50     	; 0x668 <vfprintf+0x24>
 69a:	91 2c       	mov	r9, r1
 69c:	21 2c       	mov	r2, r1
 69e:	31 2c       	mov	r3, r1
 6a0:	ff e1       	ldi	r31, 0x1F	; 31
 6a2:	f3 15       	cp	r31, r3
 6a4:	d8 f0       	brcs	.+54     	; 0x6dc <vfprintf+0x98>
 6a6:	8b 32       	cpi	r24, 0x2B	; 43
 6a8:	79 f0       	breq	.+30     	; 0x6c8 <vfprintf+0x84>
 6aa:	38 f4       	brcc	.+14     	; 0x6ba <vfprintf+0x76>
 6ac:	80 32       	cpi	r24, 0x20	; 32
 6ae:	79 f0       	breq	.+30     	; 0x6ce <vfprintf+0x8a>
 6b0:	83 32       	cpi	r24, 0x23	; 35
 6b2:	a1 f4       	brne	.+40     	; 0x6dc <vfprintf+0x98>
 6b4:	23 2d       	mov	r18, r3
 6b6:	20 61       	ori	r18, 0x10	; 16
 6b8:	1d c0       	rjmp	.+58     	; 0x6f4 <vfprintf+0xb0>
 6ba:	8d 32       	cpi	r24, 0x2D	; 45
 6bc:	61 f0       	breq	.+24     	; 0x6d6 <vfprintf+0x92>
 6be:	80 33       	cpi	r24, 0x30	; 48
 6c0:	69 f4       	brne	.+26     	; 0x6dc <vfprintf+0x98>
 6c2:	23 2d       	mov	r18, r3
 6c4:	21 60       	ori	r18, 0x01	; 1
 6c6:	16 c0       	rjmp	.+44     	; 0x6f4 <vfprintf+0xb0>
 6c8:	83 2d       	mov	r24, r3
 6ca:	82 60       	ori	r24, 0x02	; 2
 6cc:	38 2e       	mov	r3, r24
 6ce:	e3 2d       	mov	r30, r3
 6d0:	e4 60       	ori	r30, 0x04	; 4
 6d2:	3e 2e       	mov	r3, r30
 6d4:	2a c0       	rjmp	.+84     	; 0x72a <vfprintf+0xe6>
 6d6:	f3 2d       	mov	r31, r3
 6d8:	f8 60       	ori	r31, 0x08	; 8
 6da:	1d c0       	rjmp	.+58     	; 0x716 <vfprintf+0xd2>
 6dc:	37 fc       	sbrc	r3, 7
 6de:	2d c0       	rjmp	.+90     	; 0x73a <vfprintf+0xf6>
 6e0:	20 ed       	ldi	r18, 0xD0	; 208
 6e2:	28 0f       	add	r18, r24
 6e4:	2a 30       	cpi	r18, 0x0A	; 10
 6e6:	40 f0       	brcs	.+16     	; 0x6f8 <vfprintf+0xb4>
 6e8:	8e 32       	cpi	r24, 0x2E	; 46
 6ea:	b9 f4       	brne	.+46     	; 0x71a <vfprintf+0xd6>
 6ec:	36 fc       	sbrc	r3, 6
 6ee:	81 c1       	rjmp	.+770    	; 0x9f2 <__stack+0x193>
 6f0:	23 2d       	mov	r18, r3
 6f2:	20 64       	ori	r18, 0x40	; 64
 6f4:	32 2e       	mov	r3, r18
 6f6:	19 c0       	rjmp	.+50     	; 0x72a <vfprintf+0xe6>
 6f8:	36 fe       	sbrs	r3, 6
 6fa:	06 c0       	rjmp	.+12     	; 0x708 <vfprintf+0xc4>
 6fc:	8a e0       	ldi	r24, 0x0A	; 10
 6fe:	98 9e       	mul	r9, r24
 700:	20 0d       	add	r18, r0
 702:	11 24       	eor	r1, r1
 704:	92 2e       	mov	r9, r18
 706:	11 c0       	rjmp	.+34     	; 0x72a <vfprintf+0xe6>
 708:	ea e0       	ldi	r30, 0x0A	; 10
 70a:	2e 9e       	mul	r2, r30
 70c:	20 0d       	add	r18, r0
 70e:	11 24       	eor	r1, r1
 710:	22 2e       	mov	r2, r18
 712:	f3 2d       	mov	r31, r3
 714:	f0 62       	ori	r31, 0x20	; 32
 716:	3f 2e       	mov	r3, r31
 718:	08 c0       	rjmp	.+16     	; 0x72a <vfprintf+0xe6>
 71a:	8c 36       	cpi	r24, 0x6C	; 108
 71c:	21 f4       	brne	.+8      	; 0x726 <vfprintf+0xe2>
 71e:	83 2d       	mov	r24, r3
 720:	80 68       	ori	r24, 0x80	; 128
 722:	38 2e       	mov	r3, r24
 724:	02 c0       	rjmp	.+4      	; 0x72a <vfprintf+0xe6>
 726:	88 36       	cpi	r24, 0x68	; 104
 728:	41 f4       	brne	.+16     	; 0x73a <vfprintf+0xf6>
 72a:	f7 01       	movw	r30, r14
 72c:	93 fd       	sbrc	r25, 3
 72e:	85 91       	lpm	r24, Z+
 730:	93 ff       	sbrs	r25, 3
 732:	81 91       	ld	r24, Z+
 734:	7f 01       	movw	r14, r30
 736:	81 11       	cpse	r24, r1
 738:	b3 cf       	rjmp	.-154    	; 0x6a0 <vfprintf+0x5c>
 73a:	98 2f       	mov	r25, r24
 73c:	9f 7d       	andi	r25, 0xDF	; 223
 73e:	95 54       	subi	r25, 0x45	; 69
 740:	93 30       	cpi	r25, 0x03	; 3
 742:	28 f4       	brcc	.+10     	; 0x74e <vfprintf+0x10a>
 744:	0c 5f       	subi	r16, 0xFC	; 252
 746:	1f 4f       	sbci	r17, 0xFF	; 255
 748:	9f e3       	ldi	r25, 0x3F	; 63
 74a:	99 83       	std	Y+1, r25	; 0x01
 74c:	0d c0       	rjmp	.+26     	; 0x768 <vfprintf+0x124>
 74e:	83 36       	cpi	r24, 0x63	; 99
 750:	31 f0       	breq	.+12     	; 0x75e <vfprintf+0x11a>
 752:	83 37       	cpi	r24, 0x73	; 115
 754:	71 f0       	breq	.+28     	; 0x772 <vfprintf+0x12e>
 756:	83 35       	cpi	r24, 0x53	; 83
 758:	09 f0       	breq	.+2      	; 0x75c <vfprintf+0x118>
 75a:	59 c0       	rjmp	.+178    	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 75c:	21 c0       	rjmp	.+66     	; 0x7a0 <vfprintf+0x15c>
 75e:	f8 01       	movw	r30, r16
 760:	80 81       	ld	r24, Z
 762:	89 83       	std	Y+1, r24	; 0x01
 764:	0e 5f       	subi	r16, 0xFE	; 254
 766:	1f 4f       	sbci	r17, 0xFF	; 255
 768:	88 24       	eor	r8, r8
 76a:	83 94       	inc	r8
 76c:	91 2c       	mov	r9, r1
 76e:	53 01       	movw	r10, r6
 770:	13 c0       	rjmp	.+38     	; 0x798 <vfprintf+0x154>
 772:	28 01       	movw	r4, r16
 774:	f2 e0       	ldi	r31, 0x02	; 2
 776:	4f 0e       	add	r4, r31
 778:	51 1c       	adc	r5, r1
 77a:	f8 01       	movw	r30, r16
 77c:	a0 80       	ld	r10, Z
 77e:	b1 80       	ldd	r11, Z+1	; 0x01
 780:	36 fe       	sbrs	r3, 6
 782:	03 c0       	rjmp	.+6      	; 0x78a <vfprintf+0x146>
 784:	69 2d       	mov	r22, r9
 786:	70 e0       	ldi	r23, 0x00	; 0
 788:	02 c0       	rjmp	.+4      	; 0x78e <vfprintf+0x14a>
 78a:	6f ef       	ldi	r22, 0xFF	; 255
 78c:	7f ef       	ldi	r23, 0xFF	; 255
 78e:	c5 01       	movw	r24, r10
 790:	0e 94 0e 05 	call	0xa1c	; 0xa1c <strnlen>
 794:	4c 01       	movw	r8, r24
 796:	82 01       	movw	r16, r4
 798:	f3 2d       	mov	r31, r3
 79a:	ff 77       	andi	r31, 0x7F	; 127
 79c:	3f 2e       	mov	r3, r31
 79e:	16 c0       	rjmp	.+44     	; 0x7cc <vfprintf+0x188>
 7a0:	28 01       	movw	r4, r16
 7a2:	22 e0       	ldi	r18, 0x02	; 2
 7a4:	42 0e       	add	r4, r18
 7a6:	51 1c       	adc	r5, r1
 7a8:	f8 01       	movw	r30, r16
 7aa:	a0 80       	ld	r10, Z
 7ac:	b1 80       	ldd	r11, Z+1	; 0x01
 7ae:	36 fe       	sbrs	r3, 6
 7b0:	03 c0       	rjmp	.+6      	; 0x7b8 <vfprintf+0x174>
 7b2:	69 2d       	mov	r22, r9
 7b4:	70 e0       	ldi	r23, 0x00	; 0
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <vfprintf+0x178>
 7b8:	6f ef       	ldi	r22, 0xFF	; 255
 7ba:	7f ef       	ldi	r23, 0xFF	; 255
 7bc:	c5 01       	movw	r24, r10
 7be:	0e 94 03 05 	call	0xa06	; 0xa06 <strnlen_P>
 7c2:	4c 01       	movw	r8, r24
 7c4:	f3 2d       	mov	r31, r3
 7c6:	f0 68       	ori	r31, 0x80	; 128
 7c8:	3f 2e       	mov	r3, r31
 7ca:	82 01       	movw	r16, r4
 7cc:	33 fc       	sbrc	r3, 3
 7ce:	1b c0       	rjmp	.+54     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7d0:	82 2d       	mov	r24, r2
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	88 16       	cp	r8, r24
 7d6:	99 06       	cpc	r9, r25
 7d8:	b0 f4       	brcc	.+44     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7da:	b6 01       	movw	r22, r12
 7dc:	80 e2       	ldi	r24, 0x20	; 32
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	0e 94 19 05 	call	0xa32	; 0xa32 <fputc>
 7e4:	2a 94       	dec	r2
 7e6:	f4 cf       	rjmp	.-24     	; 0x7d0 <vfprintf+0x18c>
 7e8:	f5 01       	movw	r30, r10
 7ea:	37 fc       	sbrc	r3, 7
 7ec:	85 91       	lpm	r24, Z+
 7ee:	37 fe       	sbrs	r3, 7
 7f0:	81 91       	ld	r24, Z+
 7f2:	5f 01       	movw	r10, r30
 7f4:	b6 01       	movw	r22, r12
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	0e 94 19 05 	call	0xa32	; 0xa32 <fputc>
 7fc:	21 10       	cpse	r2, r1
 7fe:	2a 94       	dec	r2
 800:	21 e0       	ldi	r18, 0x01	; 1
 802:	82 1a       	sub	r8, r18
 804:	91 08       	sbc	r9, r1
 806:	81 14       	cp	r8, r1
 808:	91 04       	cpc	r9, r1
 80a:	71 f7       	brne	.-36     	; 0x7e8 <vfprintf+0x1a4>
 80c:	e8 c0       	rjmp	.+464    	; 0x9de <__stack+0x17f>
 80e:	84 36       	cpi	r24, 0x64	; 100
 810:	11 f0       	breq	.+4      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 812:	89 36       	cpi	r24, 0x69	; 105
 814:	41 f5       	brne	.+80     	; 0x866 <__stack+0x7>
 816:	f8 01       	movw	r30, r16
 818:	37 fe       	sbrs	r3, 7
 81a:	07 c0       	rjmp	.+14     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 81c:	60 81       	ld	r22, Z
 81e:	71 81       	ldd	r23, Z+1	; 0x01
 820:	82 81       	ldd	r24, Z+2	; 0x02
 822:	93 81       	ldd	r25, Z+3	; 0x03
 824:	0c 5f       	subi	r16, 0xFC	; 252
 826:	1f 4f       	sbci	r17, 0xFF	; 255
 828:	08 c0       	rjmp	.+16     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 82a:	60 81       	ld	r22, Z
 82c:	71 81       	ldd	r23, Z+1	; 0x01
 82e:	07 2e       	mov	r0, r23
 830:	00 0c       	add	r0, r0
 832:	88 0b       	sbc	r24, r24
 834:	99 0b       	sbc	r25, r25
 836:	0e 5f       	subi	r16, 0xFE	; 254
 838:	1f 4f       	sbci	r17, 0xFF	; 255
 83a:	f3 2d       	mov	r31, r3
 83c:	ff 76       	andi	r31, 0x6F	; 111
 83e:	3f 2e       	mov	r3, r31
 840:	97 ff       	sbrs	r25, 7
 842:	09 c0       	rjmp	.+18     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 844:	90 95       	com	r25
 846:	80 95       	com	r24
 848:	70 95       	com	r23
 84a:	61 95       	neg	r22
 84c:	7f 4f       	sbci	r23, 0xFF	; 255
 84e:	8f 4f       	sbci	r24, 0xFF	; 255
 850:	9f 4f       	sbci	r25, 0xFF	; 255
 852:	f0 68       	ori	r31, 0x80	; 128
 854:	3f 2e       	mov	r3, r31
 856:	2a e0       	ldi	r18, 0x0A	; 10
 858:	30 e0       	ldi	r19, 0x00	; 0
 85a:	a3 01       	movw	r20, r6
 85c:	0e 94 55 05 	call	0xaaa	; 0xaaa <__ultoa_invert>
 860:	88 2e       	mov	r8, r24
 862:	86 18       	sub	r8, r6
 864:	45 c0       	rjmp	.+138    	; 0x8f0 <__stack+0x91>
 866:	85 37       	cpi	r24, 0x75	; 117
 868:	31 f4       	brne	.+12     	; 0x876 <__stack+0x17>
 86a:	23 2d       	mov	r18, r3
 86c:	2f 7e       	andi	r18, 0xEF	; 239
 86e:	b2 2e       	mov	r11, r18
 870:	2a e0       	ldi	r18, 0x0A	; 10
 872:	30 e0       	ldi	r19, 0x00	; 0
 874:	25 c0       	rjmp	.+74     	; 0x8c0 <__stack+0x61>
 876:	93 2d       	mov	r25, r3
 878:	99 7f       	andi	r25, 0xF9	; 249
 87a:	b9 2e       	mov	r11, r25
 87c:	8f 36       	cpi	r24, 0x6F	; 111
 87e:	c1 f0       	breq	.+48     	; 0x8b0 <__stack+0x51>
 880:	18 f4       	brcc	.+6      	; 0x888 <__stack+0x29>
 882:	88 35       	cpi	r24, 0x58	; 88
 884:	79 f0       	breq	.+30     	; 0x8a4 <__stack+0x45>
 886:	b5 c0       	rjmp	.+362    	; 0x9f2 <__stack+0x193>
 888:	80 37       	cpi	r24, 0x70	; 112
 88a:	19 f0       	breq	.+6      	; 0x892 <__stack+0x33>
 88c:	88 37       	cpi	r24, 0x78	; 120
 88e:	21 f0       	breq	.+8      	; 0x898 <__stack+0x39>
 890:	b0 c0       	rjmp	.+352    	; 0x9f2 <__stack+0x193>
 892:	e9 2f       	mov	r30, r25
 894:	e0 61       	ori	r30, 0x10	; 16
 896:	be 2e       	mov	r11, r30
 898:	b4 fe       	sbrs	r11, 4
 89a:	0d c0       	rjmp	.+26     	; 0x8b6 <__stack+0x57>
 89c:	fb 2d       	mov	r31, r11
 89e:	f4 60       	ori	r31, 0x04	; 4
 8a0:	bf 2e       	mov	r11, r31
 8a2:	09 c0       	rjmp	.+18     	; 0x8b6 <__stack+0x57>
 8a4:	34 fe       	sbrs	r3, 4
 8a6:	0a c0       	rjmp	.+20     	; 0x8bc <__stack+0x5d>
 8a8:	29 2f       	mov	r18, r25
 8aa:	26 60       	ori	r18, 0x06	; 6
 8ac:	b2 2e       	mov	r11, r18
 8ae:	06 c0       	rjmp	.+12     	; 0x8bc <__stack+0x5d>
 8b0:	28 e0       	ldi	r18, 0x08	; 8
 8b2:	30 e0       	ldi	r19, 0x00	; 0
 8b4:	05 c0       	rjmp	.+10     	; 0x8c0 <__stack+0x61>
 8b6:	20 e1       	ldi	r18, 0x10	; 16
 8b8:	30 e0       	ldi	r19, 0x00	; 0
 8ba:	02 c0       	rjmp	.+4      	; 0x8c0 <__stack+0x61>
 8bc:	20 e1       	ldi	r18, 0x10	; 16
 8be:	32 e0       	ldi	r19, 0x02	; 2
 8c0:	f8 01       	movw	r30, r16
 8c2:	b7 fe       	sbrs	r11, 7
 8c4:	07 c0       	rjmp	.+14     	; 0x8d4 <__stack+0x75>
 8c6:	60 81       	ld	r22, Z
 8c8:	71 81       	ldd	r23, Z+1	; 0x01
 8ca:	82 81       	ldd	r24, Z+2	; 0x02
 8cc:	93 81       	ldd	r25, Z+3	; 0x03
 8ce:	0c 5f       	subi	r16, 0xFC	; 252
 8d0:	1f 4f       	sbci	r17, 0xFF	; 255
 8d2:	06 c0       	rjmp	.+12     	; 0x8e0 <__stack+0x81>
 8d4:	60 81       	ld	r22, Z
 8d6:	71 81       	ldd	r23, Z+1	; 0x01
 8d8:	80 e0       	ldi	r24, 0x00	; 0
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	0e 5f       	subi	r16, 0xFE	; 254
 8de:	1f 4f       	sbci	r17, 0xFF	; 255
 8e0:	a3 01       	movw	r20, r6
 8e2:	0e 94 55 05 	call	0xaaa	; 0xaaa <__ultoa_invert>
 8e6:	88 2e       	mov	r8, r24
 8e8:	86 18       	sub	r8, r6
 8ea:	fb 2d       	mov	r31, r11
 8ec:	ff 77       	andi	r31, 0x7F	; 127
 8ee:	3f 2e       	mov	r3, r31
 8f0:	36 fe       	sbrs	r3, 6
 8f2:	0d c0       	rjmp	.+26     	; 0x90e <__stack+0xaf>
 8f4:	23 2d       	mov	r18, r3
 8f6:	2e 7f       	andi	r18, 0xFE	; 254
 8f8:	a2 2e       	mov	r10, r18
 8fa:	89 14       	cp	r8, r9
 8fc:	58 f4       	brcc	.+22     	; 0x914 <__stack+0xb5>
 8fe:	34 fe       	sbrs	r3, 4
 900:	0b c0       	rjmp	.+22     	; 0x918 <__stack+0xb9>
 902:	32 fc       	sbrc	r3, 2
 904:	09 c0       	rjmp	.+18     	; 0x918 <__stack+0xb9>
 906:	83 2d       	mov	r24, r3
 908:	8e 7e       	andi	r24, 0xEE	; 238
 90a:	a8 2e       	mov	r10, r24
 90c:	05 c0       	rjmp	.+10     	; 0x918 <__stack+0xb9>
 90e:	b8 2c       	mov	r11, r8
 910:	a3 2c       	mov	r10, r3
 912:	03 c0       	rjmp	.+6      	; 0x91a <__stack+0xbb>
 914:	b8 2c       	mov	r11, r8
 916:	01 c0       	rjmp	.+2      	; 0x91a <__stack+0xbb>
 918:	b9 2c       	mov	r11, r9
 91a:	a4 fe       	sbrs	r10, 4
 91c:	0f c0       	rjmp	.+30     	; 0x93c <__stack+0xdd>
 91e:	fe 01       	movw	r30, r28
 920:	e8 0d       	add	r30, r8
 922:	f1 1d       	adc	r31, r1
 924:	80 81       	ld	r24, Z
 926:	80 33       	cpi	r24, 0x30	; 48
 928:	21 f4       	brne	.+8      	; 0x932 <__stack+0xd3>
 92a:	9a 2d       	mov	r25, r10
 92c:	99 7e       	andi	r25, 0xE9	; 233
 92e:	a9 2e       	mov	r10, r25
 930:	09 c0       	rjmp	.+18     	; 0x944 <__stack+0xe5>
 932:	a2 fe       	sbrs	r10, 2
 934:	06 c0       	rjmp	.+12     	; 0x942 <__stack+0xe3>
 936:	b3 94       	inc	r11
 938:	b3 94       	inc	r11
 93a:	04 c0       	rjmp	.+8      	; 0x944 <__stack+0xe5>
 93c:	8a 2d       	mov	r24, r10
 93e:	86 78       	andi	r24, 0x86	; 134
 940:	09 f0       	breq	.+2      	; 0x944 <__stack+0xe5>
 942:	b3 94       	inc	r11
 944:	a3 fc       	sbrc	r10, 3
 946:	11 c0       	rjmp	.+34     	; 0x96a <__stack+0x10b>
 948:	a0 fe       	sbrs	r10, 0
 94a:	06 c0       	rjmp	.+12     	; 0x958 <__stack+0xf9>
 94c:	b2 14       	cp	r11, r2
 94e:	88 f4       	brcc	.+34     	; 0x972 <__stack+0x113>
 950:	28 0c       	add	r2, r8
 952:	92 2c       	mov	r9, r2
 954:	9b 18       	sub	r9, r11
 956:	0e c0       	rjmp	.+28     	; 0x974 <__stack+0x115>
 958:	b2 14       	cp	r11, r2
 95a:	60 f4       	brcc	.+24     	; 0x974 <__stack+0x115>
 95c:	b6 01       	movw	r22, r12
 95e:	80 e2       	ldi	r24, 0x20	; 32
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	0e 94 19 05 	call	0xa32	; 0xa32 <fputc>
 966:	b3 94       	inc	r11
 968:	f7 cf       	rjmp	.-18     	; 0x958 <__stack+0xf9>
 96a:	b2 14       	cp	r11, r2
 96c:	18 f4       	brcc	.+6      	; 0x974 <__stack+0x115>
 96e:	2b 18       	sub	r2, r11
 970:	02 c0       	rjmp	.+4      	; 0x976 <__stack+0x117>
 972:	98 2c       	mov	r9, r8
 974:	21 2c       	mov	r2, r1
 976:	a4 fe       	sbrs	r10, 4
 978:	10 c0       	rjmp	.+32     	; 0x99a <__stack+0x13b>
 97a:	b6 01       	movw	r22, r12
 97c:	80 e3       	ldi	r24, 0x30	; 48
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	0e 94 19 05 	call	0xa32	; 0xa32 <fputc>
 984:	a2 fe       	sbrs	r10, 2
 986:	17 c0       	rjmp	.+46     	; 0x9b6 <__stack+0x157>
 988:	a1 fc       	sbrc	r10, 1
 98a:	03 c0       	rjmp	.+6      	; 0x992 <__stack+0x133>
 98c:	88 e7       	ldi	r24, 0x78	; 120
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	02 c0       	rjmp	.+4      	; 0x996 <__stack+0x137>
 992:	88 e5       	ldi	r24, 0x58	; 88
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	b6 01       	movw	r22, r12
 998:	0c c0       	rjmp	.+24     	; 0x9b2 <__stack+0x153>
 99a:	8a 2d       	mov	r24, r10
 99c:	86 78       	andi	r24, 0x86	; 134
 99e:	59 f0       	breq	.+22     	; 0x9b6 <__stack+0x157>
 9a0:	a1 fe       	sbrs	r10, 1
 9a2:	02 c0       	rjmp	.+4      	; 0x9a8 <__stack+0x149>
 9a4:	8b e2       	ldi	r24, 0x2B	; 43
 9a6:	01 c0       	rjmp	.+2      	; 0x9aa <__stack+0x14b>
 9a8:	80 e2       	ldi	r24, 0x20	; 32
 9aa:	a7 fc       	sbrc	r10, 7
 9ac:	8d e2       	ldi	r24, 0x2D	; 45
 9ae:	b6 01       	movw	r22, r12
 9b0:	90 e0       	ldi	r25, 0x00	; 0
 9b2:	0e 94 19 05 	call	0xa32	; 0xa32 <fputc>
 9b6:	89 14       	cp	r8, r9
 9b8:	38 f4       	brcc	.+14     	; 0x9c8 <__stack+0x169>
 9ba:	b6 01       	movw	r22, r12
 9bc:	80 e3       	ldi	r24, 0x30	; 48
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	0e 94 19 05 	call	0xa32	; 0xa32 <fputc>
 9c4:	9a 94       	dec	r9
 9c6:	f7 cf       	rjmp	.-18     	; 0x9b6 <__stack+0x157>
 9c8:	8a 94       	dec	r8
 9ca:	f3 01       	movw	r30, r6
 9cc:	e8 0d       	add	r30, r8
 9ce:	f1 1d       	adc	r31, r1
 9d0:	80 81       	ld	r24, Z
 9d2:	b6 01       	movw	r22, r12
 9d4:	90 e0       	ldi	r25, 0x00	; 0
 9d6:	0e 94 19 05 	call	0xa32	; 0xa32 <fputc>
 9da:	81 10       	cpse	r8, r1
 9dc:	f5 cf       	rjmp	.-22     	; 0x9c8 <__stack+0x169>
 9de:	22 20       	and	r2, r2
 9e0:	09 f4       	brne	.+2      	; 0x9e4 <__stack+0x185>
 9e2:	42 ce       	rjmp	.-892    	; 0x668 <vfprintf+0x24>
 9e4:	b6 01       	movw	r22, r12
 9e6:	80 e2       	ldi	r24, 0x20	; 32
 9e8:	90 e0       	ldi	r25, 0x00	; 0
 9ea:	0e 94 19 05 	call	0xa32	; 0xa32 <fputc>
 9ee:	2a 94       	dec	r2
 9f0:	f6 cf       	rjmp	.-20     	; 0x9de <__stack+0x17f>
 9f2:	f6 01       	movw	r30, r12
 9f4:	86 81       	ldd	r24, Z+6	; 0x06
 9f6:	97 81       	ldd	r25, Z+7	; 0x07
 9f8:	02 c0       	rjmp	.+4      	; 0x9fe <__stack+0x19f>
 9fa:	8f ef       	ldi	r24, 0xFF	; 255
 9fc:	9f ef       	ldi	r25, 0xFF	; 255
 9fe:	2b 96       	adiw	r28, 0x0b	; 11
 a00:	e2 e1       	ldi	r30, 0x12	; 18
 a02:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <__epilogue_restores__>

00000a06 <strnlen_P>:
 a06:	fc 01       	movw	r30, r24
 a08:	05 90       	lpm	r0, Z+
 a0a:	61 50       	subi	r22, 0x01	; 1
 a0c:	70 40       	sbci	r23, 0x00	; 0
 a0e:	01 10       	cpse	r0, r1
 a10:	d8 f7       	brcc	.-10     	; 0xa08 <strnlen_P+0x2>
 a12:	80 95       	com	r24
 a14:	90 95       	com	r25
 a16:	8e 0f       	add	r24, r30
 a18:	9f 1f       	adc	r25, r31
 a1a:	08 95       	ret

00000a1c <strnlen>:
 a1c:	fc 01       	movw	r30, r24
 a1e:	61 50       	subi	r22, 0x01	; 1
 a20:	70 40       	sbci	r23, 0x00	; 0
 a22:	01 90       	ld	r0, Z+
 a24:	01 10       	cpse	r0, r1
 a26:	d8 f7       	brcc	.-10     	; 0xa1e <strnlen+0x2>
 a28:	80 95       	com	r24
 a2a:	90 95       	com	r25
 a2c:	8e 0f       	add	r24, r30
 a2e:	9f 1f       	adc	r25, r31
 a30:	08 95       	ret

00000a32 <fputc>:
 a32:	0f 93       	push	r16
 a34:	1f 93       	push	r17
 a36:	cf 93       	push	r28
 a38:	df 93       	push	r29
 a3a:	fb 01       	movw	r30, r22
 a3c:	23 81       	ldd	r18, Z+3	; 0x03
 a3e:	21 fd       	sbrc	r18, 1
 a40:	03 c0       	rjmp	.+6      	; 0xa48 <fputc+0x16>
 a42:	8f ef       	ldi	r24, 0xFF	; 255
 a44:	9f ef       	ldi	r25, 0xFF	; 255
 a46:	2c c0       	rjmp	.+88     	; 0xaa0 <fputc+0x6e>
 a48:	22 ff       	sbrs	r18, 2
 a4a:	16 c0       	rjmp	.+44     	; 0xa78 <fputc+0x46>
 a4c:	46 81       	ldd	r20, Z+6	; 0x06
 a4e:	57 81       	ldd	r21, Z+7	; 0x07
 a50:	24 81       	ldd	r18, Z+4	; 0x04
 a52:	35 81       	ldd	r19, Z+5	; 0x05
 a54:	42 17       	cp	r20, r18
 a56:	53 07       	cpc	r21, r19
 a58:	44 f4       	brge	.+16     	; 0xa6a <fputc+0x38>
 a5a:	a0 81       	ld	r26, Z
 a5c:	b1 81       	ldd	r27, Z+1	; 0x01
 a5e:	9d 01       	movw	r18, r26
 a60:	2f 5f       	subi	r18, 0xFF	; 255
 a62:	3f 4f       	sbci	r19, 0xFF	; 255
 a64:	31 83       	std	Z+1, r19	; 0x01
 a66:	20 83       	st	Z, r18
 a68:	8c 93       	st	X, r24
 a6a:	26 81       	ldd	r18, Z+6	; 0x06
 a6c:	37 81       	ldd	r19, Z+7	; 0x07
 a6e:	2f 5f       	subi	r18, 0xFF	; 255
 a70:	3f 4f       	sbci	r19, 0xFF	; 255
 a72:	37 83       	std	Z+7, r19	; 0x07
 a74:	26 83       	std	Z+6, r18	; 0x06
 a76:	14 c0       	rjmp	.+40     	; 0xaa0 <fputc+0x6e>
 a78:	8b 01       	movw	r16, r22
 a7a:	ec 01       	movw	r28, r24
 a7c:	fb 01       	movw	r30, r22
 a7e:	00 84       	ldd	r0, Z+8	; 0x08
 a80:	f1 85       	ldd	r31, Z+9	; 0x09
 a82:	e0 2d       	mov	r30, r0
 a84:	09 95       	icall
 a86:	89 2b       	or	r24, r25
 a88:	e1 f6       	brne	.-72     	; 0xa42 <fputc+0x10>
 a8a:	d8 01       	movw	r26, r16
 a8c:	16 96       	adiw	r26, 0x06	; 6
 a8e:	8d 91       	ld	r24, X+
 a90:	9c 91       	ld	r25, X
 a92:	17 97       	sbiw	r26, 0x07	; 7
 a94:	01 96       	adiw	r24, 0x01	; 1
 a96:	17 96       	adiw	r26, 0x07	; 7
 a98:	9c 93       	st	X, r25
 a9a:	8e 93       	st	-X, r24
 a9c:	16 97       	sbiw	r26, 0x06	; 6
 a9e:	ce 01       	movw	r24, r28
 aa0:	df 91       	pop	r29
 aa2:	cf 91       	pop	r28
 aa4:	1f 91       	pop	r17
 aa6:	0f 91       	pop	r16
 aa8:	08 95       	ret

00000aaa <__ultoa_invert>:
 aaa:	fa 01       	movw	r30, r20
 aac:	aa 27       	eor	r26, r26
 aae:	28 30       	cpi	r18, 0x08	; 8
 ab0:	51 f1       	breq	.+84     	; 0xb06 <__ultoa_invert+0x5c>
 ab2:	20 31       	cpi	r18, 0x10	; 16
 ab4:	81 f1       	breq	.+96     	; 0xb16 <__ultoa_invert+0x6c>
 ab6:	e8 94       	clt
 ab8:	6f 93       	push	r22
 aba:	6e 7f       	andi	r22, 0xFE	; 254
 abc:	6e 5f       	subi	r22, 0xFE	; 254
 abe:	7f 4f       	sbci	r23, 0xFF	; 255
 ac0:	8f 4f       	sbci	r24, 0xFF	; 255
 ac2:	9f 4f       	sbci	r25, 0xFF	; 255
 ac4:	af 4f       	sbci	r26, 0xFF	; 255
 ac6:	b1 e0       	ldi	r27, 0x01	; 1
 ac8:	3e d0       	rcall	.+124    	; 0xb46 <__ultoa_invert+0x9c>
 aca:	b4 e0       	ldi	r27, 0x04	; 4
 acc:	3c d0       	rcall	.+120    	; 0xb46 <__ultoa_invert+0x9c>
 ace:	67 0f       	add	r22, r23
 ad0:	78 1f       	adc	r23, r24
 ad2:	89 1f       	adc	r24, r25
 ad4:	9a 1f       	adc	r25, r26
 ad6:	a1 1d       	adc	r26, r1
 ad8:	68 0f       	add	r22, r24
 ada:	79 1f       	adc	r23, r25
 adc:	8a 1f       	adc	r24, r26
 ade:	91 1d       	adc	r25, r1
 ae0:	a1 1d       	adc	r26, r1
 ae2:	6a 0f       	add	r22, r26
 ae4:	71 1d       	adc	r23, r1
 ae6:	81 1d       	adc	r24, r1
 ae8:	91 1d       	adc	r25, r1
 aea:	a1 1d       	adc	r26, r1
 aec:	20 d0       	rcall	.+64     	; 0xb2e <__ultoa_invert+0x84>
 aee:	09 f4       	brne	.+2      	; 0xaf2 <__ultoa_invert+0x48>
 af0:	68 94       	set
 af2:	3f 91       	pop	r19
 af4:	2a e0       	ldi	r18, 0x0A	; 10
 af6:	26 9f       	mul	r18, r22
 af8:	11 24       	eor	r1, r1
 afa:	30 19       	sub	r19, r0
 afc:	30 5d       	subi	r19, 0xD0	; 208
 afe:	31 93       	st	Z+, r19
 b00:	de f6       	brtc	.-74     	; 0xab8 <__ultoa_invert+0xe>
 b02:	cf 01       	movw	r24, r30
 b04:	08 95       	ret
 b06:	46 2f       	mov	r20, r22
 b08:	47 70       	andi	r20, 0x07	; 7
 b0a:	40 5d       	subi	r20, 0xD0	; 208
 b0c:	41 93       	st	Z+, r20
 b0e:	b3 e0       	ldi	r27, 0x03	; 3
 b10:	0f d0       	rcall	.+30     	; 0xb30 <__ultoa_invert+0x86>
 b12:	c9 f7       	brne	.-14     	; 0xb06 <__ultoa_invert+0x5c>
 b14:	f6 cf       	rjmp	.-20     	; 0xb02 <__ultoa_invert+0x58>
 b16:	46 2f       	mov	r20, r22
 b18:	4f 70       	andi	r20, 0x0F	; 15
 b1a:	40 5d       	subi	r20, 0xD0	; 208
 b1c:	4a 33       	cpi	r20, 0x3A	; 58
 b1e:	18 f0       	brcs	.+6      	; 0xb26 <__ultoa_invert+0x7c>
 b20:	49 5d       	subi	r20, 0xD9	; 217
 b22:	31 fd       	sbrc	r19, 1
 b24:	40 52       	subi	r20, 0x20	; 32
 b26:	41 93       	st	Z+, r20
 b28:	02 d0       	rcall	.+4      	; 0xb2e <__ultoa_invert+0x84>
 b2a:	a9 f7       	brne	.-22     	; 0xb16 <__ultoa_invert+0x6c>
 b2c:	ea cf       	rjmp	.-44     	; 0xb02 <__ultoa_invert+0x58>
 b2e:	b4 e0       	ldi	r27, 0x04	; 4
 b30:	a6 95       	lsr	r26
 b32:	97 95       	ror	r25
 b34:	87 95       	ror	r24
 b36:	77 95       	ror	r23
 b38:	67 95       	ror	r22
 b3a:	ba 95       	dec	r27
 b3c:	c9 f7       	brne	.-14     	; 0xb30 <__ultoa_invert+0x86>
 b3e:	00 97       	sbiw	r24, 0x00	; 0
 b40:	61 05       	cpc	r22, r1
 b42:	71 05       	cpc	r23, r1
 b44:	08 95       	ret
 b46:	9b 01       	movw	r18, r22
 b48:	ac 01       	movw	r20, r24
 b4a:	0a 2e       	mov	r0, r26
 b4c:	06 94       	lsr	r0
 b4e:	57 95       	ror	r21
 b50:	47 95       	ror	r20
 b52:	37 95       	ror	r19
 b54:	27 95       	ror	r18
 b56:	ba 95       	dec	r27
 b58:	c9 f7       	brne	.-14     	; 0xb4c <__ultoa_invert+0xa2>
 b5a:	62 0f       	add	r22, r18
 b5c:	73 1f       	adc	r23, r19
 b5e:	84 1f       	adc	r24, r20
 b60:	95 1f       	adc	r25, r21
 b62:	a0 1d       	adc	r26, r0
 b64:	08 95       	ret

00000b66 <__prologue_saves__>:
 b66:	2f 92       	push	r2
 b68:	3f 92       	push	r3
 b6a:	4f 92       	push	r4
 b6c:	5f 92       	push	r5
 b6e:	6f 92       	push	r6
 b70:	7f 92       	push	r7
 b72:	8f 92       	push	r8
 b74:	9f 92       	push	r9
 b76:	af 92       	push	r10
 b78:	bf 92       	push	r11
 b7a:	cf 92       	push	r12
 b7c:	df 92       	push	r13
 b7e:	ef 92       	push	r14
 b80:	ff 92       	push	r15
 b82:	0f 93       	push	r16
 b84:	1f 93       	push	r17
 b86:	cf 93       	push	r28
 b88:	df 93       	push	r29
 b8a:	cd b7       	in	r28, 0x3d	; 61
 b8c:	de b7       	in	r29, 0x3e	; 62
 b8e:	ca 1b       	sub	r28, r26
 b90:	db 0b       	sbc	r29, r27
 b92:	0f b6       	in	r0, 0x3f	; 63
 b94:	f8 94       	cli
 b96:	de bf       	out	0x3e, r29	; 62
 b98:	0f be       	out	0x3f, r0	; 63
 b9a:	cd bf       	out	0x3d, r28	; 61
 b9c:	09 94       	ijmp

00000b9e <__epilogue_restores__>:
 b9e:	2a 88       	ldd	r2, Y+18	; 0x12
 ba0:	39 88       	ldd	r3, Y+17	; 0x11
 ba2:	48 88       	ldd	r4, Y+16	; 0x10
 ba4:	5f 84       	ldd	r5, Y+15	; 0x0f
 ba6:	6e 84       	ldd	r6, Y+14	; 0x0e
 ba8:	7d 84       	ldd	r7, Y+13	; 0x0d
 baa:	8c 84       	ldd	r8, Y+12	; 0x0c
 bac:	9b 84       	ldd	r9, Y+11	; 0x0b
 bae:	aa 84       	ldd	r10, Y+10	; 0x0a
 bb0:	b9 84       	ldd	r11, Y+9	; 0x09
 bb2:	c8 84       	ldd	r12, Y+8	; 0x08
 bb4:	df 80       	ldd	r13, Y+7	; 0x07
 bb6:	ee 80       	ldd	r14, Y+6	; 0x06
 bb8:	fd 80       	ldd	r15, Y+5	; 0x05
 bba:	0c 81       	ldd	r16, Y+4	; 0x04
 bbc:	1b 81       	ldd	r17, Y+3	; 0x03
 bbe:	aa 81       	ldd	r26, Y+2	; 0x02
 bc0:	b9 81       	ldd	r27, Y+1	; 0x01
 bc2:	ce 0f       	add	r28, r30
 bc4:	d1 1d       	adc	r29, r1
 bc6:	0f b6       	in	r0, 0x3f	; 63
 bc8:	f8 94       	cli
 bca:	de bf       	out	0x3e, r29	; 62
 bcc:	0f be       	out	0x3f, r0	; 63
 bce:	cd bf       	out	0x3d, r28	; 61
 bd0:	ed 01       	movw	r28, r26
 bd2:	08 95       	ret

00000bd4 <_exit>:
 bd4:	f8 94       	cli

00000bd6 <__stop_program>:
 bd6:	ff cf       	rjmp	.-2      	; 0xbd6 <__stop_program>
