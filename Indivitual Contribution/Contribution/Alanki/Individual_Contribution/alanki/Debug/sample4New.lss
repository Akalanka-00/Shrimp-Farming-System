
sample4New.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000bc8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  00000bc8  00000c5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800086  00800086  00000c82  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c82  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ce0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000d1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d35  00000000  00000000  00000dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000070e  00000000  00000000  00001af9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000645  00000000  00000000  00002207  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b0  00000000  00000000  0000284c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000048b  00000000  00000000  000029fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000669  00000000  00000000  00002e87  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  000034f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ec       	ldi	r30, 0xC8	; 200
  68:	fb e0       	ldi	r31, 0x0B	; 11
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 38       	cpi	r26, 0x86	; 134
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e8       	ldi	r26, 0x86	; 134
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 3a       	cpi	r26, 0xA0	; 160
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 7d 01 	call	0x2fa	; 0x2fa <main>
  8a:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <TWIInit>:
		LcdChar(str[i]);
	}
}
void LcdCursor(uint8_t Cursor){
	if (Cursor==0)
	{LcdCommand(0xC);
  92:	11 b8       	out	0x01, r1	; 1
  94:	88 e4       	ldi	r24, 0x48	; 72
  96:	80 b9       	out	0x00, r24	; 0
  98:	84 e0       	ldi	r24, 0x04	; 4
  9a:	86 bf       	out	0x36, r24	; 54
  9c:	08 95       	ret

0000009e <TWIStart>:
  9e:	84 ea       	ldi	r24, 0xA4	; 164
  a0:	86 bf       	out	0x36, r24	; 54
  a2:	06 b6       	in	r0, 0x36	; 54
  a4:	07 fe       	sbrs	r0, 7
  a6:	fd cf       	rjmp	.-6      	; 0xa2 <TWIStart+0x4>
  a8:	08 95       	ret

000000aa <TWIStop>:
  aa:	84 e9       	ldi	r24, 0x94	; 148
  ac:	86 bf       	out	0x36, r24	; 54
  ae:	06 b6       	in	r0, 0x36	; 54
  b0:	04 fc       	sbrc	r0, 4
  b2:	fd cf       	rjmp	.-6      	; 0xae <TWIStop+0x4>
  b4:	08 95       	ret

000000b6 <TWIWriteAddrs>:
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	86 2b       	or	r24, r22
  be:	83 b9       	out	0x03, r24	; 3
  c0:	84 e8       	ldi	r24, 0x84	; 132
  c2:	86 bf       	out	0x36, r24	; 54
  c4:	06 b6       	in	r0, 0x36	; 54
  c6:	07 fe       	sbrs	r0, 7
  c8:	fd cf       	rjmp	.-6      	; 0xc4 <TWIWriteAddrs+0xe>
  ca:	81 b1       	in	r24, 0x01	; 1
  cc:	88 7f       	andi	r24, 0xF8	; 248
  ce:	08 95       	ret

000000d0 <TWIWriteData>:
  d0:	83 b9       	out	0x03, r24	; 3
  d2:	84 e8       	ldi	r24, 0x84	; 132
  d4:	86 bf       	out	0x36, r24	; 54
  d6:	06 b6       	in	r0, 0x36	; 54
  d8:	07 fe       	sbrs	r0, 7
  da:	fd cf       	rjmp	.-6      	; 0xd6 <TWIWriteData+0x6>
  dc:	81 b1       	in	r24, 0x01	; 1
  de:	88 7f       	andi	r24, 0xF8	; 248
  e0:	08 95       	ret

000000e2 <LcdBacklight>:
  e2:	81 30       	cpi	r24, 0x01	; 1
  e4:	21 f4       	brne	.+8      	; 0xee <LcdBacklight+0xc>
  e6:	88 e0       	ldi	r24, 0x08	; 8
  e8:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <Backlight>
  ec:	08 95       	ret
  ee:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <Backlight>
  f2:	08 95       	ret

000000f4 <Lcd4bitdata>:
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	d8 2f       	mov	r29, r24
  fc:	c6 2f       	mov	r28, r22
  fe:	0e 94 4f 00 	call	0x9e	; 0x9e <TWIStart>
 102:	60 e0       	ldi	r22, 0x00	; 0
 104:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <deviceAdress>
 108:	0e 94 5b 00 	call	0xb6	; 0xb6 <TWIWriteAddrs>
 10c:	1d 2f       	mov	r17, r29
 10e:	1c 2b       	or	r17, r28
 110:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <Backlight>
 114:	81 2b       	or	r24, r17
 116:	0e 94 68 00 	call	0xd0	; 0xd0 <TWIWriteData>
 11a:	0e 94 55 00 	call	0xaa	; 0xaa <TWIStop>
 11e:	0e 94 4f 00 	call	0x9e	; 0x9e <TWIStart>
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <deviceAdress>
 128:	0e 94 5b 00 	call	0xb6	; 0xb6 <TWIWriteAddrs>
 12c:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <Backlight>
 130:	81 2b       	or	r24, r17
 132:	84 60       	ori	r24, 0x04	; 4
 134:	0e 94 68 00 	call	0xd0	; 0xd0 <TWIWriteData>
 138:	0e 94 55 00 	call	0xaa	; 0xaa <TWIStop>
 13c:	8f e8       	ldi	r24, 0x8F	; 143
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <Lcd4bitdata+0x4c>
 144:	00 c0       	rjmp	.+0      	; 0x146 <Lcd4bitdata+0x52>
 146:	00 00       	nop
 148:	0e 94 4f 00 	call	0x9e	; 0x9e <TWIStart>
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <deviceAdress>
 152:	0e 94 5b 00 	call	0xb6	; 0xb6 <TWIWriteAddrs>
 156:	db 7f       	andi	r29, 0xFB	; 251
 158:	cd 2b       	or	r28, r29
 15a:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <Backlight>
 15e:	8c 2b       	or	r24, r28
 160:	0e 94 68 00 	call	0xd0	; 0xd0 <TWIWriteData>
 164:	0e 94 55 00 	call	0xaa	; 0xaa <TWIStop>
 168:	8f e9       	ldi	r24, 0x9F	; 159
 16a:	9f e0       	ldi	r25, 0x0F	; 15
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <Lcd4bitdata+0x78>
 170:	00 c0       	rjmp	.+0      	; 0x172 <Lcd4bitdata+0x7e>
 172:	00 00       	nop
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	1f 91       	pop	r17
 17a:	08 95       	ret

0000017c <LcdCommand>:
 17c:	cf 93       	push	r28
 17e:	c8 2f       	mov	r28, r24
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	80 7f       	andi	r24, 0xF0	; 240
 184:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
 188:	60 e0       	ldi	r22, 0x00	; 0
 18a:	8c 2f       	mov	r24, r28
 18c:	82 95       	swap	r24
 18e:	80 7f       	andi	r24, 0xF0	; 240
 190:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <LcdInit>:
 198:	cf 93       	push	r28
 19a:	c8 2f       	mov	r28, r24
 19c:	0e 94 49 00 	call	0x92	; 0x92 <TWIInit>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	0e 94 71 00 	call	0xe2	; 0xe2 <LcdBacklight>
 1a6:	8f e3       	ldi	r24, 0x3F	; 63
 1a8:	9c e9       	ldi	r25, 0x9C	; 156
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <LcdInit+0x12>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <LcdInit+0x18>
 1b0:	00 00       	nop
 1b2:	c0 93 8b 00 	sts	0x008B, r28	; 0x80008b <deviceAdress>
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1bc:	88 e2       	ldi	r24, 0x28	; 40
 1be:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1c2:	8c e0       	ldi	r24, 0x0C	; 12
 1c4:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1c8:	86 e0       	ldi	r24, 0x06	; 6
 1ca:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
 1d4:	cf 91       	pop	r28
 1d6:	08 95       	ret

000001d8 <LcdChar>:
	Lcd4bitdata(command&0xF0,0);
	Lcd4bitdata((command<<4)&0xF0,0);
	
}

void LcdChar(uint8_t Lcdcharval){
 1d8:	cf 93       	push	r28
 1da:	c8 2f       	mov	r28, r24
	Lcd4bitdata(Lcdcharval&0xF0,1);
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	80 7f       	andi	r24, 0xF0	; 240
 1e0:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
 1e4:	61 e0       	ldi	r22, 0x01	; 1
 1e6:	8c 2f       	mov	r24, r28
 1e8:	82 95       	swap	r24
 1ea:	80 7f       	andi	r24, 0xF0	; 240
 1ec:	0e 94 7a 00 	call	0xf4	; 0xf4 <Lcd4bitdata>
	
}
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <LcdString>:
	LcdString(str);
	
}

void LcdString (char *str)		/* Send string to LCD function */
{
 1f4:	0f 93       	push	r16
 1f6:	1f 93       	push	r17
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	8c 01       	movw	r16, r24
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 1fe:	c0 e0       	ldi	r28, 0x00	; 0
 200:	d0 e0       	ldi	r29, 0x00	; 0
 202:	03 c0       	rjmp	.+6      	; 0x20a <LcdString+0x16>
	{
		LcdChar(str[i]);
 204:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LcdChar>
}

void LcdString (char *str)		/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 208:	21 96       	adiw	r28, 0x01	; 1
 20a:	f8 01       	movw	r30, r16
 20c:	ec 0f       	add	r30, r28
 20e:	fd 1f       	adc	r31, r29
 210:	80 81       	ld	r24, Z
 212:	81 11       	cpse	r24, r1
 214:	f7 cf       	rjmp	.-18     	; 0x204 <LcdString+0x10>
	{
		LcdChar(str[i]);
	}
}
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	1f 91       	pop	r17
 21c:	0f 91       	pop	r16
 21e:	08 95       	ret

00000220 <LcdSetCursor>:
	Lcd4bitdata(Lcdcharval&0xF0,1);
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
	
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
 220:	cf 93       	push	r28
 222:	df 93       	push	r29
 224:	ea 01       	movw	r28, r20
	uint8_t tempcommand;
	switch(yaxis){
 226:	61 30       	cpi	r22, 0x01	; 1
 228:	31 f0       	breq	.+12     	; 0x236 <LcdSetCursor+0x16>
 22a:	58 f0       	brcs	.+22     	; 0x242 <LcdSetCursor+0x22>
 22c:	62 30       	cpi	r22, 0x02	; 2
 22e:	29 f0       	breq	.+10     	; 0x23a <LcdSetCursor+0x1a>
 230:	63 30       	cpi	r22, 0x03	; 3
 232:	29 f0       	breq	.+10     	; 0x23e <LcdSetCursor+0x1e>
 234:	07 c0       	rjmp	.+14     	; 0x244 <LcdSetCursor+0x24>
		case 0:tempcommand=0x80;break;  //yaxis =0
		case 1:tempcommand=0xC0;break;
 236:	90 ec       	ldi	r25, 0xC0	; 192
 238:	05 c0       	rjmp	.+10     	; 0x244 <LcdSetCursor+0x24>
		case 2:tempcommand=0x94;break;
 23a:	94 e9       	ldi	r25, 0x94	; 148
 23c:	03 c0       	rjmp	.+6      	; 0x244 <LcdSetCursor+0x24>
		case 3:tempcommand=0xd4;break;		
 23e:	94 ed       	ldi	r25, 0xD4	; 212
 240:	01 c0       	rjmp	.+2      	; 0x244 <LcdSetCursor+0x24>
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
	uint8_t tempcommand;
	switch(yaxis){
		case 0:tempcommand=0x80;break;  //yaxis =0
 242:	90 e8       	ldi	r25, 0x80	; 128
		case 1:tempcommand=0xC0;break;
		case 2:tempcommand=0x94;break;
		case 3:tempcommand=0xd4;break;		
	}
	LcdCommand(tempcommand|(0x0F&xaxis));
 244:	8f 70       	andi	r24, 0x0F	; 15
 246:	89 2b       	or	r24, r25
 248:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
	LcdString(str);
 24c:	ce 01       	movw	r24, r28
 24e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LcdString>
	
}
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <ReadADC>:
}

uint16_t ReadADC(uint8_t ADCchannel)
{
	//select ADC channel with safety mask
	ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
 258:	97 b1       	in	r25, 0x07	; 7
 25a:	90 7f       	andi	r25, 0xF0	; 240
 25c:	8f 70       	andi	r24, 0x0F	; 15
 25e:	89 2b       	or	r24, r25
 260:	87 b9       	out	0x07, r24	; 7
	//single conversion mode
	ADCSRA |= (1<<ADSC);
 262:	86 b1       	in	r24, 0x06	; 6
 264:	80 64       	ori	r24, 0x40	; 64
 266:	86 b9       	out	0x06, r24	; 6
	// wait until ADC conversion is complete
	while( ADCSRA & (1<<ADSC) );
 268:	36 99       	sbic	0x06, 6	; 6
 26a:	fe cf       	rjmp	.-4      	; 0x268 <ReadADC+0x10>
	return ADCW;
 26c:	84 b1       	in	r24, 0x04	; 4
 26e:	95 b1       	in	r25, 0x05	; 5
}
 270:	08 95       	ret

00000272 <getkeyNum>:

uint8_t getkeyNum(){
	DDRB=0b00001111;
 272:	8f e0       	ldi	r24, 0x0F	; 15
 274:	87 bb       	out	0x17, r24	; 23
	PORTB=0b11110000;
 276:	80 ef       	ldi	r24, 0xF0	; 240
 278:	88 bb       	out	0x18, r24	; 24
	uint8_t getx;
	uint8_t gety;
	while(1){
		
		uint8_t pin=(~(PINB|0x0F));
 27a:	86 b3       	in	r24, 0x16	; 22
 27c:	8f 60       	ori	r24, 0x0F	; 15
 27e:	80 95       	com	r24
		if (pin)
 280:	e1 f3       	breq	.-8      	; 0x27a <getkeyNum+0x8>
		{
			
			
			switch(pin){
 282:	80 32       	cpi	r24, 0x20	; 32
 284:	49 f0       	breq	.+18     	; 0x298 <getkeyNum+0x26>
 286:	18 f4       	brcc	.+6      	; 0x28e <getkeyNum+0x1c>
 288:	80 31       	cpi	r24, 0x10	; 16
 28a:	61 f0       	breq	.+24     	; 0x2a4 <getkeyNum+0x32>
 28c:	0c c0       	rjmp	.+24     	; 0x2a6 <getkeyNum+0x34>
 28e:	80 34       	cpi	r24, 0x40	; 64
 290:	29 f0       	breq	.+10     	; 0x29c <getkeyNum+0x2a>
 292:	80 38       	cpi	r24, 0x80	; 128
 294:	29 f0       	breq	.+10     	; 0x2a0 <getkeyNum+0x2e>
 296:	07 c0       	rjmp	.+14     	; 0x2a6 <getkeyNum+0x34>
				
				
				case (1<<4) :getx=0; break;
				case (1<<5) :getx=1;break;
 298:	91 e0       	ldi	r25, 0x01	; 1
 29a:	05 c0       	rjmp	.+10     	; 0x2a6 <getkeyNum+0x34>
				case (1<<6) :getx=2;break;
 29c:	92 e0       	ldi	r25, 0x02	; 2
 29e:	03 c0       	rjmp	.+6      	; 0x2a6 <getkeyNum+0x34>
				case (1<<7) :getx=3;break;
 2a0:	93 e0       	ldi	r25, 0x03	; 3
 2a2:	01 c0       	rjmp	.+2      	; 0x2a6 <getkeyNum+0x34>
			
			
			switch(pin){
				
				
				case (1<<4) :getx=0; break;
 2a4:	90 e0       	ldi	r25, 0x00	; 0
				case (1<<6) :getx=2;break;
				case (1<<7) :getx=3;break;
				
				
			} //switch
			DDRB=0b0;
 2a6:	17 ba       	out	0x17, r1	; 23
			PORTB=0b0;
 2a8:	18 ba       	out	0x18, r1	; 24
			
			DDRB=0b11110000;
 2aa:	80 ef       	ldi	r24, 0xF0	; 240
 2ac:	87 bb       	out	0x17, r24	; 23
			PORTB=0b00001111;
 2ae:	8f e0       	ldi	r24, 0x0F	; 15
 2b0:	88 bb       	out	0x18, r24	; 24
			
			pin=~(PINB|0xF0);
 2b2:	86 b3       	in	r24, 0x16	; 22
 2b4:	80 6f       	ori	r24, 0xF0	; 240
 2b6:	80 95       	com	r24
			
			switch(pin){
 2b8:	82 30       	cpi	r24, 0x02	; 2
 2ba:	49 f0       	breq	.+18     	; 0x2ce <getkeyNum+0x5c>
 2bc:	18 f4       	brcc	.+6      	; 0x2c4 <getkeyNum+0x52>
 2be:	81 30       	cpi	r24, 0x01	; 1
 2c0:	61 f0       	breq	.+24     	; 0x2da <getkeyNum+0x68>
 2c2:	0c c0       	rjmp	.+24     	; 0x2dc <getkeyNum+0x6a>
 2c4:	84 30       	cpi	r24, 0x04	; 4
 2c6:	29 f0       	breq	.+10     	; 0x2d2 <getkeyNum+0x60>
 2c8:	88 30       	cpi	r24, 0x08	; 8
 2ca:	29 f0       	breq	.+10     	; 0x2d6 <getkeyNum+0x64>
 2cc:	07 c0       	rjmp	.+14     	; 0x2dc <getkeyNum+0x6a>
				case (1<<0) :gety=0;break;
				case (1<<1) :gety=1;break;
 2ce:	e1 e0       	ldi	r30, 0x01	; 1
 2d0:	05 c0       	rjmp	.+10     	; 0x2dc <getkeyNum+0x6a>
				case (1<<2) :gety=2;break;
 2d2:	e2 e0       	ldi	r30, 0x02	; 2
 2d4:	03 c0       	rjmp	.+6      	; 0x2dc <getkeyNum+0x6a>
				case (1<<3) :gety=3;break;
 2d6:	e3 e0       	ldi	r30, 0x03	; 3
 2d8:	01 c0       	rjmp	.+2      	; 0x2dc <getkeyNum+0x6a>
			PORTB=0b00001111;
			
			pin=~(PINB|0xF0);
			
			switch(pin){
				case (1<<0) :gety=0;break;
 2da:	e0 e0       	ldi	r30, 0x00	; 0
				case (1<<2) :gety=2;break;
				case (1<<3) :gety=3;break;
				
			} //switch
			
			DDRB=0b00001111;
 2dc:	8f e0       	ldi	r24, 0x0F	; 15
 2de:	87 bb       	out	0x17, r24	; 23
			PORTB=0b11110000;
 2e0:	80 ef       	ldi	r24, 0xF0	; 240
 2e2:	88 bb       	out	0x18, r24	; 24
			
			
			return kaypad[gety][getx];
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	ee 0f       	add	r30, r30
 2e8:	ff 1f       	adc	r31, r31
 2ea:	ee 0f       	add	r30, r30
 2ec:	ff 1f       	adc	r31, r31
 2ee:	ea 58       	subi	r30, 0x8A	; 138
 2f0:	ff 4f       	sbci	r31, 0xFF	; 255
 2f2:	e9 0f       	add	r30, r25
 2f4:	f1 1d       	adc	r31, r1
		}//if
		
		
		
	}//while 1
}
 2f6:	80 81       	ld	r24, Z
 2f8:	08 95       	ret

000002fa <main>:
uint16_t ReadADC(uint8_t ADCchannel);
float ph=0;
char lcddata[20];
int main(void)
{
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));   // prescaler 128
 2fa:	86 b1       	in	r24, 0x06	; 6
 2fc:	87 60       	ori	r24, 0x07	; 7
 2fe:	86 b9       	out	0x06, r24	; 6
	ADMUX |= (1<<REFS0);					//external vcc
 300:	87 b1       	in	r24, 0x07	; 7
 302:	80 64       	ori	r24, 0x40	; 64
 304:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADEN);                            // Turn on ADC
 306:	86 b1       	in	r24, 0x06	; 6
 308:	80 68       	ori	r24, 0x80	; 128
 30a:	86 b9       	out	0x06, r24	; 6
	LcdInit(0x27);
 30c:	87 e2       	ldi	r24, 0x27	; 39
 30e:	0e 94 cc 00 	call	0x198	; 0x198 <LcdInit>
	LcdSetCursor(0,0,"Wait . . .");
 312:	40 e6       	ldi	r20, 0x60	; 96
 314:	50 e0       	ldi	r21, 0x00	; 0
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	0e 94 10 01 	call	0x220	; 0x220 <LcdSetCursor>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 31e:	2f ef       	ldi	r18, 0xFF	; 255
 320:	81 e1       	ldi	r24, 0x11	; 17
 322:	9a e7       	ldi	r25, 0x7A	; 122
 324:	21 50       	subi	r18, 0x01	; 1
 326:	80 40       	sbci	r24, 0x00	; 0
 328:	90 40       	sbci	r25, 0x00	; 0
 32a:	e1 f7       	brne	.-8      	; 0x324 <main+0x2a>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <main+0x34>
 32e:	00 00       	nop
	_delay_ms(5000);
	LcdCommand(LCD_CLEARDISPLAY);
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	0e 94 be 00 	call	0x17c	; 0x17c <LcdCommand>
	ph=ReadADC(0)*5.0/1024;
 336:	80 e0       	ldi	r24, 0x00	; 0
 338:	0e 94 2c 01 	call	0x258	; 0x258 <ReadADC>
 33c:	bc 01       	movw	r22, r24
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	0e 94 fd 01 	call	0x3fa	; 0x3fa <__floatunsisf>
 346:	20 e0       	ldi	r18, 0x00	; 0
 348:	30 e0       	ldi	r19, 0x00	; 0
 34a:	40 ea       	ldi	r20, 0xA0	; 160
 34c:	50 e4       	ldi	r21, 0x40	; 64
 34e:	0e 94 3a 02 	call	0x474	; 0x474 <__mulsf3>
 352:	20 e0       	ldi	r18, 0x00	; 0
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	40 e8       	ldi	r20, 0x80	; 128
 358:	5a e3       	ldi	r21, 0x3A	; 58
 35a:	0e 94 3a 02 	call	0x474	; 0x474 <__mulsf3>
 35e:	60 93 86 00 	sts	0x0086, r22	; 0x800086 <__data_end>
 362:	70 93 87 00 	sts	0x0087, r23	; 0x800087 <__data_end+0x1>
 366:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__data_end+0x2>
 36a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__data_end+0x3>
	sprintf(lcddata,"%0.2f",ph*3.5);
 36e:	20 e0       	ldi	r18, 0x00	; 0
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	40 e6       	ldi	r20, 0x60	; 96
 374:	50 e4       	ldi	r21, 0x40	; 64
 376:	0e 94 3a 02 	call	0x474	; 0x474 <__mulsf3>
 37a:	9f 93       	push	r25
 37c:	8f 93       	push	r24
 37e:	7f 93       	push	r23
 380:	6f 93       	push	r22
 382:	8b e6       	ldi	r24, 0x6B	; 107
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	9f 93       	push	r25
 388:	8f 93       	push	r24
 38a:	8c e8       	ldi	r24, 0x8C	; 140
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	9f 93       	push	r25
 390:	8f 93       	push	r24
 392:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <sprintf>
	LcdSetCursor(0,0,lcddata);
 396:	4c e8       	ldi	r20, 0x8C	; 140
 398:	50 e0       	ldi	r21, 0x00	; 0
 39a:	60 e0       	ldi	r22, 0x00	; 0
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	0e 94 10 01 	call	0x220	; 0x220 <LcdSetCursor>
	DDRD=0b1;
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	81 bb       	out	0x11, r24	; 17
 3a6:	8d b7       	in	r24, 0x3d	; 61
 3a8:	9e b7       	in	r25, 0x3e	; 62
 3aa:	08 96       	adiw	r24, 0x08	; 8
 3ac:	0f b6       	in	r0, 0x3f	; 63
 3ae:	f8 94       	cli
 3b0:	9e bf       	out	0x3e, r25	; 62
 3b2:	0f be       	out	0x3f, r0	; 63
 3b4:	8d bf       	out	0x3d, r24	; 61
	while (1)
	{	uint8_t key=getkeyNum();
 3b6:	0e 94 39 01 	call	0x272	; 0x272 <getkeyNum>
 3ba:	c8 2f       	mov	r28, r24
		sprintf(lcddata,"%02u",key);
 3bc:	1f 92       	push	r1
 3be:	8f 93       	push	r24
 3c0:	81 e7       	ldi	r24, 0x71	; 113
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	9f 93       	push	r25
 3c6:	8f 93       	push	r24
 3c8:	8c e8       	ldi	r24, 0x8C	; 140
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	9f 93       	push	r25
 3ce:	8f 93       	push	r24
 3d0:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <sprintf>
		LcdSetCursor(0,1,lcddata);
 3d4:	4c e8       	ldi	r20, 0x8C	; 140
 3d6:	50 e0       	ldi	r21, 0x00	; 0
 3d8:	61 e0       	ldi	r22, 0x01	; 1
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	0e 94 10 01 	call	0x220	; 0x220 <LcdSetCursor>
		if (key>5)
 3e0:	0f 90       	pop	r0
 3e2:	0f 90       	pop	r0
 3e4:	0f 90       	pop	r0
 3e6:	0f 90       	pop	r0
 3e8:	0f 90       	pop	r0
 3ea:	0f 90       	pop	r0
 3ec:	c6 30       	cpi	r28, 0x06	; 6
 3ee:	18 f0       	brcs	.+6      	; 0x3f6 <main+0xfc>
		{PORTD=0b1;
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	82 bb       	out	0x12, r24	; 18
 3f4:	e0 cf       	rjmp	.-64     	; 0x3b6 <main+0xbc>
		}
		else
		{PORTD=0b0;
 3f6:	12 ba       	out	0x12, r1	; 18
 3f8:	de cf       	rjmp	.-68     	; 0x3b6 <main+0xbc>

000003fa <__floatunsisf>:
 3fa:	e8 94       	clt
 3fc:	09 c0       	rjmp	.+18     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>

000003fe <__floatsisf>:
 3fe:	97 fb       	bst	r25, 7
 400:	3e f4       	brtc	.+14     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 402:	90 95       	com	r25
 404:	80 95       	com	r24
 406:	70 95       	com	r23
 408:	61 95       	neg	r22
 40a:	7f 4f       	sbci	r23, 0xFF	; 255
 40c:	8f 4f       	sbci	r24, 0xFF	; 255
 40e:	9f 4f       	sbci	r25, 0xFF	; 255
 410:	99 23       	and	r25, r25
 412:	a9 f0       	breq	.+42     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 414:	f9 2f       	mov	r31, r25
 416:	96 e9       	ldi	r25, 0x96	; 150
 418:	bb 27       	eor	r27, r27
 41a:	93 95       	inc	r25
 41c:	f6 95       	lsr	r31
 41e:	87 95       	ror	r24
 420:	77 95       	ror	r23
 422:	67 95       	ror	r22
 424:	b7 95       	ror	r27
 426:	f1 11       	cpse	r31, r1
 428:	f8 cf       	rjmp	.-16     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 42a:	fa f4       	brpl	.+62     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 42c:	bb 0f       	add	r27, r27
 42e:	11 f4       	brne	.+4      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 430:	60 ff       	sbrs	r22, 0
 432:	1b c0       	rjmp	.+54     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 434:	6f 5f       	subi	r22, 0xFF	; 255
 436:	7f 4f       	sbci	r23, 0xFF	; 255
 438:	8f 4f       	sbci	r24, 0xFF	; 255
 43a:	9f 4f       	sbci	r25, 0xFF	; 255
 43c:	16 c0       	rjmp	.+44     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 43e:	88 23       	and	r24, r24
 440:	11 f0       	breq	.+4      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 442:	96 e9       	ldi	r25, 0x96	; 150
 444:	11 c0       	rjmp	.+34     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 446:	77 23       	and	r23, r23
 448:	21 f0       	breq	.+8      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 44a:	9e e8       	ldi	r25, 0x8E	; 142
 44c:	87 2f       	mov	r24, r23
 44e:	76 2f       	mov	r23, r22
 450:	05 c0       	rjmp	.+10     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 452:	66 23       	and	r22, r22
 454:	71 f0       	breq	.+28     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 456:	96 e8       	ldi	r25, 0x86	; 134
 458:	86 2f       	mov	r24, r22
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	60 e0       	ldi	r22, 0x00	; 0
 45e:	2a f0       	brmi	.+10     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 460:	9a 95       	dec	r25
 462:	66 0f       	add	r22, r22
 464:	77 1f       	adc	r23, r23
 466:	88 1f       	adc	r24, r24
 468:	da f7       	brpl	.-10     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 46a:	88 0f       	add	r24, r24
 46c:	96 95       	lsr	r25
 46e:	87 95       	ror	r24
 470:	97 f9       	bld	r25, 7
 472:	08 95       	ret

00000474 <__mulsf3>:
 474:	0e 94 4d 02 	call	0x49a	; 0x49a <__mulsf3x>
 478:	0c 94 be 02 	jmp	0x57c	; 0x57c <__fp_round>
 47c:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscA>
 480:	38 f0       	brcs	.+14     	; 0x490 <__mulsf3+0x1c>
 482:	0e 94 b7 02 	call	0x56e	; 0x56e <__fp_pscB>
 486:	20 f0       	brcs	.+8      	; 0x490 <__mulsf3+0x1c>
 488:	95 23       	and	r25, r21
 48a:	11 f0       	breq	.+4      	; 0x490 <__mulsf3+0x1c>
 48c:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_inf>
 490:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_nan>
 494:	11 24       	eor	r1, r1
 496:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__fp_szero>

0000049a <__mulsf3x>:
 49a:	0e 94 cf 02 	call	0x59e	; 0x59e <__fp_split3>
 49e:	70 f3       	brcs	.-36     	; 0x47c <__mulsf3+0x8>

000004a0 <__mulsf3_pse>:
 4a0:	95 9f       	mul	r25, r21
 4a2:	c1 f3       	breq	.-16     	; 0x494 <__mulsf3+0x20>
 4a4:	95 0f       	add	r25, r21
 4a6:	50 e0       	ldi	r21, 0x00	; 0
 4a8:	55 1f       	adc	r21, r21
 4aa:	62 9f       	mul	r22, r18
 4ac:	f0 01       	movw	r30, r0
 4ae:	72 9f       	mul	r23, r18
 4b0:	bb 27       	eor	r27, r27
 4b2:	f0 0d       	add	r31, r0
 4b4:	b1 1d       	adc	r27, r1
 4b6:	63 9f       	mul	r22, r19
 4b8:	aa 27       	eor	r26, r26
 4ba:	f0 0d       	add	r31, r0
 4bc:	b1 1d       	adc	r27, r1
 4be:	aa 1f       	adc	r26, r26
 4c0:	64 9f       	mul	r22, r20
 4c2:	66 27       	eor	r22, r22
 4c4:	b0 0d       	add	r27, r0
 4c6:	a1 1d       	adc	r26, r1
 4c8:	66 1f       	adc	r22, r22
 4ca:	82 9f       	mul	r24, r18
 4cc:	22 27       	eor	r18, r18
 4ce:	b0 0d       	add	r27, r0
 4d0:	a1 1d       	adc	r26, r1
 4d2:	62 1f       	adc	r22, r18
 4d4:	73 9f       	mul	r23, r19
 4d6:	b0 0d       	add	r27, r0
 4d8:	a1 1d       	adc	r26, r1
 4da:	62 1f       	adc	r22, r18
 4dc:	83 9f       	mul	r24, r19
 4de:	a0 0d       	add	r26, r0
 4e0:	61 1d       	adc	r22, r1
 4e2:	22 1f       	adc	r18, r18
 4e4:	74 9f       	mul	r23, r20
 4e6:	33 27       	eor	r19, r19
 4e8:	a0 0d       	add	r26, r0
 4ea:	61 1d       	adc	r22, r1
 4ec:	23 1f       	adc	r18, r19
 4ee:	84 9f       	mul	r24, r20
 4f0:	60 0d       	add	r22, r0
 4f2:	21 1d       	adc	r18, r1
 4f4:	82 2f       	mov	r24, r18
 4f6:	76 2f       	mov	r23, r22
 4f8:	6a 2f       	mov	r22, r26
 4fa:	11 24       	eor	r1, r1
 4fc:	9f 57       	subi	r25, 0x7F	; 127
 4fe:	50 40       	sbci	r21, 0x00	; 0
 500:	9a f0       	brmi	.+38     	; 0x528 <__mulsf3_pse+0x88>
 502:	f1 f0       	breq	.+60     	; 0x540 <__mulsf3_pse+0xa0>
 504:	88 23       	and	r24, r24
 506:	4a f0       	brmi	.+18     	; 0x51a <__mulsf3_pse+0x7a>
 508:	ee 0f       	add	r30, r30
 50a:	ff 1f       	adc	r31, r31
 50c:	bb 1f       	adc	r27, r27
 50e:	66 1f       	adc	r22, r22
 510:	77 1f       	adc	r23, r23
 512:	88 1f       	adc	r24, r24
 514:	91 50       	subi	r25, 0x01	; 1
 516:	50 40       	sbci	r21, 0x00	; 0
 518:	a9 f7       	brne	.-22     	; 0x504 <__mulsf3_pse+0x64>
 51a:	9e 3f       	cpi	r25, 0xFE	; 254
 51c:	51 05       	cpc	r21, r1
 51e:	80 f0       	brcs	.+32     	; 0x540 <__mulsf3_pse+0xa0>
 520:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_inf>
 524:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__fp_szero>
 528:	5f 3f       	cpi	r21, 0xFF	; 255
 52a:	e4 f3       	brlt	.-8      	; 0x524 <__mulsf3_pse+0x84>
 52c:	98 3e       	cpi	r25, 0xE8	; 232
 52e:	d4 f3       	brlt	.-12     	; 0x524 <__mulsf3_pse+0x84>
 530:	86 95       	lsr	r24
 532:	77 95       	ror	r23
 534:	67 95       	ror	r22
 536:	b7 95       	ror	r27
 538:	f7 95       	ror	r31
 53a:	e7 95       	ror	r30
 53c:	9f 5f       	subi	r25, 0xFF	; 255
 53e:	c1 f7       	brne	.-16     	; 0x530 <__mulsf3_pse+0x90>
 540:	fe 2b       	or	r31, r30
 542:	88 0f       	add	r24, r24
 544:	91 1d       	adc	r25, r1
 546:	96 95       	lsr	r25
 548:	87 95       	ror	r24
 54a:	97 f9       	bld	r25, 7
 54c:	08 95       	ret

0000054e <__fp_inf>:
 54e:	97 f9       	bld	r25, 7
 550:	9f 67       	ori	r25, 0x7F	; 127
 552:	80 e8       	ldi	r24, 0x80	; 128
 554:	70 e0       	ldi	r23, 0x00	; 0
 556:	60 e0       	ldi	r22, 0x00	; 0
 558:	08 95       	ret

0000055a <__fp_nan>:
 55a:	9f ef       	ldi	r25, 0xFF	; 255
 55c:	80 ec       	ldi	r24, 0xC0	; 192
 55e:	08 95       	ret

00000560 <__fp_pscA>:
 560:	00 24       	eor	r0, r0
 562:	0a 94       	dec	r0
 564:	16 16       	cp	r1, r22
 566:	17 06       	cpc	r1, r23
 568:	18 06       	cpc	r1, r24
 56a:	09 06       	cpc	r0, r25
 56c:	08 95       	ret

0000056e <__fp_pscB>:
 56e:	00 24       	eor	r0, r0
 570:	0a 94       	dec	r0
 572:	12 16       	cp	r1, r18
 574:	13 06       	cpc	r1, r19
 576:	14 06       	cpc	r1, r20
 578:	05 06       	cpc	r0, r21
 57a:	08 95       	ret

0000057c <__fp_round>:
 57c:	09 2e       	mov	r0, r25
 57e:	03 94       	inc	r0
 580:	00 0c       	add	r0, r0
 582:	11 f4       	brne	.+4      	; 0x588 <__fp_round+0xc>
 584:	88 23       	and	r24, r24
 586:	52 f0       	brmi	.+20     	; 0x59c <__fp_round+0x20>
 588:	bb 0f       	add	r27, r27
 58a:	40 f4       	brcc	.+16     	; 0x59c <__fp_round+0x20>
 58c:	bf 2b       	or	r27, r31
 58e:	11 f4       	brne	.+4      	; 0x594 <__fp_round+0x18>
 590:	60 ff       	sbrs	r22, 0
 592:	04 c0       	rjmp	.+8      	; 0x59c <__fp_round+0x20>
 594:	6f 5f       	subi	r22, 0xFF	; 255
 596:	7f 4f       	sbci	r23, 0xFF	; 255
 598:	8f 4f       	sbci	r24, 0xFF	; 255
 59a:	9f 4f       	sbci	r25, 0xFF	; 255
 59c:	08 95       	ret

0000059e <__fp_split3>:
 59e:	57 fd       	sbrc	r21, 7
 5a0:	90 58       	subi	r25, 0x80	; 128
 5a2:	44 0f       	add	r20, r20
 5a4:	55 1f       	adc	r21, r21
 5a6:	59 f0       	breq	.+22     	; 0x5be <__fp_splitA+0x10>
 5a8:	5f 3f       	cpi	r21, 0xFF	; 255
 5aa:	71 f0       	breq	.+28     	; 0x5c8 <__fp_splitA+0x1a>
 5ac:	47 95       	ror	r20

000005ae <__fp_splitA>:
 5ae:	88 0f       	add	r24, r24
 5b0:	97 fb       	bst	r25, 7
 5b2:	99 1f       	adc	r25, r25
 5b4:	61 f0       	breq	.+24     	; 0x5ce <__fp_splitA+0x20>
 5b6:	9f 3f       	cpi	r25, 0xFF	; 255
 5b8:	79 f0       	breq	.+30     	; 0x5d8 <__fp_splitA+0x2a>
 5ba:	87 95       	ror	r24
 5bc:	08 95       	ret
 5be:	12 16       	cp	r1, r18
 5c0:	13 06       	cpc	r1, r19
 5c2:	14 06       	cpc	r1, r20
 5c4:	55 1f       	adc	r21, r21
 5c6:	f2 cf       	rjmp	.-28     	; 0x5ac <__fp_split3+0xe>
 5c8:	46 95       	lsr	r20
 5ca:	f1 df       	rcall	.-30     	; 0x5ae <__fp_splitA>
 5cc:	08 c0       	rjmp	.+16     	; 0x5de <__fp_splitA+0x30>
 5ce:	16 16       	cp	r1, r22
 5d0:	17 06       	cpc	r1, r23
 5d2:	18 06       	cpc	r1, r24
 5d4:	99 1f       	adc	r25, r25
 5d6:	f1 cf       	rjmp	.-30     	; 0x5ba <__fp_splitA+0xc>
 5d8:	86 95       	lsr	r24
 5da:	71 05       	cpc	r23, r1
 5dc:	61 05       	cpc	r22, r1
 5de:	08 94       	sec
 5e0:	08 95       	ret

000005e2 <__fp_zero>:
 5e2:	e8 94       	clt

000005e4 <__fp_szero>:
 5e4:	bb 27       	eor	r27, r27
 5e6:	66 27       	eor	r22, r22
 5e8:	77 27       	eor	r23, r23
 5ea:	cb 01       	movw	r24, r22
 5ec:	97 f9       	bld	r25, 7
 5ee:	08 95       	ret

000005f0 <sprintf>:
 5f0:	ae e0       	ldi	r26, 0x0E	; 14
 5f2:	b0 e0       	ldi	r27, 0x00	; 0
 5f4:	ee ef       	ldi	r30, 0xFE	; 254
 5f6:	f2 e0       	ldi	r31, 0x02	; 2
 5f8:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__prologue_saves__+0x1c>
 5fc:	0d 89       	ldd	r16, Y+21	; 0x15
 5fe:	1e 89       	ldd	r17, Y+22	; 0x16
 600:	86 e0       	ldi	r24, 0x06	; 6
 602:	8c 83       	std	Y+4, r24	; 0x04
 604:	1a 83       	std	Y+2, r17	; 0x02
 606:	09 83       	std	Y+1, r16	; 0x01
 608:	8f ef       	ldi	r24, 0xFF	; 255
 60a:	9f e7       	ldi	r25, 0x7F	; 127
 60c:	9e 83       	std	Y+6, r25	; 0x06
 60e:	8d 83       	std	Y+5, r24	; 0x05
 610:	ae 01       	movw	r20, r28
 612:	47 5e       	subi	r20, 0xE7	; 231
 614:	5f 4f       	sbci	r21, 0xFF	; 255
 616:	6f 89       	ldd	r22, Y+23	; 0x17
 618:	78 8d       	ldd	r23, Y+24	; 0x18
 61a:	ce 01       	movw	r24, r28
 61c:	01 96       	adiw	r24, 0x01	; 1
 61e:	0e 94 1a 03 	call	0x634	; 0x634 <vfprintf>
 622:	ef 81       	ldd	r30, Y+7	; 0x07
 624:	f8 85       	ldd	r31, Y+8	; 0x08
 626:	e0 0f       	add	r30, r16
 628:	f1 1f       	adc	r31, r17
 62a:	10 82       	st	Z, r1
 62c:	2e 96       	adiw	r28, 0x0e	; 14
 62e:	e4 e0       	ldi	r30, 0x04	; 4
 630:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <__epilogue_restores__+0x1c>

00000634 <vfprintf>:
 634:	ab e0       	ldi	r26, 0x0B	; 11
 636:	b0 e0       	ldi	r27, 0x00	; 0
 638:	e0 e2       	ldi	r30, 0x20	; 32
 63a:	f3 e0       	ldi	r31, 0x03	; 3
 63c:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__prologue_saves__>
 640:	6c 01       	movw	r12, r24
 642:	7b 01       	movw	r14, r22
 644:	8a 01       	movw	r16, r20
 646:	fc 01       	movw	r30, r24
 648:	17 82       	std	Z+7, r1	; 0x07
 64a:	16 82       	std	Z+6, r1	; 0x06
 64c:	83 81       	ldd	r24, Z+3	; 0x03
 64e:	81 ff       	sbrs	r24, 1
 650:	cc c1       	rjmp	.+920    	; 0x9ea <__stack+0x18b>
 652:	ce 01       	movw	r24, r28
 654:	01 96       	adiw	r24, 0x01	; 1
 656:	3c 01       	movw	r6, r24
 658:	f6 01       	movw	r30, r12
 65a:	93 81       	ldd	r25, Z+3	; 0x03
 65c:	f7 01       	movw	r30, r14
 65e:	93 fd       	sbrc	r25, 3
 660:	85 91       	lpm	r24, Z+
 662:	93 ff       	sbrs	r25, 3
 664:	81 91       	ld	r24, Z+
 666:	7f 01       	movw	r14, r30
 668:	88 23       	and	r24, r24
 66a:	09 f4       	brne	.+2      	; 0x66e <vfprintf+0x3a>
 66c:	ba c1       	rjmp	.+884    	; 0x9e2 <__stack+0x183>
 66e:	85 32       	cpi	r24, 0x25	; 37
 670:	39 f4       	brne	.+14     	; 0x680 <vfprintf+0x4c>
 672:	93 fd       	sbrc	r25, 3
 674:	85 91       	lpm	r24, Z+
 676:	93 ff       	sbrs	r25, 3
 678:	81 91       	ld	r24, Z+
 67a:	7f 01       	movw	r14, r30
 67c:	85 32       	cpi	r24, 0x25	; 37
 67e:	29 f4       	brne	.+10     	; 0x68a <vfprintf+0x56>
 680:	b6 01       	movw	r22, r12
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	0e 94 11 05 	call	0xa22	; 0xa22 <fputc>
 688:	e7 cf       	rjmp	.-50     	; 0x658 <vfprintf+0x24>
 68a:	91 2c       	mov	r9, r1
 68c:	21 2c       	mov	r2, r1
 68e:	31 2c       	mov	r3, r1
 690:	ff e1       	ldi	r31, 0x1F	; 31
 692:	f3 15       	cp	r31, r3
 694:	d8 f0       	brcs	.+54     	; 0x6cc <vfprintf+0x98>
 696:	8b 32       	cpi	r24, 0x2B	; 43
 698:	79 f0       	breq	.+30     	; 0x6b8 <vfprintf+0x84>
 69a:	38 f4       	brcc	.+14     	; 0x6aa <vfprintf+0x76>
 69c:	80 32       	cpi	r24, 0x20	; 32
 69e:	79 f0       	breq	.+30     	; 0x6be <vfprintf+0x8a>
 6a0:	83 32       	cpi	r24, 0x23	; 35
 6a2:	a1 f4       	brne	.+40     	; 0x6cc <vfprintf+0x98>
 6a4:	23 2d       	mov	r18, r3
 6a6:	20 61       	ori	r18, 0x10	; 16
 6a8:	1d c0       	rjmp	.+58     	; 0x6e4 <vfprintf+0xb0>
 6aa:	8d 32       	cpi	r24, 0x2D	; 45
 6ac:	61 f0       	breq	.+24     	; 0x6c6 <vfprintf+0x92>
 6ae:	80 33       	cpi	r24, 0x30	; 48
 6b0:	69 f4       	brne	.+26     	; 0x6cc <vfprintf+0x98>
 6b2:	23 2d       	mov	r18, r3
 6b4:	21 60       	ori	r18, 0x01	; 1
 6b6:	16 c0       	rjmp	.+44     	; 0x6e4 <vfprintf+0xb0>
 6b8:	83 2d       	mov	r24, r3
 6ba:	82 60       	ori	r24, 0x02	; 2
 6bc:	38 2e       	mov	r3, r24
 6be:	e3 2d       	mov	r30, r3
 6c0:	e4 60       	ori	r30, 0x04	; 4
 6c2:	3e 2e       	mov	r3, r30
 6c4:	2a c0       	rjmp	.+84     	; 0x71a <vfprintf+0xe6>
 6c6:	f3 2d       	mov	r31, r3
 6c8:	f8 60       	ori	r31, 0x08	; 8
 6ca:	1d c0       	rjmp	.+58     	; 0x706 <vfprintf+0xd2>
 6cc:	37 fc       	sbrc	r3, 7
 6ce:	2d c0       	rjmp	.+90     	; 0x72a <vfprintf+0xf6>
 6d0:	20 ed       	ldi	r18, 0xD0	; 208
 6d2:	28 0f       	add	r18, r24
 6d4:	2a 30       	cpi	r18, 0x0A	; 10
 6d6:	40 f0       	brcs	.+16     	; 0x6e8 <vfprintf+0xb4>
 6d8:	8e 32       	cpi	r24, 0x2E	; 46
 6da:	b9 f4       	brne	.+46     	; 0x70a <vfprintf+0xd6>
 6dc:	36 fc       	sbrc	r3, 6
 6de:	81 c1       	rjmp	.+770    	; 0x9e2 <__stack+0x183>
 6e0:	23 2d       	mov	r18, r3
 6e2:	20 64       	ori	r18, 0x40	; 64
 6e4:	32 2e       	mov	r3, r18
 6e6:	19 c0       	rjmp	.+50     	; 0x71a <vfprintf+0xe6>
 6e8:	36 fe       	sbrs	r3, 6
 6ea:	06 c0       	rjmp	.+12     	; 0x6f8 <vfprintf+0xc4>
 6ec:	8a e0       	ldi	r24, 0x0A	; 10
 6ee:	98 9e       	mul	r9, r24
 6f0:	20 0d       	add	r18, r0
 6f2:	11 24       	eor	r1, r1
 6f4:	92 2e       	mov	r9, r18
 6f6:	11 c0       	rjmp	.+34     	; 0x71a <vfprintf+0xe6>
 6f8:	ea e0       	ldi	r30, 0x0A	; 10
 6fa:	2e 9e       	mul	r2, r30
 6fc:	20 0d       	add	r18, r0
 6fe:	11 24       	eor	r1, r1
 700:	22 2e       	mov	r2, r18
 702:	f3 2d       	mov	r31, r3
 704:	f0 62       	ori	r31, 0x20	; 32
 706:	3f 2e       	mov	r3, r31
 708:	08 c0       	rjmp	.+16     	; 0x71a <vfprintf+0xe6>
 70a:	8c 36       	cpi	r24, 0x6C	; 108
 70c:	21 f4       	brne	.+8      	; 0x716 <vfprintf+0xe2>
 70e:	83 2d       	mov	r24, r3
 710:	80 68       	ori	r24, 0x80	; 128
 712:	38 2e       	mov	r3, r24
 714:	02 c0       	rjmp	.+4      	; 0x71a <vfprintf+0xe6>
 716:	88 36       	cpi	r24, 0x68	; 104
 718:	41 f4       	brne	.+16     	; 0x72a <vfprintf+0xf6>
 71a:	f7 01       	movw	r30, r14
 71c:	93 fd       	sbrc	r25, 3
 71e:	85 91       	lpm	r24, Z+
 720:	93 ff       	sbrs	r25, 3
 722:	81 91       	ld	r24, Z+
 724:	7f 01       	movw	r14, r30
 726:	81 11       	cpse	r24, r1
 728:	b3 cf       	rjmp	.-154    	; 0x690 <vfprintf+0x5c>
 72a:	98 2f       	mov	r25, r24
 72c:	9f 7d       	andi	r25, 0xDF	; 223
 72e:	95 54       	subi	r25, 0x45	; 69
 730:	93 30       	cpi	r25, 0x03	; 3
 732:	28 f4       	brcc	.+10     	; 0x73e <vfprintf+0x10a>
 734:	0c 5f       	subi	r16, 0xFC	; 252
 736:	1f 4f       	sbci	r17, 0xFF	; 255
 738:	9f e3       	ldi	r25, 0x3F	; 63
 73a:	99 83       	std	Y+1, r25	; 0x01
 73c:	0d c0       	rjmp	.+26     	; 0x758 <vfprintf+0x124>
 73e:	83 36       	cpi	r24, 0x63	; 99
 740:	31 f0       	breq	.+12     	; 0x74e <vfprintf+0x11a>
 742:	83 37       	cpi	r24, 0x73	; 115
 744:	71 f0       	breq	.+28     	; 0x762 <vfprintf+0x12e>
 746:	83 35       	cpi	r24, 0x53	; 83
 748:	09 f0       	breq	.+2      	; 0x74c <vfprintf+0x118>
 74a:	59 c0       	rjmp	.+178    	; 0x7fe <vfprintf+0x1ca>
 74c:	21 c0       	rjmp	.+66     	; 0x790 <vfprintf+0x15c>
 74e:	f8 01       	movw	r30, r16
 750:	80 81       	ld	r24, Z
 752:	89 83       	std	Y+1, r24	; 0x01
 754:	0e 5f       	subi	r16, 0xFE	; 254
 756:	1f 4f       	sbci	r17, 0xFF	; 255
 758:	88 24       	eor	r8, r8
 75a:	83 94       	inc	r8
 75c:	91 2c       	mov	r9, r1
 75e:	53 01       	movw	r10, r6
 760:	13 c0       	rjmp	.+38     	; 0x788 <vfprintf+0x154>
 762:	28 01       	movw	r4, r16
 764:	f2 e0       	ldi	r31, 0x02	; 2
 766:	4f 0e       	add	r4, r31
 768:	51 1c       	adc	r5, r1
 76a:	f8 01       	movw	r30, r16
 76c:	a0 80       	ld	r10, Z
 76e:	b1 80       	ldd	r11, Z+1	; 0x01
 770:	36 fe       	sbrs	r3, 6
 772:	03 c0       	rjmp	.+6      	; 0x77a <vfprintf+0x146>
 774:	69 2d       	mov	r22, r9
 776:	70 e0       	ldi	r23, 0x00	; 0
 778:	02 c0       	rjmp	.+4      	; 0x77e <vfprintf+0x14a>
 77a:	6f ef       	ldi	r22, 0xFF	; 255
 77c:	7f ef       	ldi	r23, 0xFF	; 255
 77e:	c5 01       	movw	r24, r10
 780:	0e 94 06 05 	call	0xa0c	; 0xa0c <strnlen>
 784:	4c 01       	movw	r8, r24
 786:	82 01       	movw	r16, r4
 788:	f3 2d       	mov	r31, r3
 78a:	ff 77       	andi	r31, 0x7F	; 127
 78c:	3f 2e       	mov	r3, r31
 78e:	16 c0       	rjmp	.+44     	; 0x7bc <vfprintf+0x188>
 790:	28 01       	movw	r4, r16
 792:	22 e0       	ldi	r18, 0x02	; 2
 794:	42 0e       	add	r4, r18
 796:	51 1c       	adc	r5, r1
 798:	f8 01       	movw	r30, r16
 79a:	a0 80       	ld	r10, Z
 79c:	b1 80       	ldd	r11, Z+1	; 0x01
 79e:	36 fe       	sbrs	r3, 6
 7a0:	03 c0       	rjmp	.+6      	; 0x7a8 <vfprintf+0x174>
 7a2:	69 2d       	mov	r22, r9
 7a4:	70 e0       	ldi	r23, 0x00	; 0
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <vfprintf+0x178>
 7a8:	6f ef       	ldi	r22, 0xFF	; 255
 7aa:	7f ef       	ldi	r23, 0xFF	; 255
 7ac:	c5 01       	movw	r24, r10
 7ae:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <strnlen_P>
 7b2:	4c 01       	movw	r8, r24
 7b4:	f3 2d       	mov	r31, r3
 7b6:	f0 68       	ori	r31, 0x80	; 128
 7b8:	3f 2e       	mov	r3, r31
 7ba:	82 01       	movw	r16, r4
 7bc:	33 fc       	sbrc	r3, 3
 7be:	1b c0       	rjmp	.+54     	; 0x7f6 <vfprintf+0x1c2>
 7c0:	82 2d       	mov	r24, r2
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	88 16       	cp	r8, r24
 7c6:	99 06       	cpc	r9, r25
 7c8:	b0 f4       	brcc	.+44     	; 0x7f6 <vfprintf+0x1c2>
 7ca:	b6 01       	movw	r22, r12
 7cc:	80 e2       	ldi	r24, 0x20	; 32
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	0e 94 11 05 	call	0xa22	; 0xa22 <fputc>
 7d4:	2a 94       	dec	r2
 7d6:	f4 cf       	rjmp	.-24     	; 0x7c0 <vfprintf+0x18c>
 7d8:	f5 01       	movw	r30, r10
 7da:	37 fc       	sbrc	r3, 7
 7dc:	85 91       	lpm	r24, Z+
 7de:	37 fe       	sbrs	r3, 7
 7e0:	81 91       	ld	r24, Z+
 7e2:	5f 01       	movw	r10, r30
 7e4:	b6 01       	movw	r22, r12
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	0e 94 11 05 	call	0xa22	; 0xa22 <fputc>
 7ec:	21 10       	cpse	r2, r1
 7ee:	2a 94       	dec	r2
 7f0:	21 e0       	ldi	r18, 0x01	; 1
 7f2:	82 1a       	sub	r8, r18
 7f4:	91 08       	sbc	r9, r1
 7f6:	81 14       	cp	r8, r1
 7f8:	91 04       	cpc	r9, r1
 7fa:	71 f7       	brne	.-36     	; 0x7d8 <vfprintf+0x1a4>
 7fc:	e8 c0       	rjmp	.+464    	; 0x9ce <__stack+0x16f>
 7fe:	84 36       	cpi	r24, 0x64	; 100
 800:	11 f0       	breq	.+4      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 802:	89 36       	cpi	r24, 0x69	; 105
 804:	41 f5       	brne	.+80     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 806:	f8 01       	movw	r30, r16
 808:	37 fe       	sbrs	r3, 7
 80a:	07 c0       	rjmp	.+14     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 80c:	60 81       	ld	r22, Z
 80e:	71 81       	ldd	r23, Z+1	; 0x01
 810:	82 81       	ldd	r24, Z+2	; 0x02
 812:	93 81       	ldd	r25, Z+3	; 0x03
 814:	0c 5f       	subi	r16, 0xFC	; 252
 816:	1f 4f       	sbci	r17, 0xFF	; 255
 818:	08 c0       	rjmp	.+16     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 81a:	60 81       	ld	r22, Z
 81c:	71 81       	ldd	r23, Z+1	; 0x01
 81e:	07 2e       	mov	r0, r23
 820:	00 0c       	add	r0, r0
 822:	88 0b       	sbc	r24, r24
 824:	99 0b       	sbc	r25, r25
 826:	0e 5f       	subi	r16, 0xFE	; 254
 828:	1f 4f       	sbci	r17, 0xFF	; 255
 82a:	f3 2d       	mov	r31, r3
 82c:	ff 76       	andi	r31, 0x6F	; 111
 82e:	3f 2e       	mov	r3, r31
 830:	97 ff       	sbrs	r25, 7
 832:	09 c0       	rjmp	.+18     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 834:	90 95       	com	r25
 836:	80 95       	com	r24
 838:	70 95       	com	r23
 83a:	61 95       	neg	r22
 83c:	7f 4f       	sbci	r23, 0xFF	; 255
 83e:	8f 4f       	sbci	r24, 0xFF	; 255
 840:	9f 4f       	sbci	r25, 0xFF	; 255
 842:	f0 68       	ori	r31, 0x80	; 128
 844:	3f 2e       	mov	r3, r31
 846:	2a e0       	ldi	r18, 0x0A	; 10
 848:	30 e0       	ldi	r19, 0x00	; 0
 84a:	a3 01       	movw	r20, r6
 84c:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__ultoa_invert>
 850:	88 2e       	mov	r8, r24
 852:	86 18       	sub	r8, r6
 854:	45 c0       	rjmp	.+138    	; 0x8e0 <__stack+0x81>
 856:	85 37       	cpi	r24, 0x75	; 117
 858:	31 f4       	brne	.+12     	; 0x866 <__stack+0x7>
 85a:	23 2d       	mov	r18, r3
 85c:	2f 7e       	andi	r18, 0xEF	; 239
 85e:	b2 2e       	mov	r11, r18
 860:	2a e0       	ldi	r18, 0x0A	; 10
 862:	30 e0       	ldi	r19, 0x00	; 0
 864:	25 c0       	rjmp	.+74     	; 0x8b0 <__stack+0x51>
 866:	93 2d       	mov	r25, r3
 868:	99 7f       	andi	r25, 0xF9	; 249
 86a:	b9 2e       	mov	r11, r25
 86c:	8f 36       	cpi	r24, 0x6F	; 111
 86e:	c1 f0       	breq	.+48     	; 0x8a0 <__stack+0x41>
 870:	18 f4       	brcc	.+6      	; 0x878 <__stack+0x19>
 872:	88 35       	cpi	r24, 0x58	; 88
 874:	79 f0       	breq	.+30     	; 0x894 <__stack+0x35>
 876:	b5 c0       	rjmp	.+362    	; 0x9e2 <__stack+0x183>
 878:	80 37       	cpi	r24, 0x70	; 112
 87a:	19 f0       	breq	.+6      	; 0x882 <__stack+0x23>
 87c:	88 37       	cpi	r24, 0x78	; 120
 87e:	21 f0       	breq	.+8      	; 0x888 <__stack+0x29>
 880:	b0 c0       	rjmp	.+352    	; 0x9e2 <__stack+0x183>
 882:	e9 2f       	mov	r30, r25
 884:	e0 61       	ori	r30, 0x10	; 16
 886:	be 2e       	mov	r11, r30
 888:	b4 fe       	sbrs	r11, 4
 88a:	0d c0       	rjmp	.+26     	; 0x8a6 <__stack+0x47>
 88c:	fb 2d       	mov	r31, r11
 88e:	f4 60       	ori	r31, 0x04	; 4
 890:	bf 2e       	mov	r11, r31
 892:	09 c0       	rjmp	.+18     	; 0x8a6 <__stack+0x47>
 894:	34 fe       	sbrs	r3, 4
 896:	0a c0       	rjmp	.+20     	; 0x8ac <__stack+0x4d>
 898:	29 2f       	mov	r18, r25
 89a:	26 60       	ori	r18, 0x06	; 6
 89c:	b2 2e       	mov	r11, r18
 89e:	06 c0       	rjmp	.+12     	; 0x8ac <__stack+0x4d>
 8a0:	28 e0       	ldi	r18, 0x08	; 8
 8a2:	30 e0       	ldi	r19, 0x00	; 0
 8a4:	05 c0       	rjmp	.+10     	; 0x8b0 <__stack+0x51>
 8a6:	20 e1       	ldi	r18, 0x10	; 16
 8a8:	30 e0       	ldi	r19, 0x00	; 0
 8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <__stack+0x51>
 8ac:	20 e1       	ldi	r18, 0x10	; 16
 8ae:	32 e0       	ldi	r19, 0x02	; 2
 8b0:	f8 01       	movw	r30, r16
 8b2:	b7 fe       	sbrs	r11, 7
 8b4:	07 c0       	rjmp	.+14     	; 0x8c4 <__stack+0x65>
 8b6:	60 81       	ld	r22, Z
 8b8:	71 81       	ldd	r23, Z+1	; 0x01
 8ba:	82 81       	ldd	r24, Z+2	; 0x02
 8bc:	93 81       	ldd	r25, Z+3	; 0x03
 8be:	0c 5f       	subi	r16, 0xFC	; 252
 8c0:	1f 4f       	sbci	r17, 0xFF	; 255
 8c2:	06 c0       	rjmp	.+12     	; 0x8d0 <__stack+0x71>
 8c4:	60 81       	ld	r22, Z
 8c6:	71 81       	ldd	r23, Z+1	; 0x01
 8c8:	80 e0       	ldi	r24, 0x00	; 0
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	0e 5f       	subi	r16, 0xFE	; 254
 8ce:	1f 4f       	sbci	r17, 0xFF	; 255
 8d0:	a3 01       	movw	r20, r6
 8d2:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__ultoa_invert>
 8d6:	88 2e       	mov	r8, r24
 8d8:	86 18       	sub	r8, r6
 8da:	fb 2d       	mov	r31, r11
 8dc:	ff 77       	andi	r31, 0x7F	; 127
 8de:	3f 2e       	mov	r3, r31
 8e0:	36 fe       	sbrs	r3, 6
 8e2:	0d c0       	rjmp	.+26     	; 0x8fe <__stack+0x9f>
 8e4:	23 2d       	mov	r18, r3
 8e6:	2e 7f       	andi	r18, 0xFE	; 254
 8e8:	a2 2e       	mov	r10, r18
 8ea:	89 14       	cp	r8, r9
 8ec:	58 f4       	brcc	.+22     	; 0x904 <__stack+0xa5>
 8ee:	34 fe       	sbrs	r3, 4
 8f0:	0b c0       	rjmp	.+22     	; 0x908 <__stack+0xa9>
 8f2:	32 fc       	sbrc	r3, 2
 8f4:	09 c0       	rjmp	.+18     	; 0x908 <__stack+0xa9>
 8f6:	83 2d       	mov	r24, r3
 8f8:	8e 7e       	andi	r24, 0xEE	; 238
 8fa:	a8 2e       	mov	r10, r24
 8fc:	05 c0       	rjmp	.+10     	; 0x908 <__stack+0xa9>
 8fe:	b8 2c       	mov	r11, r8
 900:	a3 2c       	mov	r10, r3
 902:	03 c0       	rjmp	.+6      	; 0x90a <__stack+0xab>
 904:	b8 2c       	mov	r11, r8
 906:	01 c0       	rjmp	.+2      	; 0x90a <__stack+0xab>
 908:	b9 2c       	mov	r11, r9
 90a:	a4 fe       	sbrs	r10, 4
 90c:	0f c0       	rjmp	.+30     	; 0x92c <__stack+0xcd>
 90e:	fe 01       	movw	r30, r28
 910:	e8 0d       	add	r30, r8
 912:	f1 1d       	adc	r31, r1
 914:	80 81       	ld	r24, Z
 916:	80 33       	cpi	r24, 0x30	; 48
 918:	21 f4       	brne	.+8      	; 0x922 <__stack+0xc3>
 91a:	9a 2d       	mov	r25, r10
 91c:	99 7e       	andi	r25, 0xE9	; 233
 91e:	a9 2e       	mov	r10, r25
 920:	09 c0       	rjmp	.+18     	; 0x934 <__stack+0xd5>
 922:	a2 fe       	sbrs	r10, 2
 924:	06 c0       	rjmp	.+12     	; 0x932 <__stack+0xd3>
 926:	b3 94       	inc	r11
 928:	b3 94       	inc	r11
 92a:	04 c0       	rjmp	.+8      	; 0x934 <__stack+0xd5>
 92c:	8a 2d       	mov	r24, r10
 92e:	86 78       	andi	r24, 0x86	; 134
 930:	09 f0       	breq	.+2      	; 0x934 <__stack+0xd5>
 932:	b3 94       	inc	r11
 934:	a3 fc       	sbrc	r10, 3
 936:	11 c0       	rjmp	.+34     	; 0x95a <__stack+0xfb>
 938:	a0 fe       	sbrs	r10, 0
 93a:	06 c0       	rjmp	.+12     	; 0x948 <__stack+0xe9>
 93c:	b2 14       	cp	r11, r2
 93e:	88 f4       	brcc	.+34     	; 0x962 <__stack+0x103>
 940:	28 0c       	add	r2, r8
 942:	92 2c       	mov	r9, r2
 944:	9b 18       	sub	r9, r11
 946:	0e c0       	rjmp	.+28     	; 0x964 <__stack+0x105>
 948:	b2 14       	cp	r11, r2
 94a:	60 f4       	brcc	.+24     	; 0x964 <__stack+0x105>
 94c:	b6 01       	movw	r22, r12
 94e:	80 e2       	ldi	r24, 0x20	; 32
 950:	90 e0       	ldi	r25, 0x00	; 0
 952:	0e 94 11 05 	call	0xa22	; 0xa22 <fputc>
 956:	b3 94       	inc	r11
 958:	f7 cf       	rjmp	.-18     	; 0x948 <__stack+0xe9>
 95a:	b2 14       	cp	r11, r2
 95c:	18 f4       	brcc	.+6      	; 0x964 <__stack+0x105>
 95e:	2b 18       	sub	r2, r11
 960:	02 c0       	rjmp	.+4      	; 0x966 <__stack+0x107>
 962:	98 2c       	mov	r9, r8
 964:	21 2c       	mov	r2, r1
 966:	a4 fe       	sbrs	r10, 4
 968:	10 c0       	rjmp	.+32     	; 0x98a <__stack+0x12b>
 96a:	b6 01       	movw	r22, r12
 96c:	80 e3       	ldi	r24, 0x30	; 48
 96e:	90 e0       	ldi	r25, 0x00	; 0
 970:	0e 94 11 05 	call	0xa22	; 0xa22 <fputc>
 974:	a2 fe       	sbrs	r10, 2
 976:	17 c0       	rjmp	.+46     	; 0x9a6 <__stack+0x147>
 978:	a1 fc       	sbrc	r10, 1
 97a:	03 c0       	rjmp	.+6      	; 0x982 <__stack+0x123>
 97c:	88 e7       	ldi	r24, 0x78	; 120
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	02 c0       	rjmp	.+4      	; 0x986 <__stack+0x127>
 982:	88 e5       	ldi	r24, 0x58	; 88
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	b6 01       	movw	r22, r12
 988:	0c c0       	rjmp	.+24     	; 0x9a2 <__stack+0x143>
 98a:	8a 2d       	mov	r24, r10
 98c:	86 78       	andi	r24, 0x86	; 134
 98e:	59 f0       	breq	.+22     	; 0x9a6 <__stack+0x147>
 990:	a1 fe       	sbrs	r10, 1
 992:	02 c0       	rjmp	.+4      	; 0x998 <__stack+0x139>
 994:	8b e2       	ldi	r24, 0x2B	; 43
 996:	01 c0       	rjmp	.+2      	; 0x99a <__stack+0x13b>
 998:	80 e2       	ldi	r24, 0x20	; 32
 99a:	a7 fc       	sbrc	r10, 7
 99c:	8d e2       	ldi	r24, 0x2D	; 45
 99e:	b6 01       	movw	r22, r12
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	0e 94 11 05 	call	0xa22	; 0xa22 <fputc>
 9a6:	89 14       	cp	r8, r9
 9a8:	38 f4       	brcc	.+14     	; 0x9b8 <__stack+0x159>
 9aa:	b6 01       	movw	r22, r12
 9ac:	80 e3       	ldi	r24, 0x30	; 48
 9ae:	90 e0       	ldi	r25, 0x00	; 0
 9b0:	0e 94 11 05 	call	0xa22	; 0xa22 <fputc>
 9b4:	9a 94       	dec	r9
 9b6:	f7 cf       	rjmp	.-18     	; 0x9a6 <__stack+0x147>
 9b8:	8a 94       	dec	r8
 9ba:	f3 01       	movw	r30, r6
 9bc:	e8 0d       	add	r30, r8
 9be:	f1 1d       	adc	r31, r1
 9c0:	80 81       	ld	r24, Z
 9c2:	b6 01       	movw	r22, r12
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	0e 94 11 05 	call	0xa22	; 0xa22 <fputc>
 9ca:	81 10       	cpse	r8, r1
 9cc:	f5 cf       	rjmp	.-22     	; 0x9b8 <__stack+0x159>
 9ce:	22 20       	and	r2, r2
 9d0:	09 f4       	brne	.+2      	; 0x9d4 <__stack+0x175>
 9d2:	42 ce       	rjmp	.-892    	; 0x658 <vfprintf+0x24>
 9d4:	b6 01       	movw	r22, r12
 9d6:	80 e2       	ldi	r24, 0x20	; 32
 9d8:	90 e0       	ldi	r25, 0x00	; 0
 9da:	0e 94 11 05 	call	0xa22	; 0xa22 <fputc>
 9de:	2a 94       	dec	r2
 9e0:	f6 cf       	rjmp	.-20     	; 0x9ce <__stack+0x16f>
 9e2:	f6 01       	movw	r30, r12
 9e4:	86 81       	ldd	r24, Z+6	; 0x06
 9e6:	97 81       	ldd	r25, Z+7	; 0x07
 9e8:	02 c0       	rjmp	.+4      	; 0x9ee <__stack+0x18f>
 9ea:	8f ef       	ldi	r24, 0xFF	; 255
 9ec:	9f ef       	ldi	r25, 0xFF	; 255
 9ee:	2b 96       	adiw	r28, 0x0b	; 11
 9f0:	e2 e1       	ldi	r30, 0x12	; 18
 9f2:	0c 94 c7 05 	jmp	0xb8e	; 0xb8e <__epilogue_restores__>

000009f6 <strnlen_P>:
 9f6:	fc 01       	movw	r30, r24
 9f8:	05 90       	lpm	r0, Z+
 9fa:	61 50       	subi	r22, 0x01	; 1
 9fc:	70 40       	sbci	r23, 0x00	; 0
 9fe:	01 10       	cpse	r0, r1
 a00:	d8 f7       	brcc	.-10     	; 0x9f8 <strnlen_P+0x2>
 a02:	80 95       	com	r24
 a04:	90 95       	com	r25
 a06:	8e 0f       	add	r24, r30
 a08:	9f 1f       	adc	r25, r31
 a0a:	08 95       	ret

00000a0c <strnlen>:
 a0c:	fc 01       	movw	r30, r24
 a0e:	61 50       	subi	r22, 0x01	; 1
 a10:	70 40       	sbci	r23, 0x00	; 0
 a12:	01 90       	ld	r0, Z+
 a14:	01 10       	cpse	r0, r1
 a16:	d8 f7       	brcc	.-10     	; 0xa0e <strnlen+0x2>
 a18:	80 95       	com	r24
 a1a:	90 95       	com	r25
 a1c:	8e 0f       	add	r24, r30
 a1e:	9f 1f       	adc	r25, r31
 a20:	08 95       	ret

00000a22 <fputc>:
 a22:	0f 93       	push	r16
 a24:	1f 93       	push	r17
 a26:	cf 93       	push	r28
 a28:	df 93       	push	r29
 a2a:	fb 01       	movw	r30, r22
 a2c:	23 81       	ldd	r18, Z+3	; 0x03
 a2e:	21 fd       	sbrc	r18, 1
 a30:	03 c0       	rjmp	.+6      	; 0xa38 <fputc+0x16>
 a32:	8f ef       	ldi	r24, 0xFF	; 255
 a34:	9f ef       	ldi	r25, 0xFF	; 255
 a36:	2c c0       	rjmp	.+88     	; 0xa90 <fputc+0x6e>
 a38:	22 ff       	sbrs	r18, 2
 a3a:	16 c0       	rjmp	.+44     	; 0xa68 <fputc+0x46>
 a3c:	46 81       	ldd	r20, Z+6	; 0x06
 a3e:	57 81       	ldd	r21, Z+7	; 0x07
 a40:	24 81       	ldd	r18, Z+4	; 0x04
 a42:	35 81       	ldd	r19, Z+5	; 0x05
 a44:	42 17       	cp	r20, r18
 a46:	53 07       	cpc	r21, r19
 a48:	44 f4       	brge	.+16     	; 0xa5a <fputc+0x38>
 a4a:	a0 81       	ld	r26, Z
 a4c:	b1 81       	ldd	r27, Z+1	; 0x01
 a4e:	9d 01       	movw	r18, r26
 a50:	2f 5f       	subi	r18, 0xFF	; 255
 a52:	3f 4f       	sbci	r19, 0xFF	; 255
 a54:	31 83       	std	Z+1, r19	; 0x01
 a56:	20 83       	st	Z, r18
 a58:	8c 93       	st	X, r24
 a5a:	26 81       	ldd	r18, Z+6	; 0x06
 a5c:	37 81       	ldd	r19, Z+7	; 0x07
 a5e:	2f 5f       	subi	r18, 0xFF	; 255
 a60:	3f 4f       	sbci	r19, 0xFF	; 255
 a62:	37 83       	std	Z+7, r19	; 0x07
 a64:	26 83       	std	Z+6, r18	; 0x06
 a66:	14 c0       	rjmp	.+40     	; 0xa90 <fputc+0x6e>
 a68:	8b 01       	movw	r16, r22
 a6a:	ec 01       	movw	r28, r24
 a6c:	fb 01       	movw	r30, r22
 a6e:	00 84       	ldd	r0, Z+8	; 0x08
 a70:	f1 85       	ldd	r31, Z+9	; 0x09
 a72:	e0 2d       	mov	r30, r0
 a74:	09 95       	icall
 a76:	89 2b       	or	r24, r25
 a78:	e1 f6       	brne	.-72     	; 0xa32 <fputc+0x10>
 a7a:	d8 01       	movw	r26, r16
 a7c:	16 96       	adiw	r26, 0x06	; 6
 a7e:	8d 91       	ld	r24, X+
 a80:	9c 91       	ld	r25, X
 a82:	17 97       	sbiw	r26, 0x07	; 7
 a84:	01 96       	adiw	r24, 0x01	; 1
 a86:	17 96       	adiw	r26, 0x07	; 7
 a88:	9c 93       	st	X, r25
 a8a:	8e 93       	st	-X, r24
 a8c:	16 97       	sbiw	r26, 0x06	; 6
 a8e:	ce 01       	movw	r24, r28
 a90:	df 91       	pop	r29
 a92:	cf 91       	pop	r28
 a94:	1f 91       	pop	r17
 a96:	0f 91       	pop	r16
 a98:	08 95       	ret

00000a9a <__ultoa_invert>:
 a9a:	fa 01       	movw	r30, r20
 a9c:	aa 27       	eor	r26, r26
 a9e:	28 30       	cpi	r18, 0x08	; 8
 aa0:	51 f1       	breq	.+84     	; 0xaf6 <__ultoa_invert+0x5c>
 aa2:	20 31       	cpi	r18, 0x10	; 16
 aa4:	81 f1       	breq	.+96     	; 0xb06 <__ultoa_invert+0x6c>
 aa6:	e8 94       	clt
 aa8:	6f 93       	push	r22
 aaa:	6e 7f       	andi	r22, 0xFE	; 254
 aac:	6e 5f       	subi	r22, 0xFE	; 254
 aae:	7f 4f       	sbci	r23, 0xFF	; 255
 ab0:	8f 4f       	sbci	r24, 0xFF	; 255
 ab2:	9f 4f       	sbci	r25, 0xFF	; 255
 ab4:	af 4f       	sbci	r26, 0xFF	; 255
 ab6:	b1 e0       	ldi	r27, 0x01	; 1
 ab8:	3e d0       	rcall	.+124    	; 0xb36 <__ultoa_invert+0x9c>
 aba:	b4 e0       	ldi	r27, 0x04	; 4
 abc:	3c d0       	rcall	.+120    	; 0xb36 <__ultoa_invert+0x9c>
 abe:	67 0f       	add	r22, r23
 ac0:	78 1f       	adc	r23, r24
 ac2:	89 1f       	adc	r24, r25
 ac4:	9a 1f       	adc	r25, r26
 ac6:	a1 1d       	adc	r26, r1
 ac8:	68 0f       	add	r22, r24
 aca:	79 1f       	adc	r23, r25
 acc:	8a 1f       	adc	r24, r26
 ace:	91 1d       	adc	r25, r1
 ad0:	a1 1d       	adc	r26, r1
 ad2:	6a 0f       	add	r22, r26
 ad4:	71 1d       	adc	r23, r1
 ad6:	81 1d       	adc	r24, r1
 ad8:	91 1d       	adc	r25, r1
 ada:	a1 1d       	adc	r26, r1
 adc:	20 d0       	rcall	.+64     	; 0xb1e <__ultoa_invert+0x84>
 ade:	09 f4       	brne	.+2      	; 0xae2 <__ultoa_invert+0x48>
 ae0:	68 94       	set
 ae2:	3f 91       	pop	r19
 ae4:	2a e0       	ldi	r18, 0x0A	; 10
 ae6:	26 9f       	mul	r18, r22
 ae8:	11 24       	eor	r1, r1
 aea:	30 19       	sub	r19, r0
 aec:	30 5d       	subi	r19, 0xD0	; 208
 aee:	31 93       	st	Z+, r19
 af0:	de f6       	brtc	.-74     	; 0xaa8 <__ultoa_invert+0xe>
 af2:	cf 01       	movw	r24, r30
 af4:	08 95       	ret
 af6:	46 2f       	mov	r20, r22
 af8:	47 70       	andi	r20, 0x07	; 7
 afa:	40 5d       	subi	r20, 0xD0	; 208
 afc:	41 93       	st	Z+, r20
 afe:	b3 e0       	ldi	r27, 0x03	; 3
 b00:	0f d0       	rcall	.+30     	; 0xb20 <__ultoa_invert+0x86>
 b02:	c9 f7       	brne	.-14     	; 0xaf6 <__ultoa_invert+0x5c>
 b04:	f6 cf       	rjmp	.-20     	; 0xaf2 <__ultoa_invert+0x58>
 b06:	46 2f       	mov	r20, r22
 b08:	4f 70       	andi	r20, 0x0F	; 15
 b0a:	40 5d       	subi	r20, 0xD0	; 208
 b0c:	4a 33       	cpi	r20, 0x3A	; 58
 b0e:	18 f0       	brcs	.+6      	; 0xb16 <__ultoa_invert+0x7c>
 b10:	49 5d       	subi	r20, 0xD9	; 217
 b12:	31 fd       	sbrc	r19, 1
 b14:	40 52       	subi	r20, 0x20	; 32
 b16:	41 93       	st	Z+, r20
 b18:	02 d0       	rcall	.+4      	; 0xb1e <__ultoa_invert+0x84>
 b1a:	a9 f7       	brne	.-22     	; 0xb06 <__ultoa_invert+0x6c>
 b1c:	ea cf       	rjmp	.-44     	; 0xaf2 <__ultoa_invert+0x58>
 b1e:	b4 e0       	ldi	r27, 0x04	; 4
 b20:	a6 95       	lsr	r26
 b22:	97 95       	ror	r25
 b24:	87 95       	ror	r24
 b26:	77 95       	ror	r23
 b28:	67 95       	ror	r22
 b2a:	ba 95       	dec	r27
 b2c:	c9 f7       	brne	.-14     	; 0xb20 <__ultoa_invert+0x86>
 b2e:	00 97       	sbiw	r24, 0x00	; 0
 b30:	61 05       	cpc	r22, r1
 b32:	71 05       	cpc	r23, r1
 b34:	08 95       	ret
 b36:	9b 01       	movw	r18, r22
 b38:	ac 01       	movw	r20, r24
 b3a:	0a 2e       	mov	r0, r26
 b3c:	06 94       	lsr	r0
 b3e:	57 95       	ror	r21
 b40:	47 95       	ror	r20
 b42:	37 95       	ror	r19
 b44:	27 95       	ror	r18
 b46:	ba 95       	dec	r27
 b48:	c9 f7       	brne	.-14     	; 0xb3c <__ultoa_invert+0xa2>
 b4a:	62 0f       	add	r22, r18
 b4c:	73 1f       	adc	r23, r19
 b4e:	84 1f       	adc	r24, r20
 b50:	95 1f       	adc	r25, r21
 b52:	a0 1d       	adc	r26, r0
 b54:	08 95       	ret

00000b56 <__prologue_saves__>:
 b56:	2f 92       	push	r2
 b58:	3f 92       	push	r3
 b5a:	4f 92       	push	r4
 b5c:	5f 92       	push	r5
 b5e:	6f 92       	push	r6
 b60:	7f 92       	push	r7
 b62:	8f 92       	push	r8
 b64:	9f 92       	push	r9
 b66:	af 92       	push	r10
 b68:	bf 92       	push	r11
 b6a:	cf 92       	push	r12
 b6c:	df 92       	push	r13
 b6e:	ef 92       	push	r14
 b70:	ff 92       	push	r15
 b72:	0f 93       	push	r16
 b74:	1f 93       	push	r17
 b76:	cf 93       	push	r28
 b78:	df 93       	push	r29
 b7a:	cd b7       	in	r28, 0x3d	; 61
 b7c:	de b7       	in	r29, 0x3e	; 62
 b7e:	ca 1b       	sub	r28, r26
 b80:	db 0b       	sbc	r29, r27
 b82:	0f b6       	in	r0, 0x3f	; 63
 b84:	f8 94       	cli
 b86:	de bf       	out	0x3e, r29	; 62
 b88:	0f be       	out	0x3f, r0	; 63
 b8a:	cd bf       	out	0x3d, r28	; 61
 b8c:	09 94       	ijmp

00000b8e <__epilogue_restores__>:
 b8e:	2a 88       	ldd	r2, Y+18	; 0x12
 b90:	39 88       	ldd	r3, Y+17	; 0x11
 b92:	48 88       	ldd	r4, Y+16	; 0x10
 b94:	5f 84       	ldd	r5, Y+15	; 0x0f
 b96:	6e 84       	ldd	r6, Y+14	; 0x0e
 b98:	7d 84       	ldd	r7, Y+13	; 0x0d
 b9a:	8c 84       	ldd	r8, Y+12	; 0x0c
 b9c:	9b 84       	ldd	r9, Y+11	; 0x0b
 b9e:	aa 84       	ldd	r10, Y+10	; 0x0a
 ba0:	b9 84       	ldd	r11, Y+9	; 0x09
 ba2:	c8 84       	ldd	r12, Y+8	; 0x08
 ba4:	df 80       	ldd	r13, Y+7	; 0x07
 ba6:	ee 80       	ldd	r14, Y+6	; 0x06
 ba8:	fd 80       	ldd	r15, Y+5	; 0x05
 baa:	0c 81       	ldd	r16, Y+4	; 0x04
 bac:	1b 81       	ldd	r17, Y+3	; 0x03
 bae:	aa 81       	ldd	r26, Y+2	; 0x02
 bb0:	b9 81       	ldd	r27, Y+1	; 0x01
 bb2:	ce 0f       	add	r28, r30
 bb4:	d1 1d       	adc	r29, r1
 bb6:	0f b6       	in	r0, 0x3f	; 63
 bb8:	f8 94       	cli
 bba:	de bf       	out	0x3e, r29	; 62
 bbc:	0f be       	out	0x3f, r0	; 63
 bbe:	cd bf       	out	0x3d, r28	; 61
 bc0:	ed 01       	movw	r28, r26
 bc2:	08 95       	ret

00000bc4 <_exit>:
 bc4:	f8 94       	cli

00000bc6 <__stop_program>:
 bc6:	ff cf       	rjmp	.-2      	; 0xbc6 <__stop_program>
