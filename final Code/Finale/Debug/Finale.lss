
Finale.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002664  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000240  00800060  00002664  000026f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002d  008002a0  008002a0  00002938  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002938  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002994  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  000029d0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002831  00000000  00000000  00002ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b5  00000000  00000000  000053d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000146f  00000000  00000000  00005d8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000414  00000000  00000000  00007200  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c4  00000000  00000000  00007614  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014c6  00000000  00000000  00007cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  0000919e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       8:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      20:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 ca 07 	jmp	0xf94	; 0xf94 <__vector_10>
      2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__vector_13>
      38:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d8 e0       	ldi	r29, 0x08	; 8
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	12 e0       	ldi	r17, 0x02	; 2
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	e4 e6       	ldi	r30, 0x64	; 100
     16a:	f6 e2       	ldi	r31, 0x26	; 38
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	a0 3a       	cpi	r26, 0xA0	; 160
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	22 e0       	ldi	r18, 0x02	; 2
     17a:	a0 ea       	ldi	r26, 0xA0	; 160
     17c:	b2 e0       	ldi	r27, 0x02	; 2
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	ad 3c       	cpi	r26, 0xCD	; 205
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 a2 08 	call	0x1144	; 0x1144 <main>
     18c:	0c 94 30 13 	jmp	0x2660	; 0x2660 <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <TWIInit>:
		contactNo[i+1] = eeprom_read_word((uint8_t*)phoneNoAddress[i]);
	}
	
	return "+";
	//feedingWeight=eeprom_read_word((uint8_t*)WeightDataAdress);
}
     194:	11 b8       	out	0x01, r1	; 1
     196:	88 e4       	ldi	r24, 0x48	; 72
     198:	80 b9       	out	0x00, r24	; 0
     19a:	84 e0       	ldi	r24, 0x04	; 4
     19c:	86 bf       	out	0x36, r24	; 54
     19e:	08 95       	ret

000001a0 <TWIStart>:
     1a0:	84 ea       	ldi	r24, 0xA4	; 164
     1a2:	86 bf       	out	0x36, r24	; 54
     1a4:	06 b6       	in	r0, 0x36	; 54
     1a6:	07 fe       	sbrs	r0, 7
     1a8:	fd cf       	rjmp	.-6      	; 0x1a4 <TWIStart+0x4>
     1aa:	08 95       	ret

000001ac <TWIStop>:
     1ac:	84 e9       	ldi	r24, 0x94	; 148
     1ae:	86 bf       	out	0x36, r24	; 54
     1b0:	06 b6       	in	r0, 0x36	; 54
     1b2:	04 fc       	sbrc	r0, 4
     1b4:	fd cf       	rjmp	.-6      	; 0x1b0 <TWIStop+0x4>
     1b6:	08 95       	ret

000001b8 <TWIWriteAddrs>:
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	88 0f       	add	r24, r24
     1bc:	99 1f       	adc	r25, r25
     1be:	86 2b       	or	r24, r22
     1c0:	83 b9       	out	0x03, r24	; 3
     1c2:	84 e8       	ldi	r24, 0x84	; 132
     1c4:	86 bf       	out	0x36, r24	; 54
     1c6:	06 b6       	in	r0, 0x36	; 54
     1c8:	07 fe       	sbrs	r0, 7
     1ca:	fd cf       	rjmp	.-6      	; 0x1c6 <TWIWriteAddrs+0xe>
     1cc:	81 b1       	in	r24, 0x01	; 1
     1ce:	88 7f       	andi	r24, 0xF8	; 248
     1d0:	08 95       	ret

000001d2 <TWIWriteData>:
     1d2:	83 b9       	out	0x03, r24	; 3
     1d4:	84 e8       	ldi	r24, 0x84	; 132
     1d6:	86 bf       	out	0x36, r24	; 54
     1d8:	06 b6       	in	r0, 0x36	; 54
     1da:	07 fe       	sbrs	r0, 7
     1dc:	fd cf       	rjmp	.-6      	; 0x1d8 <TWIWriteData+0x6>
     1de:	81 b1       	in	r24, 0x01	; 1
     1e0:	88 7f       	andi	r24, 0xF8	; 248
     1e2:	08 95       	ret

000001e4 <TWIReadACK>:
     1e4:	84 ec       	ldi	r24, 0xC4	; 196
     1e6:	86 bf       	out	0x36, r24	; 54
     1e8:	06 b6       	in	r0, 0x36	; 54
     1ea:	07 fe       	sbrs	r0, 7
     1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <TWIReadACK+0x4>
     1ee:	83 b1       	in	r24, 0x03	; 3
     1f0:	08 95       	ret

000001f2 <TWIReadNACK>:
     1f2:	84 e8       	ldi	r24, 0x84	; 132
     1f4:	86 bf       	out	0x36, r24	; 54
     1f6:	06 b6       	in	r0, 0x36	; 54
     1f8:	07 fe       	sbrs	r0, 7
     1fa:	fd cf       	rjmp	.-6      	; 0x1f6 <TWIReadNACK+0x4>
     1fc:	83 b1       	in	r24, 0x03	; 3
     1fe:	08 95       	ret

00000200 <LcdBacklight>:
     200:	81 30       	cpi	r24, 0x01	; 1
     202:	21 f4       	brne	.+8      	; 0x20c <LcdBacklight+0xc>
     204:	88 e0       	ldi	r24, 0x08	; 8
     206:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <Backlight>
     20a:	08 95       	ret
     20c:	10 92 b4 02 	sts	0x02B4, r1	; 0x8002b4 <Backlight>
     210:	08 95       	ret

00000212 <Lcd4bitdata>:
     212:	1f 93       	push	r17
     214:	cf 93       	push	r28
     216:	df 93       	push	r29
     218:	d8 2f       	mov	r29, r24
     21a:	c6 2f       	mov	r28, r22
     21c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	80 91 b7 02 	lds	r24, 0x02B7	; 0x8002b7 <deviceAdress>
     226:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     22a:	1d 2f       	mov	r17, r29
     22c:	1c 2b       	or	r17, r28
     22e:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <Backlight>
     232:	81 2b       	or	r24, r17
     234:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     238:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     23c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	80 91 b7 02 	lds	r24, 0x02B7	; 0x8002b7 <deviceAdress>
     246:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     24a:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <Backlight>
     24e:	81 2b       	or	r24, r17
     250:	84 60       	ori	r24, 0x04	; 4
     252:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     256:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     25a:	8f e8       	ldi	r24, 0x8F	; 143
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	01 97       	sbiw	r24, 0x01	; 1
     260:	f1 f7       	brne	.-4      	; 0x25e <Lcd4bitdata+0x4c>
     262:	00 c0       	rjmp	.+0      	; 0x264 <Lcd4bitdata+0x52>
     264:	00 00       	nop
     266:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     26a:	60 e0       	ldi	r22, 0x00	; 0
     26c:	80 91 b7 02 	lds	r24, 0x02B7	; 0x8002b7 <deviceAdress>
     270:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     274:	db 7f       	andi	r29, 0xFB	; 251
     276:	cd 2b       	or	r28, r29
     278:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <Backlight>
     27c:	8c 2b       	or	r24, r28
     27e:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     282:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     286:	8f e9       	ldi	r24, 0x9F	; 159
     288:	9f e0       	ldi	r25, 0x0F	; 15
     28a:	01 97       	sbiw	r24, 0x01	; 1
     28c:	f1 f7       	brne	.-4      	; 0x28a <Lcd4bitdata+0x78>
     28e:	00 c0       	rjmp	.+0      	; 0x290 <Lcd4bitdata+0x7e>
     290:	00 00       	nop
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	1f 91       	pop	r17
     298:	08 95       	ret

0000029a <LcdCommand>:
     29a:	cf 93       	push	r28
     29c:	c8 2f       	mov	r28, r24
     29e:	60 e0       	ldi	r22, 0x00	; 0
     2a0:	80 7f       	andi	r24, 0xF0	; 240
     2a2:	0e 94 09 01 	call	0x212	; 0x212 <Lcd4bitdata>
     2a6:	60 e0       	ldi	r22, 0x00	; 0
     2a8:	8c 2f       	mov	r24, r28
     2aa:	82 95       	swap	r24
     2ac:	80 7f       	andi	r24, 0xF0	; 240
     2ae:	0e 94 09 01 	call	0x212	; 0x212 <Lcd4bitdata>
     2b2:	cf 91       	pop	r28
     2b4:	08 95       	ret

000002b6 <LcdInit>:
     2b6:	0e 94 ca 00 	call	0x194	; 0x194 <TWIInit>
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	0e 94 00 01 	call	0x200	; 0x200 <LcdBacklight>
     2c0:	8f e3       	ldi	r24, 0x3F	; 63
     2c2:	9c e9       	ldi	r25, 0x9C	; 156
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <LcdInit+0xe>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <LcdInit+0x14>
     2ca:	00 00       	nop
     2cc:	87 e2       	ldi	r24, 0x27	; 39
     2ce:	80 93 b7 02 	sts	0x02B7, r24	; 0x8002b7 <deviceAdress>
     2d2:	82 e0       	ldi	r24, 0x02	; 2
     2d4:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     2d8:	88 e2       	ldi	r24, 0x28	; 40
     2da:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     2de:	8c e0       	ldi	r24, 0x0C	; 12
     2e0:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     2e4:	86 e0       	ldi	r24, 0x06	; 6
     2e6:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     2f0:	08 95       	ret

000002f2 <LcdChar>:
     2f2:	cf 93       	push	r28
     2f4:	c8 2f       	mov	r28, r24
     2f6:	61 e0       	ldi	r22, 0x01	; 1
     2f8:	80 7f       	andi	r24, 0xF0	; 240
     2fa:	0e 94 09 01 	call	0x212	; 0x212 <Lcd4bitdata>
     2fe:	61 e0       	ldi	r22, 0x01	; 1
     300:	8c 2f       	mov	r24, r28
     302:	82 95       	swap	r24
     304:	80 7f       	andi	r24, 0xF0	; 240
     306:	0e 94 09 01 	call	0x212	; 0x212 <Lcd4bitdata>
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <LcdString>:
     30e:	0f 93       	push	r16
     310:	1f 93       	push	r17
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	8c 01       	movw	r16, r24
     318:	c0 e0       	ldi	r28, 0x00	; 0
     31a:	d0 e0       	ldi	r29, 0x00	; 0
     31c:	03 c0       	rjmp	.+6      	; 0x324 <LcdString+0x16>
     31e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <LcdChar>
     322:	21 96       	adiw	r28, 0x01	; 1
     324:	f8 01       	movw	r30, r16
     326:	ec 0f       	add	r30, r28
     328:	fd 1f       	adc	r31, r29
     32a:	80 81       	ld	r24, Z
     32c:	81 11       	cpse	r24, r1
     32e:	f7 cf       	rjmp	.-18     	; 0x31e <LcdString+0x10>
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	1f 91       	pop	r17
     336:	0f 91       	pop	r16
     338:	08 95       	ret

0000033a <LcdSetCursor>:
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	ea 01       	movw	r28, r20
     340:	61 30       	cpi	r22, 0x01	; 1
     342:	31 f0       	breq	.+12     	; 0x350 <LcdSetCursor+0x16>
     344:	58 f0       	brcs	.+22     	; 0x35c <LcdSetCursor+0x22>
     346:	62 30       	cpi	r22, 0x02	; 2
     348:	29 f0       	breq	.+10     	; 0x354 <LcdSetCursor+0x1a>
     34a:	63 30       	cpi	r22, 0x03	; 3
     34c:	29 f0       	breq	.+10     	; 0x358 <LcdSetCursor+0x1e>
     34e:	07 c0       	rjmp	.+14     	; 0x35e <LcdSetCursor+0x24>
     350:	90 ec       	ldi	r25, 0xC0	; 192
     352:	05 c0       	rjmp	.+10     	; 0x35e <LcdSetCursor+0x24>
     354:	94 e9       	ldi	r25, 0x94	; 148
     356:	03 c0       	rjmp	.+6      	; 0x35e <LcdSetCursor+0x24>
     358:	94 ed       	ldi	r25, 0xD4	; 212
     35a:	01 c0       	rjmp	.+2      	; 0x35e <LcdSetCursor+0x24>
     35c:	90 e8       	ldi	r25, 0x80	; 128
     35e:	8f 70       	andi	r24, 0x0F	; 15
     360:	89 2b       	or	r24, r25
     362:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     366:	ce 01       	movw	r24, r28
     368:	0e 94 87 01 	call	0x30e	; 0x30e <LcdString>
     36c:	df 91       	pop	r29
     36e:	cf 91       	pop	r28
     370:	08 95       	ret

00000372 <USART_Init>:
     372:	9c 01       	movw	r18, r24
     374:	40 e0       	ldi	r20, 0x00	; 0
     376:	50 e0       	ldi	r21, 0x00	; 0
     378:	60 e2       	ldi	r22, 0x20	; 32
     37a:	71 ea       	ldi	r23, 0xA1	; 161
     37c:	87 e0       	ldi	r24, 0x07	; 7
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	0e 94 de 10 	call	0x21bc	; 0x21bc <__divmodsi4>
     384:	21 50       	subi	r18, 0x01	; 1
     386:	31 09       	sbc	r19, r1
     388:	30 bd       	out	0x20, r19	; 32
     38a:	29 b9       	out	0x09, r18	; 9
     38c:	88 e1       	ldi	r24, 0x18	; 24
     38e:	8a b9       	out	0x0a, r24	; 10
     390:	8e e8       	ldi	r24, 0x8E	; 142
     392:	80 bd       	out	0x20, r24	; 32
     394:	78 94       	sei
     396:	08 95       	ret

00000398 <USART_Transmit>:
     398:	5d 9b       	sbis	0x0b, 5	; 11
     39a:	fe cf       	rjmp	.-4      	; 0x398 <USART_Transmit>
     39c:	8c b9       	out	0x0c, r24	; 12
     39e:	08 95       	ret

000003a0 <USART_TxStringln>:
     3a0:	cf 93       	push	r28
     3a2:	df 93       	push	r29
     3a4:	ec 01       	movw	r28, r24
     3a6:	03 c0       	rjmp	.+6      	; 0x3ae <USART_TxStringln+0xe>
     3a8:	21 96       	adiw	r28, 0x01	; 1
     3aa:	0e 94 cc 01 	call	0x398	; 0x398 <USART_Transmit>
     3ae:	88 81       	ld	r24, Y
     3b0:	81 11       	cpse	r24, r1
     3b2:	fa cf       	rjmp	.-12     	; 0x3a8 <USART_TxStringln+0x8>
     3b4:	8d e0       	ldi	r24, 0x0D	; 13
     3b6:	0e 94 cc 01 	call	0x398	; 0x398 <USART_Transmit>
     3ba:	8a e0       	ldi	r24, 0x0A	; 10
     3bc:	0e 94 cc 01 	call	0x398	; 0x398 <USART_Transmit>
     3c0:	df 91       	pop	r29
     3c2:	cf 91       	pop	r28
     3c4:	08 95       	ret

000003c6 <__vector_13>:
     3c6:	1f 92       	push	r1
     3c8:	0f 92       	push	r0
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	0f 92       	push	r0
     3ce:	11 24       	eor	r1, r1
     3d0:	8f 93       	push	r24
     3d2:	8c b1       	in	r24, 0x0c	; 12
     3d4:	80 93 b3 02 	sts	0x02B3, r24	; 0x8002b3 <rchar>
     3d8:	8f 91       	pop	r24
     3da:	0f 90       	pop	r0
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	0f 90       	pop	r0
     3e0:	1f 90       	pop	r1
     3e2:	18 95       	reti

000003e4 <ReadADC>:
     3e4:	97 b1       	in	r25, 0x07	; 7
     3e6:	90 7f       	andi	r25, 0xF0	; 240
     3e8:	8f 70       	andi	r24, 0x0F	; 15
     3ea:	89 2b       	or	r24, r25
     3ec:	87 b9       	out	0x07, r24	; 7
     3ee:	86 b1       	in	r24, 0x06	; 6
     3f0:	80 64       	ori	r24, 0x40	; 64
     3f2:	86 b9       	out	0x06, r24	; 6
     3f4:	36 99       	sbic	0x06, 6	; 6
     3f6:	fe cf       	rjmp	.-4      	; 0x3f4 <ReadADC+0x10>
     3f8:	84 b1       	in	r24, 0x04	; 4
     3fa:	95 b1       	in	r25, 0x05	; 5
     3fc:	08 95       	ret

000003fe <getkeyNum>:
     3fe:	8f e0       	ldi	r24, 0x0F	; 15
     400:	87 bb       	out	0x17, r24	; 23
     402:	80 ef       	ldi	r24, 0xF0	; 240
     404:	88 bb       	out	0x18, r24	; 24
     406:	86 b3       	in	r24, 0x16	; 22
     408:	8f 60       	ori	r24, 0x0F	; 15
     40a:	80 95       	com	r24
     40c:	e1 f3       	breq	.-8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     40e:	80 32       	cpi	r24, 0x20	; 32
     410:	49 f0       	breq	.+18     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     412:	18 f4       	brcc	.+6      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     414:	80 31       	cpi	r24, 0x10	; 16
     416:	61 f0       	breq	.+24     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
     418:	0c c0       	rjmp	.+24     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     41a:	80 34       	cpi	r24, 0x40	; 64
     41c:	29 f0       	breq	.+10     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     41e:	80 38       	cpi	r24, 0x80	; 128
     420:	29 f0       	breq	.+10     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
     422:	07 c0       	rjmp	.+14     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     424:	91 e0       	ldi	r25, 0x01	; 1
     426:	05 c0       	rjmp	.+10     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     428:	92 e0       	ldi	r25, 0x02	; 2
     42a:	03 c0       	rjmp	.+6      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     42c:	93 e0       	ldi	r25, 0x03	; 3
     42e:	01 c0       	rjmp	.+2      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	17 ba       	out	0x17, r1	; 23
     434:	18 ba       	out	0x18, r1	; 24
     436:	80 ef       	ldi	r24, 0xF0	; 240
     438:	87 bb       	out	0x17, r24	; 23
     43a:	8f e0       	ldi	r24, 0x0F	; 15
     43c:	88 bb       	out	0x18, r24	; 24
     43e:	86 b3       	in	r24, 0x16	; 22
     440:	80 6f       	ori	r24, 0xF0	; 240
     442:	80 95       	com	r24
     444:	82 30       	cpi	r24, 0x02	; 2
     446:	49 f0       	breq	.+18     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
     448:	18 f4       	brcc	.+6      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
     44a:	81 30       	cpi	r24, 0x01	; 1
     44c:	61 f0       	breq	.+24     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     44e:	0c c0       	rjmp	.+24     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     450:	84 30       	cpi	r24, 0x04	; 4
     452:	29 f0       	breq	.+10     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
     454:	88 30       	cpi	r24, 0x08	; 8
     456:	29 f0       	breq	.+10     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     458:	07 c0       	rjmp	.+14     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     45a:	e1 e0       	ldi	r30, 0x01	; 1
     45c:	05 c0       	rjmp	.+10     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     45e:	e2 e0       	ldi	r30, 0x02	; 2
     460:	03 c0       	rjmp	.+6      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     462:	e3 e0       	ldi	r30, 0x03	; 3
     464:	01 c0       	rjmp	.+2      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     466:	e0 e0       	ldi	r30, 0x00	; 0
     468:	8f e0       	ldi	r24, 0x0F	; 15
     46a:	87 bb       	out	0x17, r24	; 23
     46c:	80 ef       	ldi	r24, 0xF0	; 240
     46e:	88 bb       	out	0x18, r24	; 24
     470:	f0 e0       	ldi	r31, 0x00	; 0
     472:	ee 0f       	add	r30, r30
     474:	ff 1f       	adc	r31, r31
     476:	ee 0f       	add	r30, r30
     478:	ff 1f       	adc	r31, r31
     47a:	e1 57       	subi	r30, 0x71	; 113
     47c:	fd 4f       	sbci	r31, 0xFD	; 253
     47e:	e9 0f       	add	r30, r25
     480:	f1 1d       	adc	r31, r1
     482:	80 81       	ld	r24, Z
     484:	08 95       	ret

00000486 <addContactNo>:
     486:	0f 93       	push	r16
     488:	1f 93       	push	r17
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	cd b7       	in	r28, 0x3d	; 61
     490:	de b7       	in	r29, 0x3e	; 62
     492:	6e 97       	sbiw	r28, 0x1e	; 30
     494:	0f b6       	in	r0, 0x3f	; 63
     496:	f8 94       	cli
     498:	de bf       	out	0x3e, r29	; 62
     49a:	0f be       	out	0x3f, r0	; 63
     49c:	cd bf       	out	0x3d, r28	; 61
     49e:	81 e0       	ldi	r24, 0x01	; 1
     4a0:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     4a4:	46 eb       	ldi	r20, 0xB6	; 182
     4a6:	50 e0       	ldi	r21, 0x00	; 0
     4a8:	60 e0       	ldi	r22, 0x00	; 0
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     4b0:	2f ef       	ldi	r18, 0xFF	; 255
     4b2:	44 e3       	ldi	r20, 0x34	; 52
     4b4:	5c e0       	ldi	r21, 0x0C	; 12
     4b6:	21 50       	subi	r18, 0x01	; 1
     4b8:	40 40       	sbci	r20, 0x00	; 0
     4ba:	50 40       	sbci	r21, 0x00	; 0
     4bc:	e1 f7       	brne	.-8      	; 0x4b6 <addContactNo+0x30>
     4be:	00 c0       	rjmp	.+0      	; 0x4c0 <addContactNo+0x3a>
     4c0:	00 00       	nop
     4c2:	fe 01       	movw	r30, r28
     4c4:	31 96       	adiw	r30, 0x01	; 1
     4c6:	8a e0       	ldi	r24, 0x0A	; 10
     4c8:	df 01       	movw	r26, r30
     4ca:	1d 92       	st	X+, r1
     4cc:	8a 95       	dec	r24
     4ce:	e9 f7       	brne	.-6      	; 0x4ca <addContactNo+0x44>
     4d0:	84 e1       	ldi	r24, 0x14	; 20
     4d2:	ee e7       	ldi	r30, 0x7E	; 126
     4d4:	f0 e0       	ldi	r31, 0x00	; 0
     4d6:	de 01       	movw	r26, r28
     4d8:	1b 96       	adiw	r26, 0x0b	; 11
     4da:	01 90       	ld	r0, Z+
     4dc:	0d 92       	st	X+, r0
     4de:	8a 95       	dec	r24
     4e0:	e1 f7       	brne	.-8      	; 0x4da <addContactNo+0x54>
     4e2:	1f 92       	push	r1
     4e4:	1f 92       	push	r1
     4e6:	1f 92       	push	r1
     4e8:	1f 92       	push	r1
     4ea:	1f 92       	push	r1
     4ec:	1f 92       	push	r1
     4ee:	1f 92       	push	r1
     4f0:	1f 92       	push	r1
     4f2:	1f 92       	push	r1
     4f4:	1f 92       	push	r1
     4f6:	1f 92       	push	r1
     4f8:	1f 92       	push	r1
     4fa:	1f 92       	push	r1
     4fc:	1f 92       	push	r1
     4fe:	1f 92       	push	r1
     500:	1f 92       	push	r1
     502:	1f 92       	push	r1
     504:	1f 92       	push	r1
     506:	1f 92       	push	r1
     508:	1f 92       	push	r1
     50a:	88 ec       	ldi	r24, 0xC8	; 200
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	9f 93       	push	r25
     510:	8f 93       	push	r24
     512:	88 eb       	ldi	r24, 0xB8	; 184
     514:	92 e0       	ldi	r25, 0x02	; 2
     516:	9f 93       	push	r25
     518:	8f 93       	push	r24
     51a:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
     51e:	48 eb       	ldi	r20, 0xB8	; 184
     520:	52 e0       	ldi	r21, 0x02	; 2
     522:	61 e0       	ldi	r22, 0x01	; 1
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     52a:	4a e9       	ldi	r20, 0x9A	; 154
     52c:	51 e0       	ldi	r21, 0x01	; 1
     52e:	61 e0       	ldi	r22, 0x01	; 1
     530:	80 e0       	ldi	r24, 0x00	; 0
     532:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     536:	8d e0       	ldi	r24, 0x0D	; 13
     538:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     53c:	0f b6       	in	r0, 0x3f	; 63
     53e:	f8 94       	cli
     540:	de bf       	out	0x3e, r29	; 62
     542:	0f be       	out	0x3f, r0	; 63
     544:	cd bf       	out	0x3d, r28	; 61
     546:	10 e0       	ldi	r17, 0x00	; 0
     548:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
     54c:	21 2f       	mov	r18, r17
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	f9 01       	movw	r30, r18
     552:	ee 0f       	add	r30, r30
     554:	ff 1f       	adc	r31, r31
     556:	41 e0       	ldi	r20, 0x01	; 1
     558:	50 e0       	ldi	r21, 0x00	; 0
     55a:	4c 0f       	add	r20, r28
     55c:	5d 1f       	adc	r21, r29
     55e:	e4 0f       	add	r30, r20
     560:	f5 1f       	adc	r31, r21
     562:	93 85       	ldd	r25, Z+11	; 0x0b
     564:	98 17       	cp	r25, r24
     566:	08 f4       	brcc	.+2      	; 0x56a <addContactNo+0xe4>
     568:	55 c0       	rjmp	.+170    	; 0x614 <addContactNo+0x18e>
     56a:	fa 01       	movw	r30, r20
     56c:	e2 0f       	add	r30, r18
     56e:	f3 1f       	adc	r31, r19
     570:	80 83       	st	Z, r24
     572:	fa 85       	ldd	r31, Y+10	; 0x0a
     574:	e9 85       	ldd	r30, Y+9	; 0x09
     576:	78 85       	ldd	r23, Y+8	; 0x08
     578:	6f 81       	ldd	r22, Y+7	; 0x07
     57a:	5e 81       	ldd	r21, Y+6	; 0x06
     57c:	4d 81       	ldd	r20, Y+5	; 0x05
     57e:	3c 81       	ldd	r19, Y+4	; 0x04
     580:	2b 81       	ldd	r18, Y+3	; 0x03
     582:	9a 81       	ldd	r25, Y+2	; 0x02
     584:	89 81       	ldd	r24, Y+1	; 0x01
     586:	1f 92       	push	r1
     588:	ff 93       	push	r31
     58a:	1f 92       	push	r1
     58c:	ef 93       	push	r30
     58e:	1f 92       	push	r1
     590:	7f 93       	push	r23
     592:	1f 92       	push	r1
     594:	6f 93       	push	r22
     596:	1f 92       	push	r1
     598:	5f 93       	push	r21
     59a:	1f 92       	push	r1
     59c:	4f 93       	push	r20
     59e:	1f 92       	push	r1
     5a0:	3f 93       	push	r19
     5a2:	1f 92       	push	r1
     5a4:	2f 93       	push	r18
     5a6:	1f 92       	push	r1
     5a8:	9f 93       	push	r25
     5aa:	1f 92       	push	r1
     5ac:	8f 93       	push	r24
     5ae:	88 ec       	ldi	r24, 0xC8	; 200
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	9f 93       	push	r25
     5b4:	8f 93       	push	r24
     5b6:	88 eb       	ldi	r24, 0xB8	; 184
     5b8:	92 e0       	ldi	r25, 0x02	; 2
     5ba:	9f 93       	push	r25
     5bc:	8f 93       	push	r24
     5be:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
     5c2:	48 eb       	ldi	r20, 0xB8	; 184
     5c4:	52 e0       	ldi	r21, 0x02	; 2
     5c6:	61 e0       	ldi	r22, 0x01	; 1
     5c8:	80 e0       	ldi	r24, 0x00	; 0
     5ca:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     5ce:	1f 5f       	subi	r17, 0xFF	; 255
     5d0:	0f b6       	in	r0, 0x3f	; 63
     5d2:	f8 94       	cli
     5d4:	de bf       	out	0x3e, r29	; 62
     5d6:	0f be       	out	0x3f, r0	; 63
     5d8:	cd bf       	out	0x3d, r28	; 61
     5da:	1b 30       	cpi	r17, 0x0B	; 11
     5dc:	08 f0       	brcs	.+2      	; 0x5e0 <addContactNo+0x15a>
     5de:	10 e0       	ldi	r17, 0x00	; 0
     5e0:	e1 2f       	mov	r30, r17
     5e2:	f0 e0       	ldi	r31, 0x00	; 0
     5e4:	ee 0f       	add	r30, r30
     5e6:	ff 1f       	adc	r31, r31
     5e8:	a1 e0       	ldi	r26, 0x01	; 1
     5ea:	b0 e0       	ldi	r27, 0x00	; 0
     5ec:	ac 0f       	add	r26, r28
     5ee:	bd 1f       	adc	r27, r29
     5f0:	ea 0f       	add	r30, r26
     5f2:	fb 1f       	adc	r31, r27
     5f4:	4a e9       	ldi	r20, 0x9A	; 154
     5f6:	51 e0       	ldi	r21, 0x01	; 1
     5f8:	61 e0       	ldi	r22, 0x01	; 1
     5fa:	82 85       	ldd	r24, Z+10	; 0x0a
     5fc:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     600:	bf ef       	ldi	r27, 0xFF	; 255
     602:	e1 ee       	ldi	r30, 0xE1	; 225
     604:	f4 e0       	ldi	r31, 0x04	; 4
     606:	b1 50       	subi	r27, 0x01	; 1
     608:	e0 40       	sbci	r30, 0x00	; 0
     60a:	f0 40       	sbci	r31, 0x00	; 0
     60c:	e1 f7       	brne	.-8      	; 0x606 <addContactNo+0x180>
     60e:	00 c0       	rjmp	.+0      	; 0x610 <addContactNo+0x18a>
     610:	00 00       	nop
     612:	9a cf       	rjmp	.-204    	; 0x548 <addContactNo+0xc2>
     614:	8e 30       	cpi	r24, 0x0E	; 14
     616:	09 f0       	breq	.+2      	; 0x61a <addContactNo+0x194>
     618:	97 cf       	rjmp	.-210    	; 0x548 <addContactNo+0xc2>
     61a:	81 e0       	ldi	r24, 0x01	; 1
     61c:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     620:	8c e0       	ldi	r24, 0x0C	; 12
     622:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     626:	4d ed       	ldi	r20, 0xDD	; 221
     628:	50 e0       	ldi	r21, 0x00	; 0
     62a:	60 e0       	ldi	r22, 0x00	; 0
     62c:	80 e0       	ldi	r24, 0x00	; 0
     62e:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     632:	00 e6       	ldi	r16, 0x60	; 96
     634:	10 e0       	ldi	r17, 0x00	; 0
     636:	d8 01       	movw	r26, r16
     638:	8c 91       	ld	r24, X
     63a:	69 e0       	ldi	r22, 0x09	; 9
     63c:	70 e0       	ldi	r23, 0x00	; 0
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	0e 94 1b 13 	call	0x2636	; 0x2636 <eeprom_write_word>
     644:	f8 01       	movw	r30, r16
     646:	81 81       	ldd	r24, Z+1	; 0x01
     648:	64 e0       	ldi	r22, 0x04	; 4
     64a:	70 e0       	ldi	r23, 0x00	; 0
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	0e 94 1b 13 	call	0x2636	; 0x2636 <eeprom_write_word>
     652:	01 e0       	ldi	r16, 0x01	; 1
     654:	10 e0       	ldi	r17, 0x00	; 0
     656:	11 c0       	rjmp	.+34     	; 0x67a <addContactNo+0x1f4>
     658:	e1 e0       	ldi	r30, 0x01	; 1
     65a:	f0 e0       	ldi	r31, 0x00	; 0
     65c:	ec 0f       	add	r30, r28
     65e:	fd 1f       	adc	r31, r29
     660:	e0 0f       	add	r30, r16
     662:	f1 1f       	adc	r31, r17
     664:	60 81       	ld	r22, Z
     666:	0f 5f       	subi	r16, 0xFF	; 255
     668:	1f 4f       	sbci	r17, 0xFF	; 255
     66a:	f8 01       	movw	r30, r16
     66c:	e0 5a       	subi	r30, 0xA0	; 160
     66e:	ff 4f       	sbci	r31, 0xFF	; 255
     670:	80 81       	ld	r24, Z
     672:	70 e0       	ldi	r23, 0x00	; 0
     674:	90 e0       	ldi	r25, 0x00	; 0
     676:	0e 94 1b 13 	call	0x2636	; 0x2636 <eeprom_write_word>
     67a:	0a 30       	cpi	r16, 0x0A	; 10
     67c:	11 05       	cpc	r17, r1
     67e:	64 f3       	brlt	.-40     	; 0x658 <addContactNo+0x1d2>
     680:	ff ef       	ldi	r31, 0xFF	; 255
     682:	24 e3       	ldi	r18, 0x34	; 52
     684:	4c e0       	ldi	r20, 0x0C	; 12
     686:	f1 50       	subi	r31, 0x01	; 1
     688:	20 40       	sbci	r18, 0x00	; 0
     68a:	40 40       	sbci	r20, 0x00	; 0
     68c:	e1 f7       	brne	.-8      	; 0x686 <addContactNo+0x200>
     68e:	00 c0       	rjmp	.+0      	; 0x690 <addContactNo+0x20a>
     690:	00 00       	nop
     692:	6e 96       	adiw	r28, 0x1e	; 30
     694:	0f b6       	in	r0, 0x3f	; 63
     696:	f8 94       	cli
     698:	de bf       	out	0x3e, r29	; 62
     69a:	0f be       	out	0x3f, r0	; 63
     69c:	cd bf       	out	0x3d, r28	; 61
     69e:	df 91       	pop	r29
     6a0:	cf 91       	pop	r28
     6a2:	1f 91       	pop	r17
     6a4:	0f 91       	pop	r16
     6a6:	08 95       	ret

000006a8 <Addtime>:
     6a8:	ef 92       	push	r14
     6aa:	ff 92       	push	r15
     6ac:	0f 93       	push	r16
     6ae:	1f 93       	push	r17
     6b0:	cf 93       	push	r28
     6b2:	df 93       	push	r29
     6b4:	cd b7       	in	r28, 0x3d	; 61
     6b6:	de b7       	in	r29, 0x3e	; 62
     6b8:	2c 97       	sbiw	r28, 0x0c	; 12
     6ba:	0f b6       	in	r0, 0x3f	; 63
     6bc:	f8 94       	cli
     6be:	de bf       	out	0x3e, r29	; 62
     6c0:	0f be       	out	0x3f, r0	; 63
     6c2:	cd bf       	out	0x3d, r28	; 61
     6c4:	08 2f       	mov	r16, r24
     6c6:	81 e0       	ldi	r24, 0x01	; 1
     6c8:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     6cc:	4a ee       	ldi	r20, 0xEA	; 234
     6ce:	50 e0       	ldi	r21, 0x00	; 0
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	80 e0       	ldi	r24, 0x00	; 0
     6d4:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     6d8:	2f ef       	ldi	r18, 0xFF	; 255
     6da:	34 e3       	ldi	r19, 0x34	; 52
     6dc:	4c e0       	ldi	r20, 0x0C	; 12
     6de:	21 50       	subi	r18, 0x01	; 1
     6e0:	30 40       	sbci	r19, 0x00	; 0
     6e2:	40 40       	sbci	r20, 0x00	; 0
     6e4:	e1 f7       	brne	.-8      	; 0x6de <Addtime+0x36>
     6e6:	00 c0       	rjmp	.+0      	; 0x6e8 <Addtime+0x40>
     6e8:	00 00       	nop
     6ea:	19 82       	std	Y+1, r1	; 0x01
     6ec:	1a 82       	std	Y+2, r1	; 0x02
     6ee:	1b 82       	std	Y+3, r1	; 0x03
     6f0:	1c 82       	std	Y+4, r1	; 0x04
     6f2:	88 e0       	ldi	r24, 0x08	; 8
     6f4:	e2 e9       	ldi	r30, 0x92	; 146
     6f6:	f0 e0       	ldi	r31, 0x00	; 0
     6f8:	de 01       	movw	r26, r28
     6fa:	15 96       	adiw	r26, 0x05	; 5
     6fc:	01 90       	ld	r0, Z+
     6fe:	0d 92       	st	X+, r0
     700:	8a 95       	dec	r24
     702:	e1 f7       	brne	.-8      	; 0x6fc <Addtime+0x54>
     704:	1f 92       	push	r1
     706:	1f 92       	push	r1
     708:	1f 92       	push	r1
     70a:	1f 92       	push	r1
     70c:	1f 92       	push	r1
     70e:	1f 92       	push	r1
     710:	1f 92       	push	r1
     712:	1f 92       	push	r1
     714:	8b e3       	ldi	r24, 0x3B	; 59
     716:	91 e0       	ldi	r25, 0x01	; 1
     718:	9f 93       	push	r25
     71a:	8f 93       	push	r24
     71c:	88 eb       	ldi	r24, 0xB8	; 184
     71e:	92 e0       	ldi	r25, 0x02	; 2
     720:	9f 93       	push	r25
     722:	8f 93       	push	r24
     724:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
     728:	48 eb       	ldi	r20, 0xB8	; 184
     72a:	52 e0       	ldi	r21, 0x02	; 2
     72c:	61 e0       	ldi	r22, 0x01	; 1
     72e:	80 e0       	ldi	r24, 0x00	; 0
     730:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     734:	4a e9       	ldi	r20, 0x9A	; 154
     736:	51 e0       	ldi	r21, 0x01	; 1
     738:	61 e0       	ldi	r22, 0x01	; 1
     73a:	80 e0       	ldi	r24, 0x00	; 0
     73c:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     740:	8d e0       	ldi	r24, 0x0D	; 13
     742:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     746:	0f b6       	in	r0, 0x3f	; 63
     748:	f8 94       	cli
     74a:	de bf       	out	0x3e, r29	; 62
     74c:	0f be       	out	0x3f, r0	; 63
     74e:	cd bf       	out	0x3d, r28	; 61
     750:	10 e0       	ldi	r17, 0x00	; 0
     752:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
     756:	21 2f       	mov	r18, r17
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	f9 01       	movw	r30, r18
     75c:	ee 0f       	add	r30, r30
     75e:	ff 1f       	adc	r31, r31
     760:	41 e0       	ldi	r20, 0x01	; 1
     762:	50 e0       	ldi	r21, 0x00	; 0
     764:	4c 0f       	add	r20, r28
     766:	5d 1f       	adc	r21, r29
     768:	e4 0f       	add	r30, r20
     76a:	f5 1f       	adc	r31, r21
     76c:	95 81       	ldd	r25, Z+5	; 0x05
     76e:	98 17       	cp	r25, r24
     770:	08 f4       	brcc	.+2      	; 0x774 <Addtime+0xcc>
     772:	43 c0       	rjmp	.+134    	; 0x7fa <Addtime+0x152>
     774:	fa 01       	movw	r30, r20
     776:	e2 0f       	add	r30, r18
     778:	f3 1f       	adc	r31, r19
     77a:	80 83       	st	Z, r24
     77c:	3c 81       	ldd	r19, Y+4	; 0x04
     77e:	2b 81       	ldd	r18, Y+3	; 0x03
     780:	9a 81       	ldd	r25, Y+2	; 0x02
     782:	89 81       	ldd	r24, Y+1	; 0x01
     784:	1f 92       	push	r1
     786:	3f 93       	push	r19
     788:	1f 92       	push	r1
     78a:	2f 93       	push	r18
     78c:	1f 92       	push	r1
     78e:	9f 93       	push	r25
     790:	1f 92       	push	r1
     792:	8f 93       	push	r24
     794:	8b e3       	ldi	r24, 0x3B	; 59
     796:	91 e0       	ldi	r25, 0x01	; 1
     798:	9f 93       	push	r25
     79a:	8f 93       	push	r24
     79c:	88 eb       	ldi	r24, 0xB8	; 184
     79e:	92 e0       	ldi	r25, 0x02	; 2
     7a0:	9f 93       	push	r25
     7a2:	8f 93       	push	r24
     7a4:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
     7a8:	48 eb       	ldi	r20, 0xB8	; 184
     7aa:	52 e0       	ldi	r21, 0x02	; 2
     7ac:	61 e0       	ldi	r22, 0x01	; 1
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     7b4:	1f 5f       	subi	r17, 0xFF	; 255
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	f8 94       	cli
     7ba:	de bf       	out	0x3e, r29	; 62
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	cd bf       	out	0x3d, r28	; 61
     7c0:	14 30       	cpi	r17, 0x04	; 4
     7c2:	08 f0       	brcs	.+2      	; 0x7c6 <Addtime+0x11e>
     7c4:	10 e0       	ldi	r17, 0x00	; 0
     7c6:	e1 2f       	mov	r30, r17
     7c8:	f0 e0       	ldi	r31, 0x00	; 0
     7ca:	ee 0f       	add	r30, r30
     7cc:	ff 1f       	adc	r31, r31
     7ce:	21 e0       	ldi	r18, 0x01	; 1
     7d0:	30 e0       	ldi	r19, 0x00	; 0
     7d2:	2c 0f       	add	r18, r28
     7d4:	3d 1f       	adc	r19, r29
     7d6:	e2 0f       	add	r30, r18
     7d8:	f3 1f       	adc	r31, r19
     7da:	4a e9       	ldi	r20, 0x9A	; 154
     7dc:	51 e0       	ldi	r21, 0x01	; 1
     7de:	61 e0       	ldi	r22, 0x01	; 1
     7e0:	84 81       	ldd	r24, Z+4	; 0x04
     7e2:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     7e6:	3f ef       	ldi	r19, 0xFF	; 255
     7e8:	41 ee       	ldi	r20, 0xE1	; 225
     7ea:	54 e0       	ldi	r21, 0x04	; 4
     7ec:	31 50       	subi	r19, 0x01	; 1
     7ee:	40 40       	sbci	r20, 0x00	; 0
     7f0:	50 40       	sbci	r21, 0x00	; 0
     7f2:	e1 f7       	brne	.-8      	; 0x7ec <Addtime+0x144>
     7f4:	00 c0       	rjmp	.+0      	; 0x7f6 <Addtime+0x14e>
     7f6:	00 00       	nop
     7f8:	ac cf       	rjmp	.-168    	; 0x752 <Addtime+0xaa>
     7fa:	8e 30       	cpi	r24, 0x0E	; 14
     7fc:	09 f0       	breq	.+2      	; 0x800 <__DATA_REGION_LENGTH__>
     7fe:	a9 cf       	rjmp	.-174    	; 0x752 <Addtime+0xaa>
     800:	81 e0       	ldi	r24, 0x01	; 1
     802:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     806:	8c e0       	ldi	r24, 0x0C	; 12
     808:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     80c:	45 ef       	ldi	r20, 0xF5	; 245
     80e:	50 e0       	ldi	r21, 0x00	; 0
     810:	60 e0       	ldi	r22, 0x00	; 0
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     818:	80 2f       	mov	r24, r16
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	29 81       	ldd	r18, Y+1	; 0x01
     81e:	3a 81       	ldd	r19, Y+2	; 0x02
     820:	8c 01       	movw	r16, r24
     822:	00 0f       	add	r16, r16
     824:	11 1f       	adc	r17, r17
     826:	0a 55       	subi	r16, 0x5A	; 90
     828:	1d 4f       	sbci	r17, 0xFD	; 253
     82a:	22 0f       	add	r18, r18
     82c:	42 2f       	mov	r20, r18
     82e:	44 0f       	add	r20, r20
     830:	44 0f       	add	r20, r20
     832:	24 0f       	add	r18, r20
     834:	23 0f       	add	r18, r19
     836:	f8 01       	movw	r30, r16
     838:	20 83       	st	Z, r18
     83a:	2b 81       	ldd	r18, Y+3	; 0x03
     83c:	3c 81       	ldd	r19, Y+4	; 0x04
     83e:	22 0f       	add	r18, r18
     840:	42 2f       	mov	r20, r18
     842:	44 0f       	add	r20, r20
     844:	44 0f       	add	r20, r20
     846:	24 0f       	add	r18, r20
     848:	23 0f       	add	r18, r19
     84a:	21 83       	std	Z+1, r18	; 0x01
     84c:	9c 01       	movw	r18, r24
     84e:	25 59       	subi	r18, 0x95	; 149
     850:	3f 4f       	sbci	r19, 0xFF	; 255
     852:	79 01       	movw	r14, r18
     854:	f9 01       	movw	r30, r18
     856:	80 81       	ld	r24, Z
     858:	f8 01       	movw	r30, r16
     85a:	60 81       	ld	r22, Z
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	0e 94 0e 13 	call	0x261c	; 0x261c <eeprom_write_byte>
     862:	f7 01       	movw	r30, r14
     864:	80 81       	ld	r24, Z
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	f8 01       	movw	r30, r16
     86a:	61 81       	ldd	r22, Z+1	; 0x01
     86c:	01 96       	adiw	r24, 0x01	; 1
     86e:	0e 94 0e 13 	call	0x261c	; 0x261c <eeprom_write_byte>
     872:	ff ef       	ldi	r31, 0xFF	; 255
     874:	24 e3       	ldi	r18, 0x34	; 52
     876:	3c e0       	ldi	r19, 0x0C	; 12
     878:	f1 50       	subi	r31, 0x01	; 1
     87a:	20 40       	sbci	r18, 0x00	; 0
     87c:	30 40       	sbci	r19, 0x00	; 0
     87e:	e1 f7       	brne	.-8      	; 0x878 <__stack+0x19>
     880:	00 c0       	rjmp	.+0      	; 0x882 <__stack+0x23>
     882:	00 00       	nop
     884:	2c 96       	adiw	r28, 0x0c	; 12
     886:	0f b6       	in	r0, 0x3f	; 63
     888:	f8 94       	cli
     88a:	de bf       	out	0x3e, r29	; 62
     88c:	0f be       	out	0x3f, r0	; 63
     88e:	cd bf       	out	0x3d, r28	; 61
     890:	df 91       	pop	r29
     892:	cf 91       	pop	r28
     894:	1f 91       	pop	r17
     896:	0f 91       	pop	r16
     898:	ff 90       	pop	r15
     89a:	ef 90       	pop	r14
     89c:	08 95       	ret

0000089e <AddWeight>:
     89e:	1f 93       	push	r17
     8a0:	cf 93       	push	r28
     8a2:	df 93       	push	r29
     8a4:	cd b7       	in	r28, 0x3d	; 61
     8a6:	de b7       	in	r29, 0x3e	; 62
     8a8:	2c 97       	sbiw	r28, 0x0c	; 12
     8aa:	0f b6       	in	r0, 0x3f	; 63
     8ac:	f8 94       	cli
     8ae:	de bf       	out	0x3e, r29	; 62
     8b0:	0f be       	out	0x3f, r0	; 63
     8b2:	cd bf       	out	0x3d, r28	; 61
     8b4:	81 e0       	ldi	r24, 0x01	; 1
     8b6:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     8ba:	40 e0       	ldi	r20, 0x00	; 0
     8bc:	51 e0       	ldi	r21, 0x01	; 1
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	80 e0       	ldi	r24, 0x00	; 0
     8c2:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     8c6:	2f ef       	ldi	r18, 0xFF	; 255
     8c8:	44 e3       	ldi	r20, 0x34	; 52
     8ca:	5c e0       	ldi	r21, 0x0C	; 12
     8cc:	21 50       	subi	r18, 0x01	; 1
     8ce:	40 40       	sbci	r20, 0x00	; 0
     8d0:	50 40       	sbci	r21, 0x00	; 0
     8d2:	e1 f7       	brne	.-8      	; 0x8cc <AddWeight+0x2e>
     8d4:	00 c0       	rjmp	.+0      	; 0x8d6 <AddWeight+0x38>
     8d6:	00 00       	nop
     8d8:	19 82       	std	Y+1, r1	; 0x01
     8da:	1a 82       	std	Y+2, r1	; 0x02
     8dc:	1b 82       	std	Y+3, r1	; 0x03
     8de:	1c 82       	std	Y+4, r1	; 0x04
     8e0:	88 e0       	ldi	r24, 0x08	; 8
     8e2:	ea e9       	ldi	r30, 0x9A	; 154
     8e4:	f0 e0       	ldi	r31, 0x00	; 0
     8e6:	de 01       	movw	r26, r28
     8e8:	15 96       	adiw	r26, 0x05	; 5
     8ea:	01 90       	ld	r0, Z+
     8ec:	0d 92       	st	X+, r0
     8ee:	8a 95       	dec	r24
     8f0:	e1 f7       	brne	.-8      	; 0x8ea <AddWeight+0x4c>
     8f2:	1f 92       	push	r1
     8f4:	1f 92       	push	r1
     8f6:	1f 92       	push	r1
     8f8:	1f 92       	push	r1
     8fa:	1f 92       	push	r1
     8fc:	1f 92       	push	r1
     8fe:	1f 92       	push	r1
     900:	1f 92       	push	r1
     902:	8d e0       	ldi	r24, 0x0D	; 13
     904:	91 e0       	ldi	r25, 0x01	; 1
     906:	9f 93       	push	r25
     908:	8f 93       	push	r24
     90a:	88 eb       	ldi	r24, 0xB8	; 184
     90c:	92 e0       	ldi	r25, 0x02	; 2
     90e:	9f 93       	push	r25
     910:	8f 93       	push	r24
     912:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
     916:	48 eb       	ldi	r20, 0xB8	; 184
     918:	52 e0       	ldi	r21, 0x02	; 2
     91a:	61 e0       	ldi	r22, 0x01	; 1
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     922:	4a e9       	ldi	r20, 0x9A	; 154
     924:	51 e0       	ldi	r21, 0x01	; 1
     926:	61 e0       	ldi	r22, 0x01	; 1
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     92e:	8d e0       	ldi	r24, 0x0D	; 13
     930:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     934:	0f b6       	in	r0, 0x3f	; 63
     936:	f8 94       	cli
     938:	de bf       	out	0x3e, r29	; 62
     93a:	0f be       	out	0x3f, r0	; 63
     93c:	cd bf       	out	0x3d, r28	; 61
     93e:	10 e0       	ldi	r17, 0x00	; 0
     940:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
     944:	21 2f       	mov	r18, r17
     946:	30 e0       	ldi	r19, 0x00	; 0
     948:	f9 01       	movw	r30, r18
     94a:	ee 0f       	add	r30, r30
     94c:	ff 1f       	adc	r31, r31
     94e:	41 e0       	ldi	r20, 0x01	; 1
     950:	50 e0       	ldi	r21, 0x00	; 0
     952:	4c 0f       	add	r20, r28
     954:	5d 1f       	adc	r21, r29
     956:	e4 0f       	add	r30, r20
     958:	f5 1f       	adc	r31, r21
     95a:	95 81       	ldd	r25, Z+5	; 0x05
     95c:	98 17       	cp	r25, r24
     95e:	08 f4       	brcc	.+2      	; 0x962 <AddWeight+0xc4>
     960:	43 c0       	rjmp	.+134    	; 0x9e8 <AddWeight+0x14a>
     962:	fa 01       	movw	r30, r20
     964:	e2 0f       	add	r30, r18
     966:	f3 1f       	adc	r31, r19
     968:	80 83       	st	Z, r24
     96a:	3c 81       	ldd	r19, Y+4	; 0x04
     96c:	2b 81       	ldd	r18, Y+3	; 0x03
     96e:	9a 81       	ldd	r25, Y+2	; 0x02
     970:	89 81       	ldd	r24, Y+1	; 0x01
     972:	1f 92       	push	r1
     974:	3f 93       	push	r19
     976:	1f 92       	push	r1
     978:	2f 93       	push	r18
     97a:	1f 92       	push	r1
     97c:	9f 93       	push	r25
     97e:	1f 92       	push	r1
     980:	8f 93       	push	r24
     982:	8d e0       	ldi	r24, 0x0D	; 13
     984:	91 e0       	ldi	r25, 0x01	; 1
     986:	9f 93       	push	r25
     988:	8f 93       	push	r24
     98a:	88 eb       	ldi	r24, 0xB8	; 184
     98c:	92 e0       	ldi	r25, 0x02	; 2
     98e:	9f 93       	push	r25
     990:	8f 93       	push	r24
     992:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
     996:	48 eb       	ldi	r20, 0xB8	; 184
     998:	52 e0       	ldi	r21, 0x02	; 2
     99a:	61 e0       	ldi	r22, 0x01	; 1
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     9a2:	1f 5f       	subi	r17, 0xFF	; 255
     9a4:	0f b6       	in	r0, 0x3f	; 63
     9a6:	f8 94       	cli
     9a8:	de bf       	out	0x3e, r29	; 62
     9aa:	0f be       	out	0x3f, r0	; 63
     9ac:	cd bf       	out	0x3d, r28	; 61
     9ae:	14 30       	cpi	r17, 0x04	; 4
     9b0:	08 f0       	brcs	.+2      	; 0x9b4 <AddWeight+0x116>
     9b2:	10 e0       	ldi	r17, 0x00	; 0
     9b4:	e1 2f       	mov	r30, r17
     9b6:	f0 e0       	ldi	r31, 0x00	; 0
     9b8:	ee 0f       	add	r30, r30
     9ba:	ff 1f       	adc	r31, r31
     9bc:	41 e0       	ldi	r20, 0x01	; 1
     9be:	50 e0       	ldi	r21, 0x00	; 0
     9c0:	4c 0f       	add	r20, r28
     9c2:	5d 1f       	adc	r21, r29
     9c4:	e4 0f       	add	r30, r20
     9c6:	f5 1f       	adc	r31, r21
     9c8:	4a e9       	ldi	r20, 0x9A	; 154
     9ca:	51 e0       	ldi	r21, 0x01	; 1
     9cc:	61 e0       	ldi	r22, 0x01	; 1
     9ce:	84 81       	ldd	r24, Z+4	; 0x04
     9d0:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     9d4:	5f ef       	ldi	r21, 0xFF	; 255
     9d6:	81 ee       	ldi	r24, 0xE1	; 225
     9d8:	94 e0       	ldi	r25, 0x04	; 4
     9da:	51 50       	subi	r21, 0x01	; 1
     9dc:	80 40       	sbci	r24, 0x00	; 0
     9de:	90 40       	sbci	r25, 0x00	; 0
     9e0:	e1 f7       	brne	.-8      	; 0x9da <AddWeight+0x13c>
     9e2:	00 c0       	rjmp	.+0      	; 0x9e4 <AddWeight+0x146>
     9e4:	00 00       	nop
     9e6:	ac cf       	rjmp	.-168    	; 0x940 <AddWeight+0xa2>
     9e8:	8e 30       	cpi	r24, 0x0E	; 14
     9ea:	09 f0       	breq	.+2      	; 0x9ee <AddWeight+0x150>
     9ec:	a9 cf       	rjmp	.-174    	; 0x940 <AddWeight+0xa2>
     9ee:	81 e0       	ldi	r24, 0x01	; 1
     9f0:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     9f4:	8c e0       	ldi	r24, 0x0C	; 12
     9f6:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     9fa:	47 e1       	ldi	r20, 0x17	; 23
     9fc:	51 e0       	ldi	r21, 0x01	; 1
     9fe:	60 e0       	ldi	r22, 0x00	; 0
     a00:	80 e0       	ldi	r24, 0x00	; 0
     a02:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     a06:	29 81       	ldd	r18, Y+1	; 0x01
     a08:	88 ee       	ldi	r24, 0xE8	; 232
     a0a:	93 e0       	ldi	r25, 0x03	; 3
     a0c:	28 9f       	mul	r18, r24
     a0e:	b0 01       	movw	r22, r0
     a10:	29 9f       	mul	r18, r25
     a12:	70 0d       	add	r23, r0
     a14:	11 24       	eor	r1, r1
     a16:	8a 81       	ldd	r24, Y+2	; 0x02
     a18:	24 e6       	ldi	r18, 0x64	; 100
     a1a:	82 9f       	mul	r24, r18
     a1c:	60 0d       	add	r22, r0
     a1e:	71 1d       	adc	r23, r1
     a20:	11 24       	eor	r1, r1
     a22:	8b 81       	ldd	r24, Y+3	; 0x03
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	9c 01       	movw	r18, r24
     a28:	22 0f       	add	r18, r18
     a2a:	33 1f       	adc	r19, r19
     a2c:	88 0f       	add	r24, r24
     a2e:	99 1f       	adc	r25, r25
     a30:	88 0f       	add	r24, r24
     a32:	99 1f       	adc	r25, r25
     a34:	88 0f       	add	r24, r24
     a36:	99 1f       	adc	r25, r25
     a38:	82 0f       	add	r24, r18
     a3a:	93 1f       	adc	r25, r19
     a3c:	68 0f       	add	r22, r24
     a3e:	79 1f       	adc	r23, r25
     a40:	8c 81       	ldd	r24, Y+4	; 0x04
     a42:	68 0f       	add	r22, r24
     a44:	71 1d       	adc	r23, r1
     a46:	70 93 a5 02 	sts	0x02A5, r23	; 0x8002a5 <feedingWeight+0x1>
     a4a:	60 93 a4 02 	sts	0x02A4, r22	; 0x8002a4 <feedingWeight>
     a4e:	86 e0       	ldi	r24, 0x06	; 6
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	0e 94 1b 13 	call	0x2636	; 0x2636 <eeprom_write_word>
     a56:	4f ef       	ldi	r20, 0xFF	; 255
     a58:	54 e3       	ldi	r21, 0x34	; 52
     a5a:	8c e0       	ldi	r24, 0x0C	; 12
     a5c:	41 50       	subi	r20, 0x01	; 1
     a5e:	50 40       	sbci	r21, 0x00	; 0
     a60:	80 40       	sbci	r24, 0x00	; 0
     a62:	e1 f7       	brne	.-8      	; 0xa5c <AddWeight+0x1be>
     a64:	00 c0       	rjmp	.+0      	; 0xa66 <AddWeight+0x1c8>
     a66:	00 00       	nop
     a68:	2c 96       	adiw	r28, 0x0c	; 12
     a6a:	0f b6       	in	r0, 0x3f	; 63
     a6c:	f8 94       	cli
     a6e:	de bf       	out	0x3e, r29	; 62
     a70:	0f be       	out	0x3f, r0	; 63
     a72:	cd bf       	out	0x3d, r28	; 61
     a74:	df 91       	pop	r29
     a76:	cf 91       	pop	r28
     a78:	1f 91       	pop	r17
     a7a:	08 95       	ret

00000a7c <setTime>:
     a7c:	0f 93       	push	r16
     a7e:	1f 93       	push	r17
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	08 2f       	mov	r16, r24
     a86:	16 2f       	mov	r17, r22
     a88:	d4 2f       	mov	r29, r20
     a8a:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     a8e:	60 e0       	ldi	r22, 0x00	; 0
     a90:	88 e6       	ldi	r24, 0x68	; 104
     a92:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     a96:	82 e0       	ldi	r24, 0x02	; 2
     a98:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     a9c:	cd ec       	ldi	r28, 0xCD	; 205
     a9e:	0c 9f       	mul	r16, r28
     aa0:	91 2d       	mov	r25, r1
     aa2:	11 24       	eor	r1, r1
     aa4:	96 95       	lsr	r25
     aa6:	96 95       	lsr	r25
     aa8:	96 95       	lsr	r25
     aaa:	20 e1       	ldi	r18, 0x10	; 16
     aac:	92 9f       	mul	r25, r18
     aae:	a0 01       	movw	r20, r0
     ab0:	11 24       	eor	r1, r1
     ab2:	99 0f       	add	r25, r25
     ab4:	29 2f       	mov	r18, r25
     ab6:	22 0f       	add	r18, r18
     ab8:	22 0f       	add	r18, r18
     aba:	92 0f       	add	r25, r18
     abc:	80 2f       	mov	r24, r16
     abe:	89 1b       	sub	r24, r25
     ac0:	84 2b       	or	r24, r20
     ac2:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     ac6:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     aca:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     ace:	60 e0       	ldi	r22, 0x00	; 0
     ad0:	88 e6       	ldi	r24, 0x68	; 104
     ad2:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     adc:	1c 9f       	mul	r17, r28
     ade:	91 2d       	mov	r25, r1
     ae0:	11 24       	eor	r1, r1
     ae2:	96 95       	lsr	r25
     ae4:	96 95       	lsr	r25
     ae6:	96 95       	lsr	r25
     ae8:	80 e1       	ldi	r24, 0x10	; 16
     aea:	98 9f       	mul	r25, r24
     aec:	a0 01       	movw	r20, r0
     aee:	11 24       	eor	r1, r1
     af0:	99 0f       	add	r25, r25
     af2:	29 2f       	mov	r18, r25
     af4:	22 0f       	add	r18, r18
     af6:	22 0f       	add	r18, r18
     af8:	92 0f       	add	r25, r18
     afa:	81 2f       	mov	r24, r17
     afc:	89 1b       	sub	r24, r25
     afe:	84 2b       	or	r24, r20
     b00:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     b04:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     b08:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     b0c:	60 e0       	ldi	r22, 0x00	; 0
     b0e:	88 e6       	ldi	r24, 0x68	; 104
     b10:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     b14:	80 e0       	ldi	r24, 0x00	; 0
     b16:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     b1a:	dc 9f       	mul	r29, r28
     b1c:	c1 2d       	mov	r28, r1
     b1e:	11 24       	eor	r1, r1
     b20:	c6 95       	lsr	r28
     b22:	c6 95       	lsr	r28
     b24:	c6 95       	lsr	r28
     b26:	20 e1       	ldi	r18, 0x10	; 16
     b28:	c2 9f       	mul	r28, r18
     b2a:	c0 01       	movw	r24, r0
     b2c:	11 24       	eor	r1, r1
     b2e:	cc 0f       	add	r28, r28
     b30:	9c 2f       	mov	r25, r28
     b32:	99 0f       	add	r25, r25
     b34:	99 0f       	add	r25, r25
     b36:	c9 0f       	add	r28, r25
     b38:	dc 1b       	sub	r29, r28
     b3a:	8d 2b       	or	r24, r29
     b3c:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     b40:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     b44:	df 91       	pop	r29
     b46:	cf 91       	pop	r28
     b48:	1f 91       	pop	r17
     b4a:	0f 91       	pop	r16
     b4c:	08 95       	ret

00000b4e <setOngoingTime>:
     b4e:	1f 93       	push	r17
     b50:	cf 93       	push	r28
     b52:	df 93       	push	r29
     b54:	cd b7       	in	r28, 0x3d	; 61
     b56:	de b7       	in	r29, 0x3e	; 62
     b58:	62 97       	sbiw	r28, 0x12	; 18
     b5a:	0f b6       	in	r0, 0x3f	; 63
     b5c:	f8 94       	cli
     b5e:	de bf       	out	0x3e, r29	; 62
     b60:	0f be       	out	0x3f, r0	; 63
     b62:	cd bf       	out	0x3d, r28	; 61
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     b6a:	44 e2       	ldi	r20, 0x24	; 36
     b6c:	51 e0       	ldi	r21, 0x01	; 1
     b6e:	60 e0       	ldi	r22, 0x00	; 0
     b70:	80 e0       	ldi	r24, 0x00	; 0
     b72:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     b76:	2f ef       	ldi	r18, 0xFF	; 255
     b78:	44 e3       	ldi	r20, 0x34	; 52
     b7a:	5c e0       	ldi	r21, 0x0C	; 12
     b7c:	21 50       	subi	r18, 0x01	; 1
     b7e:	40 40       	sbci	r20, 0x00	; 0
     b80:	50 40       	sbci	r21, 0x00	; 0
     b82:	e1 f7       	brne	.-8      	; 0xb7c <setOngoingTime+0x2e>
     b84:	00 c0       	rjmp	.+0      	; 0xb86 <setOngoingTime+0x38>
     b86:	00 00       	nop
     b88:	fe 01       	movw	r30, r28
     b8a:	31 96       	adiw	r30, 0x01	; 1
     b8c:	86 e0       	ldi	r24, 0x06	; 6
     b8e:	df 01       	movw	r26, r30
     b90:	1d 92       	st	X+, r1
     b92:	8a 95       	dec	r24
     b94:	e9 f7       	brne	.-6      	; 0xb90 <setOngoingTime+0x42>
     b96:	8c e0       	ldi	r24, 0x0C	; 12
     b98:	e2 ea       	ldi	r30, 0xA2	; 162
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	de 01       	movw	r26, r28
     b9e:	17 96       	adiw	r26, 0x07	; 7
     ba0:	01 90       	ld	r0, Z+
     ba2:	0d 92       	st	X+, r0
     ba4:	8a 95       	dec	r24
     ba6:	e1 f7       	brne	.-8      	; 0xba0 <setOngoingTime+0x52>
     ba8:	1f 92       	push	r1
     baa:	1f 92       	push	r1
     bac:	1f 92       	push	r1
     bae:	1f 92       	push	r1
     bb0:	1f 92       	push	r1
     bb2:	1f 92       	push	r1
     bb4:	1f 92       	push	r1
     bb6:	1f 92       	push	r1
     bb8:	1f 92       	push	r1
     bba:	1f 92       	push	r1
     bbc:	1f 92       	push	r1
     bbe:	1f 92       	push	r1
     bc0:	86 e3       	ldi	r24, 0x36	; 54
     bc2:	91 e0       	ldi	r25, 0x01	; 1
     bc4:	9f 93       	push	r25
     bc6:	8f 93       	push	r24
     bc8:	88 eb       	ldi	r24, 0xB8	; 184
     bca:	92 e0       	ldi	r25, 0x02	; 2
     bcc:	9f 93       	push	r25
     bce:	8f 93       	push	r24
     bd0:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
     bd4:	48 eb       	ldi	r20, 0xB8	; 184
     bd6:	52 e0       	ldi	r21, 0x02	; 2
     bd8:	61 e0       	ldi	r22, 0x01	; 1
     bda:	80 e0       	ldi	r24, 0x00	; 0
     bdc:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     be0:	4a e9       	ldi	r20, 0x9A	; 154
     be2:	51 e0       	ldi	r21, 0x01	; 1
     be4:	61 e0       	ldi	r22, 0x01	; 1
     be6:	80 e0       	ldi	r24, 0x00	; 0
     be8:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     bec:	8d e0       	ldi	r24, 0x0D	; 13
     bee:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     bf2:	0f b6       	in	r0, 0x3f	; 63
     bf4:	f8 94       	cli
     bf6:	de bf       	out	0x3e, r29	; 62
     bf8:	0f be       	out	0x3f, r0	; 63
     bfa:	cd bf       	out	0x3d, r28	; 61
     bfc:	10 e0       	ldi	r17, 0x00	; 0
     bfe:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
     c02:	21 2f       	mov	r18, r17
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	f9 01       	movw	r30, r18
     c08:	ee 0f       	add	r30, r30
     c0a:	ff 1f       	adc	r31, r31
     c0c:	a1 e0       	ldi	r26, 0x01	; 1
     c0e:	b0 e0       	ldi	r27, 0x00	; 0
     c10:	ac 0f       	add	r26, r28
     c12:	bd 1f       	adc	r27, r29
     c14:	ea 0f       	add	r30, r26
     c16:	fb 1f       	adc	r31, r27
     c18:	97 81       	ldd	r25, Z+7	; 0x07
     c1a:	98 17       	cp	r25, r24
     c1c:	08 f4       	brcc	.+2      	; 0xc20 <setOngoingTime+0xd2>
     c1e:	49 c0       	rjmp	.+146    	; 0xcb2 <setOngoingTime+0x164>
     c20:	fd 01       	movw	r30, r26
     c22:	e2 0f       	add	r30, r18
     c24:	f3 1f       	adc	r31, r19
     c26:	80 83       	st	Z, r24
     c28:	5e 81       	ldd	r21, Y+6	; 0x06
     c2a:	4d 81       	ldd	r20, Y+5	; 0x05
     c2c:	3c 81       	ldd	r19, Y+4	; 0x04
     c2e:	2b 81       	ldd	r18, Y+3	; 0x03
     c30:	9a 81       	ldd	r25, Y+2	; 0x02
     c32:	89 81       	ldd	r24, Y+1	; 0x01
     c34:	1f 92       	push	r1
     c36:	5f 93       	push	r21
     c38:	1f 92       	push	r1
     c3a:	4f 93       	push	r20
     c3c:	1f 92       	push	r1
     c3e:	3f 93       	push	r19
     c40:	1f 92       	push	r1
     c42:	2f 93       	push	r18
     c44:	1f 92       	push	r1
     c46:	9f 93       	push	r25
     c48:	1f 92       	push	r1
     c4a:	8f 93       	push	r24
     c4c:	86 e3       	ldi	r24, 0x36	; 54
     c4e:	91 e0       	ldi	r25, 0x01	; 1
     c50:	9f 93       	push	r25
     c52:	8f 93       	push	r24
     c54:	88 eb       	ldi	r24, 0xB8	; 184
     c56:	92 e0       	ldi	r25, 0x02	; 2
     c58:	9f 93       	push	r25
     c5a:	8f 93       	push	r24
     c5c:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
     c60:	48 eb       	ldi	r20, 0xB8	; 184
     c62:	52 e0       	ldi	r21, 0x02	; 2
     c64:	61 e0       	ldi	r22, 0x01	; 1
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     c6c:	1f 5f       	subi	r17, 0xFF	; 255
     c6e:	0f b6       	in	r0, 0x3f	; 63
     c70:	f8 94       	cli
     c72:	de bf       	out	0x3e, r29	; 62
     c74:	0f be       	out	0x3f, r0	; 63
     c76:	cd bf       	out	0x3d, r28	; 61
     c78:	16 30       	cpi	r17, 0x06	; 6
     c7a:	08 f0       	brcs	.+2      	; 0xc7e <setOngoingTime+0x130>
     c7c:	10 e0       	ldi	r17, 0x00	; 0
     c7e:	e1 2f       	mov	r30, r17
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	ee 0f       	add	r30, r30
     c84:	ff 1f       	adc	r31, r31
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	8c 0f       	add	r24, r28
     c8c:	9d 1f       	adc	r25, r29
     c8e:	e8 0f       	add	r30, r24
     c90:	f9 1f       	adc	r31, r25
     c92:	4a e9       	ldi	r20, 0x9A	; 154
     c94:	51 e0       	ldi	r21, 0x01	; 1
     c96:	61 e0       	ldi	r22, 0x01	; 1
     c98:	86 81       	ldd	r24, Z+6	; 0x06
     c9a:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     c9e:	9f ef       	ldi	r25, 0xFF	; 255
     ca0:	a1 ee       	ldi	r26, 0xE1	; 225
     ca2:	b4 e0       	ldi	r27, 0x04	; 4
     ca4:	91 50       	subi	r25, 0x01	; 1
     ca6:	a0 40       	sbci	r26, 0x00	; 0
     ca8:	b0 40       	sbci	r27, 0x00	; 0
     caa:	e1 f7       	brne	.-8      	; 0xca4 <setOngoingTime+0x156>
     cac:	00 c0       	rjmp	.+0      	; 0xcae <setOngoingTime+0x160>
     cae:	00 00       	nop
     cb0:	a6 cf       	rjmp	.-180    	; 0xbfe <setOngoingTime+0xb0>
     cb2:	8d 30       	cpi	r24, 0x0D	; 13
     cb4:	49 f1       	breq	.+82     	; 0xd08 <setOngoingTime+0x1ba>
     cb6:	8e 30       	cpi	r24, 0x0E	; 14
     cb8:	09 f0       	breq	.+2      	; 0xcbc <setOngoingTime+0x16e>
     cba:	a1 cf       	rjmp	.-190    	; 0xbfe <setOngoingTime+0xb0>
     cbc:	81 e0       	ldi	r24, 0x01	; 1
     cbe:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     cc2:	8c e0       	ldi	r24, 0x0C	; 12
     cc4:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     cc8:	45 ef       	ldi	r20, 0xF5	; 245
     cca:	50 e0       	ldi	r21, 0x00	; 0
     ccc:	60 e0       	ldi	r22, 0x00	; 0
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     cd4:	3d 81       	ldd	r19, Y+5	; 0x05
     cd6:	6e 81       	ldd	r22, Y+6	; 0x06
     cd8:	2b 81       	ldd	r18, Y+3	; 0x03
     cda:	5c 81       	ldd	r21, Y+4	; 0x04
     cdc:	99 81       	ldd	r25, Y+1	; 0x01
     cde:	8a 81       	ldd	r24, Y+2	; 0x02
     ce0:	33 0f       	add	r19, r19
     ce2:	43 2f       	mov	r20, r19
     ce4:	44 0f       	add	r20, r20
     ce6:	44 0f       	add	r20, r20
     ce8:	43 0f       	add	r20, r19
     cea:	46 0f       	add	r20, r22
     cec:	22 0f       	add	r18, r18
     cee:	62 2f       	mov	r22, r18
     cf0:	66 0f       	add	r22, r22
     cf2:	66 0f       	add	r22, r22
     cf4:	62 0f       	add	r22, r18
     cf6:	65 0f       	add	r22, r21
     cf8:	99 0f       	add	r25, r25
     cfa:	59 2f       	mov	r21, r25
     cfc:	55 0f       	add	r21, r21
     cfe:	55 0f       	add	r21, r21
     d00:	95 0f       	add	r25, r21
     d02:	89 0f       	add	r24, r25
     d04:	0e 94 3e 05 	call	0xa7c	; 0xa7c <setTime>
     d08:	62 96       	adiw	r28, 0x12	; 18
     d0a:	0f b6       	in	r0, 0x3f	; 63
     d0c:	f8 94       	cli
     d0e:	de bf       	out	0x3e, r29	; 62
     d10:	0f be       	out	0x3f, r0	; 63
     d12:	cd bf       	out	0x3d, r28	; 61
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	1f 91       	pop	r17
     d1a:	08 95       	ret

00000d1c <adddata>:
     d1c:	0f 93       	push	r16
     d1e:	1f 93       	push	r17
     d20:	cf 93       	push	r28
     d22:	df 93       	push	r29
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
     d28:	28 97       	sbiw	r28, 0x08	; 8
     d2a:	0f b6       	in	r0, 0x3f	; 63
     d2c:	f8 94       	cli
     d2e:	de bf       	out	0x3e, r29	; 62
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	cd bf       	out	0x3d, r28	; 61
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     d3a:	0e 94 43 02 	call	0x486	; 0x486 <addContactNo>
     d3e:	0e 94 a7 05 	call	0xb4e	; 0xb4e <setOngoingTime>
     d42:	45 e4       	ldi	r20, 0x45	; 69
     d44:	51 e0       	ldi	r21, 0x01	; 1
     d46:	60 e0       	ldi	r22, 0x00	; 0
     d48:	80 e0       	ldi	r24, 0x00	; 0
     d4a:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     d4e:	88 e0       	ldi	r24, 0x08	; 8
     d50:	ee ea       	ldi	r30, 0xAE	; 174
     d52:	f0 e0       	ldi	r31, 0x00	; 0
     d54:	de 01       	movw	r26, r28
     d56:	11 96       	adiw	r26, 0x01	; 1
     d58:	01 90       	ld	r0, Z+
     d5a:	0d 92       	st	X+, r0
     d5c:	8a 95       	dec	r24
     d5e:	e1 f7       	brne	.-8      	; 0xd58 <adddata+0x3c>
     d60:	45 e5       	ldi	r20, 0x55	; 85
     d62:	51 e0       	ldi	r21, 0x01	; 1
     d64:	61 e0       	ldi	r22, 0x01	; 1
     d66:	80 e0       	ldi	r24, 0x00	; 0
     d68:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     d6c:	00 e0       	ldi	r16, 0x00	; 0
     d6e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
     d72:	18 2f       	mov	r17, r24
     d74:	8f 30       	cpi	r24, 0x0F	; 15
     d76:	a9 f4       	brne	.+42     	; 0xda2 <adddata+0x86>
     d78:	0f 5f       	subi	r16, 0xFF	; 255
     d7a:	04 30       	cpi	r16, 0x04	; 4
     d7c:	08 f0       	brcs	.+2      	; 0xd80 <adddata+0x64>
     d7e:	00 e0       	ldi	r16, 0x00	; 0
     d80:	e0 2f       	mov	r30, r16
     d82:	f0 e0       	ldi	r31, 0x00	; 0
     d84:	ee 0f       	add	r30, r30
     d86:	ff 1f       	adc	r31, r31
     d88:	81 e0       	ldi	r24, 0x01	; 1
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	8c 0f       	add	r24, r28
     d8e:	9d 1f       	adc	r25, r29
     d90:	e8 0f       	add	r30, r24
     d92:	f9 1f       	adc	r31, r25
     d94:	40 81       	ld	r20, Z
     d96:	51 81       	ldd	r21, Z+1	; 0x01
     d98:	61 e0       	ldi	r22, 0x01	; 1
     d9a:	80 e0       	ldi	r24, 0x00	; 0
     d9c:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     da0:	02 c0       	rjmp	.+4      	; 0xda6 <adddata+0x8a>
     da2:	8d 30       	cpi	r24, 0x0D	; 13
     da4:	a1 f0       	breq	.+40     	; 0xdce <adddata+0xb2>
     da6:	1e 30       	cpi	r17, 0x0E	; 14
     da8:	11 f7       	brne	.-60     	; 0xd6e <adddata+0x52>
     daa:	81 e0       	ldi	r24, 0x01	; 1
     dac:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     db0:	44 e6       	ldi	r20, 0x64	; 100
     db2:	51 e0       	ldi	r21, 0x01	; 1
     db4:	60 e0       	ldi	r22, 0x00	; 0
     db6:	80 e0       	ldi	r24, 0x00	; 0
     db8:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     dbc:	9f ef       	ldi	r25, 0xFF	; 255
     dbe:	29 e6       	ldi	r18, 0x69	; 105
     dc0:	88 e1       	ldi	r24, 0x18	; 24
     dc2:	91 50       	subi	r25, 0x01	; 1
     dc4:	20 40       	sbci	r18, 0x00	; 0
     dc6:	80 40       	sbci	r24, 0x00	; 0
     dc8:	e1 f7       	brne	.-8      	; 0xdc2 <adddata+0xa6>
     dca:	00 c0       	rjmp	.+0      	; 0xdcc <adddata+0xb0>
     dcc:	00 00       	nop
     dce:	03 30       	cpi	r16, 0x03	; 3
     dd0:	20 f4       	brcc	.+8      	; 0xdda <adddata+0xbe>
     dd2:	80 2f       	mov	r24, r16
     dd4:	0e 94 54 03 	call	0x6a8	; 0x6a8 <Addtime>
     dd8:	04 c0       	rjmp	.+8      	; 0xde2 <adddata+0xc6>
     dda:	80 2f       	mov	r24, r16
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	0e 94 4f 04 	call	0x89e	; 0x89e <AddWeight>
     de2:	28 96       	adiw	r28, 0x08	; 8
     de4:	0f b6       	in	r0, 0x3f	; 63
     de6:	f8 94       	cli
     de8:	de bf       	out	0x3e, r29	; 62
     dea:	0f be       	out	0x3f, r0	; 63
     dec:	cd bf       	out	0x3d, r28	; 61
     dee:	df 91       	pop	r29
     df0:	cf 91       	pop	r28
     df2:	1f 91       	pop	r17
     df4:	0f 91       	pop	r16
     df6:	08 95       	ret

00000df8 <Readtime>:
     df8:	1f 93       	push	r17
     dfa:	cf 93       	push	r28
     dfc:	df 93       	push	r29
     dfe:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     e02:	60 e0       	ldi	r22, 0x00	; 0
     e04:	88 e6       	ldi	r24, 0x68	; 104
     e06:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     e0a:	80 e0       	ldi	r24, 0x00	; 0
     e0c:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     e10:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     e14:	61 e0       	ldi	r22, 0x01	; 1
     e16:	88 e6       	ldi	r24, 0x68	; 104
     e18:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     e1c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <TWIReadACK>
     e20:	18 2f       	mov	r17, r24
     e22:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <TWIReadACK>
     e26:	d8 2f       	mov	r29, r24
     e28:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <TWIReadNACK>
     e2c:	c8 2f       	mov	r28, r24
     e2e:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     e32:	81 2f       	mov	r24, r17
     e34:	82 95       	swap	r24
     e36:	8f 70       	andi	r24, 0x0F	; 15
     e38:	88 0f       	add	r24, r24
     e3a:	98 2f       	mov	r25, r24
     e3c:	99 0f       	add	r25, r25
     e3e:	99 0f       	add	r25, r25
     e40:	89 0f       	add	r24, r25
     e42:	1f 70       	andi	r17, 0x0F	; 15
     e44:	18 0f       	add	r17, r24
     e46:	10 93 cc 02 	sts	0x02CC, r17	; 0x8002cc <secC>
     e4a:	8d 2f       	mov	r24, r29
     e4c:	82 95       	swap	r24
     e4e:	8f 70       	andi	r24, 0x0F	; 15
     e50:	88 0f       	add	r24, r24
     e52:	98 2f       	mov	r25, r24
     e54:	99 0f       	add	r25, r25
     e56:	99 0f       	add	r25, r25
     e58:	89 0f       	add	r24, r25
     e5a:	df 70       	andi	r29, 0x0F	; 15
     e5c:	d8 0f       	add	r29, r24
     e5e:	d0 93 b5 02 	sts	0x02B5, r29	; 0x8002b5 <minC>
     e62:	8c 2f       	mov	r24, r28
     e64:	80 73       	andi	r24, 0x30	; 48
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	95 95       	asr	r25
     e6a:	87 95       	ror	r24
     e6c:	95 95       	asr	r25
     e6e:	87 95       	ror	r24
     e70:	95 95       	asr	r25
     e72:	87 95       	ror	r24
     e74:	95 95       	asr	r25
     e76:	87 95       	ror	r24
     e78:	88 0f       	add	r24, r24
     e7a:	98 2f       	mov	r25, r24
     e7c:	99 0f       	add	r25, r25
     e7e:	99 0f       	add	r25, r25
     e80:	89 0f       	add	r24, r25
     e82:	cf 70       	andi	r28, 0x0F	; 15
     e84:	8c 0f       	add	r24, r28
     e86:	80 93 b6 02 	sts	0x02B6, r24	; 0x8002b6 <hourC>
     e8a:	df 91       	pop	r29
     e8c:	cf 91       	pop	r28
     e8e:	1f 91       	pop	r17
     e90:	08 95       	ret

00000e92 <sendSMS>:

void sendSMS(char*sms){
     e92:	0f 93       	push	r16
     e94:	1f 93       	push	r17
     e96:	cf 93       	push	r28
     e98:	df 93       	push	r29
     e9a:	cd b7       	in	r28, 0x3d	; 61
     e9c:	de b7       	in	r29, 0x3e	; 62
     e9e:	e2 97       	sbiw	r28, 0x32	; 50
     ea0:	0f b6       	in	r0, 0x3f	; 63
     ea2:	f8 94       	cli
     ea4:	de bf       	out	0x3e, r29	; 62
     ea6:	0f be       	out	0x3f, r0	; 63
     ea8:	cd bf       	out	0x3d, r28	; 61
     eaa:	8c 01       	movw	r16, r24
	char str[50];
	//char *querry = "AT+CMGS=\"%s\"",str;
	//sprintf(str,"AT+CMGS=\"%s\"\r",readPhoneNo());
	
	char *contactNo;
	contactNo[0]="+";
     eac:	e0 e0       	ldi	r30, 0x00	; 0
     eae:	f0 e0       	ldi	r31, 0x00	; 0
     eb0:	8b e9       	ldi	r24, 0x9B	; 155
     eb2:	91 e0       	ldi	r25, 0x01	; 1
     eb4:	80 83       	st	Z, r24
	
/*	for (int i=0; i<11;i++)
	{
		contactNo[i+1] = eeprom_read_word((uint8_t*)phoneNoAddress[i]);
	}*/
	sprintf(str,"AT+CMGS=\"%s\"",contactNo);
     eb6:	ff 93       	push	r31
     eb8:	ef 93       	push	r30
     eba:	8d e9       	ldi	r24, 0x9D	; 157
     ebc:	91 e0       	ldi	r25, 0x01	; 1
     ebe:	9f 93       	push	r25
     ec0:	8f 93       	push	r24
     ec2:	ce 01       	movw	r24, r28
     ec4:	01 96       	adiw	r24, 0x01	; 1
     ec6:	9f 93       	push	r25
     ec8:	8f 93       	push	r24
     eca:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
	
	PORTA|=(1<<7);// buzzer
     ece:	8b b3       	in	r24, 0x1b	; 27
     ed0:	80 68       	ori	r24, 0x80	; 128
     ed2:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ed4:	2f ef       	ldi	r18, 0xFF	; 255
     ed6:	84 e3       	ldi	r24, 0x34	; 52
     ed8:	9c e0       	ldi	r25, 0x0C	; 12
     eda:	21 50       	subi	r18, 0x01	; 1
     edc:	80 40       	sbci	r24, 0x00	; 0
     ede:	90 40       	sbci	r25, 0x00	; 0
     ee0:	e1 f7       	brne	.-8      	; 0xeda <sendSMS+0x48>
     ee2:	00 c0       	rjmp	.+0      	; 0xee4 <sendSMS+0x52>
     ee4:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln("AT");
     ee6:	8a ea       	ldi	r24, 0xAA	; 170
     ee8:	91 e0       	ldi	r25, 0x01	; 1
     eea:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <USART_TxStringln>
     eee:	2f ef       	ldi	r18, 0xFF	; 255
     ef0:	84 e3       	ldi	r24, 0x34	; 52
     ef2:	9c e0       	ldi	r25, 0x0C	; 12
     ef4:	21 50       	subi	r18, 0x01	; 1
     ef6:	80 40       	sbci	r24, 0x00	; 0
     ef8:	90 40       	sbci	r25, 0x00	; 0
     efa:	e1 f7       	brne	.-8      	; 0xef4 <sendSMS+0x62>
     efc:	00 c0       	rjmp	.+0      	; 0xefe <sendSMS+0x6c>
     efe:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln("AT");
     f00:	8a ea       	ldi	r24, 0xAA	; 170
     f02:	91 e0       	ldi	r25, 0x01	; 1
     f04:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <USART_TxStringln>
     f08:	2f ef       	ldi	r18, 0xFF	; 255
     f0a:	84 e3       	ldi	r24, 0x34	; 52
     f0c:	9c e0       	ldi	r25, 0x0C	; 12
     f0e:	21 50       	subi	r18, 0x01	; 1
     f10:	80 40       	sbci	r24, 0x00	; 0
     f12:	90 40       	sbci	r25, 0x00	; 0
     f14:	e1 f7       	brne	.-8      	; 0xf0e <sendSMS+0x7c>
     f16:	00 c0       	rjmp	.+0      	; 0xf18 <sendSMS+0x86>
     f18:	00 00       	nop
	_delay_ms(500);
	//USART_TxStringln(str);
	USART_TxStringln("AT+CMGS=\"+3145684538546\"");
     f1a:	8d ea       	ldi	r24, 0xAD	; 173
     f1c:	91 e0       	ldi	r25, 0x01	; 1
     f1e:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <USART_TxStringln>
     f22:	2f ef       	ldi	r18, 0xFF	; 255
     f24:	84 e3       	ldi	r24, 0x34	; 52
     f26:	9c e0       	ldi	r25, 0x0C	; 12
     f28:	21 50       	subi	r18, 0x01	; 1
     f2a:	80 40       	sbci	r24, 0x00	; 0
     f2c:	90 40       	sbci	r25, 0x00	; 0
     f2e:	e1 f7       	brne	.-8      	; 0xf28 <sendSMS+0x96>
     f30:	00 c0       	rjmp	.+0      	; 0xf32 <sendSMS+0xa0>
     f32:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln("AT+CMGF=1");
     f34:	86 ec       	ldi	r24, 0xC6	; 198
     f36:	91 e0       	ldi	r25, 0x01	; 1
     f38:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <USART_TxStringln>
     f3c:	2f ef       	ldi	r18, 0xFF	; 255
     f3e:	84 e3       	ldi	r24, 0x34	; 52
     f40:	9c e0       	ldi	r25, 0x0C	; 12
     f42:	21 50       	subi	r18, 0x01	; 1
     f44:	80 40       	sbci	r24, 0x00	; 0
     f46:	90 40       	sbci	r25, 0x00	; 0
     f48:	e1 f7       	brne	.-8      	; 0xf42 <sendSMS+0xb0>
     f4a:	00 c0       	rjmp	.+0      	; 0xf4c <sendSMS+0xba>
     f4c:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln(sms);
     f4e:	c8 01       	movw	r24, r16
     f50:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <USART_TxStringln>
     f54:	2f ef       	ldi	r18, 0xFF	; 255
     f56:	84 e3       	ldi	r24, 0x34	; 52
     f58:	9c e0       	ldi	r25, 0x0C	; 12
     f5a:	21 50       	subi	r18, 0x01	; 1
     f5c:	80 40       	sbci	r24, 0x00	; 0
     f5e:	90 40       	sbci	r25, 0x00	; 0
     f60:	e1 f7       	brne	.-8      	; 0xf5a <sendSMS+0xc8>
     f62:	00 c0       	rjmp	.+0      	; 0xf64 <sendSMS+0xd2>
     f64:	00 00       	nop
	_delay_ms(500);
	USART_Transmit(26);
     f66:	8a e1       	ldi	r24, 0x1A	; 26
     f68:	0e 94 cc 01 	call	0x398	; 0x398 <USART_Transmit>
	PORTA&=~(1<<7);
     f6c:	8b b3       	in	r24, 0x1b	; 27
     f6e:	8f 77       	andi	r24, 0x7F	; 127
     f70:	8b bb       	out	0x1b, r24	; 27
}
     f72:	0f 90       	pop	r0
     f74:	0f 90       	pop	r0
     f76:	0f 90       	pop	r0
     f78:	0f 90       	pop	r0
     f7a:	0f 90       	pop	r0
     f7c:	0f 90       	pop	r0
     f7e:	e2 96       	adiw	r28, 0x32	; 50
     f80:	0f b6       	in	r0, 0x3f	; 63
     f82:	f8 94       	cli
     f84:	de bf       	out	0x3e, r29	; 62
     f86:	0f be       	out	0x3f, r0	; 63
     f88:	cd bf       	out	0x3d, r28	; 61
     f8a:	df 91       	pop	r29
     f8c:	cf 91       	pop	r28
     f8e:	1f 91       	pop	r17
     f90:	0f 91       	pop	r16
     f92:	08 95       	ret

00000f94 <__vector_10>:

ISR(TIMER0_COMP_vect){//ultrasonic
     f94:	1f 92       	push	r1
     f96:	0f 92       	push	r0
     f98:	0f b6       	in	r0, 0x3f	; 63
     f9a:	0f 92       	push	r0
     f9c:	11 24       	eor	r1, r1
     f9e:	8f 93       	push	r24
     fa0:	9f 93       	push	r25
	TimerCal++;
     fa2:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <TimerCal>
     fa6:	90 91 a3 02 	lds	r25, 0x02A3	; 0x8002a3 <TimerCal+0x1>
     faa:	01 96       	adiw	r24, 0x01	; 1
     fac:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <TimerCal+0x1>
     fb0:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <TimerCal>
	TCNT0=0;
     fb4:	12 be       	out	0x32, r1	; 50
	
}
     fb6:	9f 91       	pop	r25
     fb8:	8f 91       	pop	r24
     fba:	0f 90       	pop	r0
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	0f 90       	pop	r0
     fc0:	1f 90       	pop	r1
     fc2:	18 95       	reti

00000fc4 <loadCellRead>:

float loadCellRead(){
     fc4:	cf 92       	push	r12
     fc6:	df 92       	push	r13
     fc8:	ef 92       	push	r14
     fca:	ff 92       	push	r15
	hx711H=0;hx711L=0;  //clear variables
     fcc:	10 92 b2 02 	sts	0x02B2, r1	; 0x8002b2 <hx711H>
     fd0:	10 92 b1 02 	sts	0x02B1, r1	; 0x8002b1 <hx711L+0x1>
     fd4:	10 92 b0 02 	sts	0x02B0, r1	; 0x8002b0 <hx711L>
	for(uint8_t i=0;i<8;i++){  // Load cell data high 8 bits
     fd8:	80 e0       	ldi	r24, 0x00	; 0
     fda:	33 c0       	rjmp	.+102    	; 0x1042 <loadCellRead+0x7e>
		PORTD|=(1<<Load_clk); //Clock pin high
     fdc:	92 b3       	in	r25, 0x12	; 18
     fde:	90 62       	ori	r25, 0x20	; 32
     fe0:	92 bb       	out	0x12, r25	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     fe2:	9a e1       	ldi	r25, 0x1A	; 26
     fe4:	9a 95       	dec	r25
     fe6:	f1 f7       	brne	.-4      	; 0xfe4 <loadCellRead+0x20>
     fe8:	00 c0       	rjmp	.+0      	; 0xfea <loadCellRead+0x26>
		_delay_us(10);
		if ((PIND&(1<<Load_data))>>Load_data)  //read data pin
     fea:	84 9b       	sbis	0x10, 4	; 16
     fec:	11 c0       	rjmp	.+34     	; 0x1010 <loadCellRead+0x4c>
		{hx711H|=(1<<(7-i));//set hx 711 varible
     fee:	47 e0       	ldi	r20, 0x07	; 7
     ff0:	50 e0       	ldi	r21, 0x00	; 0
     ff2:	48 1b       	sub	r20, r24
     ff4:	51 09       	sbc	r21, r1
     ff6:	21 e0       	ldi	r18, 0x01	; 1
     ff8:	30 e0       	ldi	r19, 0x00	; 0
     ffa:	02 c0       	rjmp	.+4      	; 0x1000 <loadCellRead+0x3c>
     ffc:	22 0f       	add	r18, r18
     ffe:	33 1f       	adc	r19, r19
    1000:	4a 95       	dec	r20
    1002:	e2 f7       	brpl	.-8      	; 0xffc <loadCellRead+0x38>
    1004:	90 91 b2 02 	lds	r25, 0x02B2	; 0x8002b2 <hx711H>
    1008:	29 2b       	or	r18, r25
    100a:	20 93 b2 02 	sts	0x02B2, r18	; 0x8002b2 <hx711H>
    100e:	11 c0       	rjmp	.+34     	; 0x1032 <loadCellRead+0x6e>
		}
		else
		{hx711H&=~(1<<(7-i));
    1010:	47 e0       	ldi	r20, 0x07	; 7
    1012:	50 e0       	ldi	r21, 0x00	; 0
    1014:	48 1b       	sub	r20, r24
    1016:	51 09       	sbc	r21, r1
    1018:	21 e0       	ldi	r18, 0x01	; 1
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	02 c0       	rjmp	.+4      	; 0x1022 <loadCellRead+0x5e>
    101e:	22 0f       	add	r18, r18
    1020:	33 1f       	adc	r19, r19
    1022:	4a 95       	dec	r20
    1024:	e2 f7       	brpl	.-8      	; 0x101e <loadCellRead+0x5a>
    1026:	20 95       	com	r18
    1028:	90 91 b2 02 	lds	r25, 0x02B2	; 0x8002b2 <hx711H>
    102c:	29 23       	and	r18, r25
    102e:	20 93 b2 02 	sts	0x02B2, r18	; 0x8002b2 <hx711H>
		}
		PORTD&=~(1<<Load_clk); //Clock pin low
    1032:	92 b3       	in	r25, 0x12	; 18
    1034:	9f 7d       	andi	r25, 0xDF	; 223
    1036:	92 bb       	out	0x12, r25	; 18
    1038:	9d e0       	ldi	r25, 0x0D	; 13
    103a:	9a 95       	dec	r25
    103c:	f1 f7       	brne	.-4      	; 0x103a <loadCellRead+0x76>
    103e:	00 00       	nop
	
}

float loadCellRead(){
	hx711H=0;hx711L=0;  //clear variables
	for(uint8_t i=0;i<8;i++){  // Load cell data high 8 bits
    1040:	8f 5f       	subi	r24, 0xFF	; 255
    1042:	88 30       	cpi	r24, 0x08	; 8
    1044:	58 f2       	brcs	.-106    	; 0xfdc <loadCellRead+0x18>
    1046:	80 e0       	ldi	r24, 0x00	; 0
    1048:	3e c0       	rjmp	.+124    	; 0x10c6 <loadCellRead+0x102>
		_delay_us(5);
	}
	
	
	for(uint8_t i=0;i<16;i++){ // Load cell data low 16 bits
		PORTD|=(1<<Load_clk); //Clock pin high
    104a:	92 b3       	in	r25, 0x12	; 18
    104c:	90 62       	ori	r25, 0x20	; 32
    104e:	92 bb       	out	0x12, r25	; 18
    1050:	9a e1       	ldi	r25, 0x1A	; 26
    1052:	9a 95       	dec	r25
    1054:	f1 f7       	brne	.-4      	; 0x1052 <loadCellRead+0x8e>
    1056:	00 c0       	rjmp	.+0      	; 0x1058 <loadCellRead+0x94>
		_delay_us(10);
		if ((PIND&(1<<Load_data))>>Load_data) //read data pin
    1058:	84 9b       	sbis	0x10, 4	; 16
    105a:	16 c0       	rjmp	.+44     	; 0x1088 <loadCellRead+0xc4>
		{hx711L|=(1<<(15-i));
    105c:	4f e0       	ldi	r20, 0x0F	; 15
    105e:	50 e0       	ldi	r21, 0x00	; 0
    1060:	48 1b       	sub	r20, r24
    1062:	51 09       	sbc	r21, r1
    1064:	21 e0       	ldi	r18, 0x01	; 1
    1066:	30 e0       	ldi	r19, 0x00	; 0
    1068:	02 c0       	rjmp	.+4      	; 0x106e <loadCellRead+0xaa>
    106a:	22 0f       	add	r18, r18
    106c:	33 1f       	adc	r19, r19
    106e:	4a 95       	dec	r20
    1070:	e2 f7       	brpl	.-8      	; 0x106a <loadCellRead+0xa6>
    1072:	40 91 b0 02 	lds	r20, 0x02B0	; 0x8002b0 <hx711L>
    1076:	50 91 b1 02 	lds	r21, 0x02B1	; 0x8002b1 <hx711L+0x1>
    107a:	24 2b       	or	r18, r20
    107c:	35 2b       	or	r19, r21
    107e:	30 93 b1 02 	sts	0x02B1, r19	; 0x8002b1 <hx711L+0x1>
    1082:	20 93 b0 02 	sts	0x02B0, r18	; 0x8002b0 <hx711L>
    1086:	17 c0       	rjmp	.+46     	; 0x10b6 <loadCellRead+0xf2>
		}
		else
		{hx711L&=~(1<<(15-i));
    1088:	4f e0       	ldi	r20, 0x0F	; 15
    108a:	50 e0       	ldi	r21, 0x00	; 0
    108c:	48 1b       	sub	r20, r24
    108e:	51 09       	sbc	r21, r1
    1090:	21 e0       	ldi	r18, 0x01	; 1
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	02 c0       	rjmp	.+4      	; 0x109a <loadCellRead+0xd6>
    1096:	22 0f       	add	r18, r18
    1098:	33 1f       	adc	r19, r19
    109a:	4a 95       	dec	r20
    109c:	e2 f7       	brpl	.-8      	; 0x1096 <loadCellRead+0xd2>
    109e:	20 95       	com	r18
    10a0:	30 95       	com	r19
    10a2:	40 91 b0 02 	lds	r20, 0x02B0	; 0x8002b0 <hx711L>
    10a6:	50 91 b1 02 	lds	r21, 0x02B1	; 0x8002b1 <hx711L+0x1>
    10aa:	24 23       	and	r18, r20
    10ac:	35 23       	and	r19, r21
    10ae:	30 93 b1 02 	sts	0x02B1, r19	; 0x8002b1 <hx711L+0x1>
    10b2:	20 93 b0 02 	sts	0x02B0, r18	; 0x8002b0 <hx711L>
		}
		PORTD&=~(1<<Load_clk); //Clock pin low
    10b6:	92 b3       	in	r25, 0x12	; 18
    10b8:	9f 7d       	andi	r25, 0xDF	; 223
    10ba:	92 bb       	out	0x12, r25	; 18
    10bc:	9d e0       	ldi	r25, 0x0D	; 13
    10be:	9a 95       	dec	r25
    10c0:	f1 f7       	brne	.-4      	; 0x10be <loadCellRead+0xfa>
    10c2:	00 00       	nop
		PORTD&=~(1<<Load_clk); //Clock pin low
		_delay_us(5);
	}
	
	
	for(uint8_t i=0;i<16;i++){ // Load cell data low 16 bits
    10c4:	8f 5f       	subi	r24, 0xFF	; 255
    10c6:	80 31       	cpi	r24, 0x10	; 16
    10c8:	08 f4       	brcc	.+2      	; 0x10cc <loadCellRead+0x108>
    10ca:	bf cf       	rjmp	.-130    	; 0x104a <loadCellRead+0x86>
		}
		PORTD&=~(1<<Load_clk); //Clock pin low
		_delay_us(5);
	}
	
	hx711L=hx711L>>1; //shift bits
    10cc:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <hx711L>
    10d0:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <hx711L+0x1>
    10d4:	96 95       	lsr	r25
    10d6:	87 95       	ror	r24
    10d8:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <hx711L+0x1>
    10dc:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <hx711L>
	
	if (hx711H&1)  //bit setup
    10e0:	60 91 b2 02 	lds	r22, 0x02B2	; 0x8002b2 <hx711H>
    10e4:	60 ff       	sbrs	r22, 0
    10e6:	05 c0       	rjmp	.+10     	; 0x10f2 <loadCellRead+0x12e>
	{hx711L|=(1<<15);
    10e8:	90 68       	ori	r25, 0x80	; 128
    10ea:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <hx711L+0x1>
    10ee:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <hx711L>
	}
	else
	{hx711L&=~(1<<15);
	}
	hx711H=hx711H>>1;
    10f2:	66 95       	lsr	r22
    10f4:	60 93 b2 02 	sts	0x02B2, r22	; 0x8002b2 <hx711H>
	
	return (hx711H*(65536/18029.6))+hx711L/18029.6; //load cell calibration
    10f8:	70 e0       	ldi	r23, 0x00	; 0
    10fa:	80 e0       	ldi	r24, 0x00	; 0
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	0e 94 3f 0c 	call	0x187e	; 0x187e <__floatsisf>
    1102:	24 e6       	ldi	r18, 0x64	; 100
    1104:	32 ea       	ldi	r19, 0xA2	; 162
    1106:	48 e6       	ldi	r20, 0x68	; 104
    1108:	50 e4       	ldi	r21, 0x40	; 64
    110a:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
    110e:	6b 01       	movw	r12, r22
    1110:	7c 01       	movw	r14, r24
    1112:	60 91 b0 02 	lds	r22, 0x02B0	; 0x8002b0 <hx711L>
    1116:	70 91 b1 02 	lds	r23, 0x02B1	; 0x8002b1 <hx711L+0x1>
    111a:	80 e0       	ldi	r24, 0x00	; 0
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	0e 94 3d 0c 	call	0x187a	; 0x187a <__floatunsisf>
    1122:	23 e3       	ldi	r18, 0x33	; 51
    1124:	3b ed       	ldi	r19, 0xDB	; 219
    1126:	4c e8       	ldi	r20, 0x8C	; 140
    1128:	56 e4       	ldi	r21, 0x46	; 70
    112a:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__divsf3>
    112e:	9b 01       	movw	r18, r22
    1130:	ac 01       	movw	r20, r24
    1132:	c7 01       	movw	r24, r14
    1134:	b6 01       	movw	r22, r12
    1136:	0e 94 30 0b 	call	0x1660	; 0x1660 <__addsf3>
}
    113a:	ff 90       	pop	r15
    113c:	ef 90       	pop	r14
    113e:	df 90       	pop	r13
    1140:	cf 90       	pop	r12
    1142:	08 95       	ret

00001144 <main>:
volatile uint16_t TimerCal=0;// variable for collect echo data
uint16_t ultraINT0=0;

int main(void)
{	/*ADC init part*/
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));   // prescaler 128
    1144:	86 b1       	in	r24, 0x06	; 6
    1146:	87 60       	ori	r24, 0x07	; 7
    1148:	86 b9       	out	0x06, r24	; 6
	ADMUX |= (1<<REFS0);					//external vcc
    114a:	87 b1       	in	r24, 0x07	; 7
    114c:	80 64       	ori	r24, 0x40	; 64
    114e:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADEN);                            // Turn on ADC
    1150:	86 b1       	in	r24, 0x06	; 6
    1152:	80 68       	ori	r24, 0x80	; 128
    1154:	86 b9       	out	0x06, r24	; 6
	DDRC|=(1<<7);//buzzer
    1156:	84 b3       	in	r24, 0x14	; 20
    1158:	80 68       	ori	r24, 0x80	; 128
    115a:	84 bb       	out	0x14, r24	; 20
	DDRC|=(1<<6);//lamp
    115c:	84 b3       	in	r24, 0x14	; 20
    115e:	80 64       	ori	r24, 0x40	; 64
    1160:	84 bb       	out	0x14, r24	; 20
	DDRD|=(1<<Load_clk); //Load cell clock pin
    1162:	81 b3       	in	r24, 0x11	; 17
    1164:	80 62       	ori	r24, 0x20	; 32
    1166:	81 bb       	out	0x11, r24	; 17
	PORTD&=~(1<<Load_clk);//Clock pin low
    1168:	82 b3       	in	r24, 0x12	; 18
    116a:	8f 7d       	andi	r24, 0xDF	; 223
    116c:	82 bb       	out	0x12, r24	; 18
	
	LcdInit();
    116e:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <LcdInit>
	USART_Init(9600);
    1172:	80 e8       	ldi	r24, 0x80	; 128
    1174:	95 e2       	ldi	r25, 0x25	; 37
    1176:	0e 94 b9 01 	call	0x372	; 0x372 <USART_Init>
	
	
	LcdSetCursor(4,0,"Welcome");
    117a:	40 ed       	ldi	r20, 0xD0	; 208
    117c:	51 e0       	ldi	r21, 0x01	; 1
    117e:	60 e0       	ldi	r22, 0x00	; 0
    1180:	84 e0       	ldi	r24, 0x04	; 4
    1182:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1186:	2f ef       	ldi	r18, 0xFF	; 255
    1188:	39 e6       	ldi	r19, 0x69	; 105
    118a:	88 e1       	ldi	r24, 0x18	; 24
    118c:	21 50       	subi	r18, 0x01	; 1
    118e:	30 40       	sbci	r19, 0x00	; 0
    1190:	80 40       	sbci	r24, 0x00	; 0
    1192:	e1 f7       	brne	.-8      	; 0x118c <main+0x48>
    1194:	00 c0       	rjmp	.+0      	; 0x1196 <main+0x52>
    1196:	00 00       	nop
	_delay_ms(1000);
	LcdCommand(LCD_CLEARDISPLAY);
    1198:	81 e0       	ldi	r24, 0x01	; 1
    119a:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
	feedingWeight=eeprom_read_word((uint16_t*)WeightDataAdress);
    119e:	86 e0       	ldi	r24, 0x06	; 6
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	0e 94 08 13 	call	0x2610	; 0x2610 <eeprom_read_word>
    11a6:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <feedingWeight+0x1>
    11aa:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <feedingWeight>
	for(uint8_t i=0;i<3;i++){
    11ae:	10 e0       	ldi	r17, 0x00	; 0
    11b0:	15 c0       	rjmp	.+42     	; 0x11dc <main+0x98>
		feedingTimes[i][0]=eeprom_read_byte((uint8_t*)feedingdataAdress[i]);
    11b2:	c1 2f       	mov	r28, r17
    11b4:	d0 e0       	ldi	r29, 0x00	; 0
    11b6:	fe 01       	movw	r30, r28
    11b8:	e5 59       	subi	r30, 0x95	; 149
    11ba:	ff 4f       	sbci	r31, 0xFF	; 255
    11bc:	e0 80       	ld	r14, Z
    11be:	f1 2c       	mov	r15, r1
    11c0:	c7 01       	movw	r24, r14
    11c2:	0e 94 00 13 	call	0x2600	; 0x2600 <eeprom_read_byte>
    11c6:	cc 0f       	add	r28, r28
    11c8:	dd 1f       	adc	r29, r29
    11ca:	ca 55       	subi	r28, 0x5A	; 90
    11cc:	dd 4f       	sbci	r29, 0xFD	; 253
    11ce:	88 83       	st	Y, r24
		feedingTimes[i][1]=eeprom_read_byte((uint8_t*)feedingdataAdress[i]+1);
    11d0:	c7 01       	movw	r24, r14
    11d2:	01 96       	adiw	r24, 0x01	; 1
    11d4:	0e 94 00 13 	call	0x2600	; 0x2600 <eeprom_read_byte>
    11d8:	89 83       	std	Y+1, r24	; 0x01
	
	LcdSetCursor(4,0,"Welcome");
	_delay_ms(1000);
	LcdCommand(LCD_CLEARDISPLAY);
	feedingWeight=eeprom_read_word((uint16_t*)WeightDataAdress);
	for(uint8_t i=0;i<3;i++){
    11da:	1f 5f       	subi	r17, 0xFF	; 255
    11dc:	13 30       	cpi	r17, 0x03	; 3
    11de:	48 f3       	brcs	.-46     	; 0x11b2 <main+0x6e>
	
//	sprintf(lcddata,"%u:%u %u:%u ",feedingTimes[0][0],feedingTimes[0][1],feedingTimes[1][0],feedingTimes[1][1]);
//	LcdSetCursor(0,0,lcddata);
//	_delay_ms(3000);
	
	DDRD|=(1<<3); //D4 as output
    11e0:	81 b3       	in	r24, 0x11	; 17
    11e2:	88 60       	ori	r24, 0x08	; 8
    11e4:	81 bb       	out	0x11, r24	; 17
	TCCR0|=(1<<WGM01);//Enable Compare match mode
    11e6:	83 b7       	in	r24, 0x33	; 51
    11e8:	88 60       	ori	r24, 0x08	; 8
    11ea:	83 bf       	out	0x33, r24	; 51
	TCCR0|=(1<<CS11);//Start timer  prescaler =8
    11ec:	83 b7       	in	r24, 0x33	; 51
    11ee:	82 60       	ori	r24, 0x02	; 2
    11f0:	83 bf       	out	0x33, r24	; 51
	TCNT0=0;
    11f2:	12 be       	out	0x32, r1	; 50
	OCR0=10;
    11f4:	8a e0       	ldi	r24, 0x0A	; 10
    11f6:	8c bf       	out	0x3c, r24	; 60
	/*register value= time*(clock speed/prescale)
	register value=0.000001*(8000000/1)
	register value=10*/
	TIMSK|=(1<<OCIE0);//enable timer Compare inturrept
    11f8:	89 b7       	in	r24, 0x39	; 57
    11fa:	82 60       	ori	r24, 0x02	; 2
    11fc:	89 bf       	out	0x39, r24	; 57
	sei();	
    11fe:	78 94       	sei
	LcdSetCursor(0,0,lcddata);*/
	
	
	
	while(1){
		LcdSetCursor(0,0,"Need data Enter?");
    1200:	48 ed       	ldi	r20, 0xD8	; 216
    1202:	51 e0       	ldi	r21, 0x01	; 1
    1204:	60 e0       	ldi	r22, 0x00	; 0
    1206:	80 e0       	ldi	r24, 0x00	; 0
    1208:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
		LcdSetCursor(0,1,"Yes-1 No-2");
    120c:	49 ee       	ldi	r20, 0xE9	; 233
    120e:	51 e0       	ldi	r21, 0x01	; 1
    1210:	61 e0       	ldi	r22, 0x01	; 1
    1212:	80 e0       	ldi	r24, 0x00	; 0
    1214:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
		
		uint8_t key=getkeyNum();
    1218:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
    121c:	c8 2f       	mov	r28, r24
		if (key==1)
    121e:	81 30       	cpi	r24, 0x01	; 1
    1220:	11 f4       	brne	.+4      	; 0x1226 <main+0xe2>
		{adddata();
    1222:	0e 94 8e 06 	call	0xd1c	; 0xd1c <adddata>
			
		}
		
		if (key==2)
    1226:	c2 30       	cpi	r28, 0x02	; 2
    1228:	59 f7       	brne	.-42     	; 0x1200 <main+0xbc>
		{	LcdCommand(LCD_CLEARDISPLAY);
    122a:	81 e0       	ldi	r24, 0x01	; 1
    122c:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
			break;
		}
	}
	DDRD|=(1<<6);
    1230:	81 b3       	in	r24, 0x11	; 17
    1232:	80 64       	ori	r24, 0x40	; 64
    1234:	81 bb       	out	0x11, r24	; 17
	PORTD|=(1<<6);
    1236:	82 b3       	in	r24, 0x12	; 18
    1238:	80 64       	ori	r24, 0x40	; 64
    123a:	82 bb       	out	0x12, r24	; 18
	setTime(8,29,59);
    123c:	4b e3       	ldi	r20, 0x3B	; 59
    123e:	6d e1       	ldi	r22, 0x1D	; 29
    1240:	88 e0       	ldi	r24, 0x08	; 8
    1242:	0e 94 3e 05 	call	0xa7c	; 0xa7c <setTime>
	
	
//#######################################################################################	
	while (1)
	{	
		Readtime();
    1246:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <Readtime>
		sprintf(lcddata,"%02u:%02u:%02u",hourC,minC,secC);
    124a:	80 91 cc 02 	lds	r24, 0x02CC	; 0x8002cc <secC>
    124e:	1f 92       	push	r1
    1250:	8f 93       	push	r24
    1252:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <minC>
    1256:	1f 92       	push	r1
    1258:	8f 93       	push	r24
    125a:	80 91 b6 02 	lds	r24, 0x02B6	; 0x8002b6 <hourC>
    125e:	1f 92       	push	r1
    1260:	8f 93       	push	r24
    1262:	84 ef       	ldi	r24, 0xF4	; 244
    1264:	91 e0       	ldi	r25, 0x01	; 1
    1266:	9f 93       	push	r25
    1268:	8f 93       	push	r24
    126a:	88 eb       	ldi	r24, 0xB8	; 184
    126c:	92 e0       	ldi	r25, 0x02	; 2
    126e:	9f 93       	push	r25
    1270:	8f 93       	push	r24
    1272:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
		LcdSetCursor(4,0,lcddata);
    1276:	48 eb       	ldi	r20, 0xB8	; 184
    1278:	52 e0       	ldi	r21, 0x02	; 2
    127a:	60 e0       	ldi	r22, 0x00	; 0
    127c:	84 e0       	ldi	r24, 0x04	; 4
    127e:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
		
		ADMUX = (1<<REFS0);			//external vcc
    1282:	80 e4       	ldi	r24, 0x40	; 64
    1284:	87 b9       	out	0x07, r24	; 7
		ph=ReadADC(0)*5.0/1024;
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <ReadADC>
    128c:	bc 01       	movw	r22, r24
    128e:	80 e0       	ldi	r24, 0x00	; 0
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	0e 94 3d 0c 	call	0x187a	; 0x187a <__floatunsisf>
    1296:	20 e0       	ldi	r18, 0x00	; 0
    1298:	30 e0       	ldi	r19, 0x00	; 0
    129a:	40 ea       	ldi	r20, 0xA0	; 160
    129c:	50 e4       	ldi	r21, 0x40	; 64
    129e:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
    12a2:	20 e0       	ldi	r18, 0x00	; 0
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	40 e8       	ldi	r20, 0x80	; 128
    12a8:	5a e3       	ldi	r21, 0x3A	; 58
    12aa:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
		ph=ph*3.5;
    12ae:	20 e0       	ldi	r18, 0x00	; 0
    12b0:	30 e0       	ldi	r19, 0x00	; 0
    12b2:	40 e6       	ldi	r20, 0x60	; 96
    12b4:	50 e4       	ldi	r21, 0x40	; 64
    12b6:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
    12ba:	60 93 ac 02 	sts	0x02AC, r22	; 0x8002ac <ph>
    12be:	70 93 ad 02 	sts	0x02AD, r23	; 0x8002ad <ph+0x1>
    12c2:	80 93 ae 02 	sts	0x02AE, r24	; 0x8002ae <ph+0x2>
    12c6:	90 93 af 02 	sts	0x02AF, r25	; 0x8002af <ph+0x3>
		
		ADMUX = (1<<REFS0)|(1<<REFS1);					//internal 2.56 v ref
    12ca:	80 ec       	ldi	r24, 0xC0	; 192
    12cc:	87 b9       	out	0x07, r24	; 7
		uint16_t TempReading=(ReadADC(1)*0.25024438); //calibrated number
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <ReadADC>
    12d4:	bc 01       	movw	r22, r24
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	0e 94 3d 0c 	call	0x187a	; 0x187a <__floatunsisf>
    12de:	28 e0       	ldi	r18, 0x08	; 8
    12e0:	30 e2       	ldi	r19, 0x20	; 32
    12e2:	40 e8       	ldi	r20, 0x80	; 128
    12e4:	5e e3       	ldi	r21, 0x3E	; 62
    12e6:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
    12ea:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fixunssfsi>
    12ee:	16 2f       	mov	r17, r22
    12f0:	07 2f       	mov	r16, r23
    12f2:	c6 2f       	mov	r28, r22
    12f4:	d0 2f       	mov	r29, r16
		
		
		
		PORTD&=~(1<<3);//TRIG pin low
    12f6:	82 b3       	in	r24, 0x12	; 18
    12f8:	87 7f       	andi	r24, 0xF7	; 247
    12fa:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    12fc:	f5 e8       	ldi	r31, 0x85	; 133
    12fe:	fa 95       	dec	r31
    1300:	f1 f7       	brne	.-4      	; 0x12fe <main+0x1ba>
    1302:	00 00       	nop
		_delay_us(50);//wait 50 micro sec
		PORTD|=(1<<3);//TRIG pin high
    1304:	82 b3       	in	r24, 0x12	; 18
    1306:	88 60       	ori	r24, 0x08	; 8
    1308:	82 bb       	out	0x12, r24	; 18
    130a:	25 e8       	ldi	r18, 0x85	; 133
    130c:	2a 95       	dec	r18
    130e:	f1 f7       	brne	.-4      	; 0x130c <main+0x1c8>
    1310:	00 00       	nop
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
    1312:	82 b3       	in	r24, 0x12	; 18
    1314:	87 7f       	andi	r24, 0xF7	; 247
    1316:	82 bb       	out	0x12, r24	; 18
		while(!(PIND&(1<<2)))//wait for pulse
    1318:	8d b7       	in	r24, 0x3d	; 61
    131a:	9e b7       	in	r25, 0x3e	; 62
    131c:	0a 96       	adiw	r24, 0x0a	; 10
    131e:	0f b6       	in	r0, 0x3f	; 63
    1320:	f8 94       	cli
    1322:	9e bf       	out	0x3e, r25	; 62
    1324:	0f be       	out	0x3f, r0	; 63
    1326:	8d bf       	out	0x3d, r24	; 61
    1328:	04 c0       	rjmp	.+8      	; 0x1332 <main+0x1ee>
		TimerCal=0;//rest timer
    132a:	10 92 a3 02 	sts	0x02A3, r1	; 0x8002a3 <TimerCal+0x1>
    132e:	10 92 a2 02 	sts	0x02A2, r1	; 0x8002a2 <TimerCal>
		PORTD&=~(1<<3);//TRIG pin low
		_delay_us(50);//wait 50 micro sec
		PORTD|=(1<<3);//TRIG pin high
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
		while(!(PIND&(1<<2)))//wait for pulse
    1332:	82 9b       	sbis	0x10, 2	; 16
    1334:	fa cf       	rjmp	.-12     	; 0x132a <main+0x1e6>
    1336:	14 c0       	rjmp	.+40     	; 0x1360 <main+0x21c>
		TimerCal=0;//rest timer
		while((PIND&(1<<2)))////wait for pulse down
		ultraINT0=TimerCal/4.148148148148148;//copy timer value
    1338:	60 91 a2 02 	lds	r22, 0x02A2	; 0x8002a2 <TimerCal>
    133c:	70 91 a3 02 	lds	r23, 0x02A3	; 0x8002a3 <TimerCal+0x1>
    1340:	80 e0       	ldi	r24, 0x00	; 0
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	0e 94 3d 0c 	call	0x187a	; 0x187a <__floatunsisf>
    1348:	21 ea       	ldi	r18, 0xA1	; 161
    134a:	3d eb       	ldi	r19, 0xBD	; 189
    134c:	44 e8       	ldi	r20, 0x84	; 132
    134e:	50 e4       	ldi	r21, 0x40	; 64
    1350:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__divsf3>
    1354:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fixunssfsi>
    1358:	70 93 a1 02 	sts	0x02A1, r23	; 0x8002a1 <__data_end+0x1>
    135c:	60 93 a0 02 	sts	0x02A0, r22	; 0x8002a0 <__data_end>
		PORTD|=(1<<3);//TRIG pin high
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
		while(!(PIND&(1<<2)))//wait for pulse
		TimerCal=0;//rest timer
		while((PIND&(1<<2)))////wait for pulse down
    1360:	82 99       	sbic	0x10, 2	; 16
    1362:	ea cf       	rjmp	.-44     	; 0x1338 <main+0x1f4>
		ultraINT0=TimerCal/4.148148148148148;//copy timer value
		
		
		float hx=loadCellRead();
    1364:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <loadCellRead>
		uint16_t weight=hx*1000;
    1368:	20 e0       	ldi	r18, 0x00	; 0
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	4a e7       	ldi	r20, 0x7A	; 122
    136e:	54 e4       	ldi	r21, 0x44	; 68
    1370:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
    1374:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fixunssfsi>
    1378:	86 2f       	mov	r24, r22
    137a:	97 2f       	mov	r25, r23
    137c:	7c 01       	movw	r14, r24
		
		sprintf(lcddata,"%0.1f %02u %02u %05u",ph,TempReading,ultraINT0,weight);
    137e:	7f 93       	push	r23
    1380:	6f 93       	push	r22
    1382:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <__data_end+0x1>
    1386:	8f 93       	push	r24
    1388:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <__data_end>
    138c:	8f 93       	push	r24
    138e:	0f 93       	push	r16
    1390:	1f 93       	push	r17
    1392:	80 91 af 02 	lds	r24, 0x02AF	; 0x8002af <ph+0x3>
    1396:	8f 93       	push	r24
    1398:	80 91 ae 02 	lds	r24, 0x02AE	; 0x8002ae <ph+0x2>
    139c:	8f 93       	push	r24
    139e:	80 91 ad 02 	lds	r24, 0x02AD	; 0x8002ad <ph+0x1>
    13a2:	8f 93       	push	r24
    13a4:	80 91 ac 02 	lds	r24, 0x02AC	; 0x8002ac <ph>
    13a8:	8f 93       	push	r24
    13aa:	83 e0       	ldi	r24, 0x03	; 3
    13ac:	92 e0       	ldi	r25, 0x02	; 2
    13ae:	9f 93       	push	r25
    13b0:	8f 93       	push	r24
    13b2:	88 eb       	ldi	r24, 0xB8	; 184
    13b4:	92 e0       	ldi	r25, 0x02	; 2
    13b6:	9f 93       	push	r25
    13b8:	8f 93       	push	r24
    13ba:	0e 94 80 12 	call	0x2500	; 0x2500 <sprintf>
		LcdSetCursor(0,1,lcddata);
    13be:	48 eb       	ldi	r20, 0xB8	; 184
    13c0:	52 e0       	ldi	r21, 0x02	; 2
    13c2:	61 e0       	ldi	r22, 0x01	; 1
    13c4:	80 e0       	ldi	r24, 0x00	; 0
    13c6:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
		
		if ((TempReading<tempuratureLimit[0])||(TempReading>tempuratureLimit[1]))
    13ca:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <tempuratureLimit>
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	ed b7       	in	r30, 0x3d	; 61
    13d2:	fe b7       	in	r31, 0x3e	; 62
    13d4:	3e 96       	adiw	r30, 0x0e	; 14
    13d6:	0f b6       	in	r0, 0x3f	; 63
    13d8:	f8 94       	cli
    13da:	fe bf       	out	0x3e, r31	; 62
    13dc:	0f be       	out	0x3f, r0	; 63
    13de:	ed bf       	out	0x3d, r30	; 61
    13e0:	c8 17       	cp	r28, r24
    13e2:	d9 07       	cpc	r29, r25
    13e4:	30 f0       	brcs	.+12     	; 0x13f2 <main+0x2ae>
    13e6:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <tempuratureLimit+0x1>
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	8c 17       	cp	r24, r28
    13ee:	9d 07       	cpc	r25, r29
    13f0:	20 f4       	brcc	.+8      	; 0x13fa <main+0x2b6>
		{
			sendSMS("Temperature's Limit Exceeded");
    13f2:	88 e1       	ldi	r24, 0x18	; 24
    13f4:	92 e0       	ldi	r25, 0x02	; 2
    13f6:	0e 94 49 07 	call	0xe92	; 0xe92 <sendSMS>
		}
		
		if ((ph<phLimit[0])||(ph>phLimit[1]))
    13fa:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <phLimit>
    13fe:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <phLimit+0x1>
    1402:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <phLimit+0x2>
    1406:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <phLimit+0x3>
    140a:	80 90 ac 02 	lds	r8, 0x02AC	; 0x8002ac <ph>
    140e:	90 90 ad 02 	lds	r9, 0x02AD	; 0x8002ad <ph+0x1>
    1412:	a0 90 ae 02 	lds	r10, 0x02AE	; 0x8002ae <ph+0x2>
    1416:	b0 90 af 02 	lds	r11, 0x02AF	; 0x8002af <ph+0x3>
    141a:	a5 01       	movw	r20, r10
    141c:	94 01       	movw	r18, r8
    141e:	0e 94 cb 0c 	call	0x1996	; 0x1996 <__gesf2>
    1422:	18 16       	cp	r1, r24
    1424:	74 f0       	brlt	.+28     	; 0x1442 <main+0x2fe>
    1426:	20 91 74 00 	lds	r18, 0x0074	; 0x800074 <phLimit+0x4>
    142a:	30 91 75 00 	lds	r19, 0x0075	; 0x800075 <phLimit+0x5>
    142e:	40 91 76 00 	lds	r20, 0x0076	; 0x800076 <phLimit+0x6>
    1432:	50 91 77 00 	lds	r21, 0x0077	; 0x800077 <phLimit+0x7>
    1436:	c5 01       	movw	r24, r10
    1438:	b4 01       	movw	r22, r8
    143a:	0e 94 cb 0c 	call	0x1996	; 0x1996 <__gesf2>
    143e:	18 16       	cp	r1, r24
    1440:	24 f4       	brge	.+8      	; 0x144a <main+0x306>
		{
			sendSMS("Ph Limit Exceeded");
    1442:	85 e3       	ldi	r24, 0x35	; 53
    1444:	92 e0       	ldi	r25, 0x02	; 2
    1446:	0e 94 49 07 	call	0xe92	; 0xe92 <sendSMS>
		}
		if (weight<foodLimit)
    144a:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <foodLimit>
    144e:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <foodLimit+0x1>
    1452:	e8 16       	cp	r14, r24
    1454:	f9 06       	cpc	r15, r25
    1456:	20 f4       	brcc	.+8      	; 0x1460 <main+0x31c>
		{
			sendSMS("Fill the foods");
    1458:	87 e4       	ldi	r24, 0x47	; 71
    145a:	92 e0       	ldi	r25, 0x02	; 2
    145c:	0e 94 49 07 	call	0xe92	; 0xe92 <sendSMS>
		}
		if (PINA&(0b11100))
    1460:	89 b3       	in	r24, 0x19	; 25
    1462:	8c 71       	andi	r24, 0x1C	; 28
    1464:	21 f0       	breq	.+8      	; 0x146e <main+0x32a>
		{
			sendSMS("Motion detected");
    1466:	86 e5       	ldi	r24, 0x56	; 86
    1468:	92 e0       	ldi	r25, 0x02	; 2
    146a:	0e 94 49 07 	call	0xe92	; 0xe92 <sendSMS>
		}
		
		if (ultraINT0<50)
    146e:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <__data_end>
    1472:	90 91 a1 02 	lds	r25, 0x02A1	; 0x8002a1 <__data_end+0x1>
    1476:	c2 97       	sbiw	r24, 0x32	; 50
    1478:	20 f4       	brcc	.+8      	; 0x1482 <main+0x33e>
		{
			sendSMS("Water level low");
    147a:	86 e6       	ldi	r24, 0x66	; 102
    147c:	92 e0       	ldi	r25, 0x02	; 2
    147e:	0e 94 49 07 	call	0xe92	; 0xe92 <sendSMS>
		}
		if (ultraINT0>80)
    1482:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <__data_end>
    1486:	90 91 a1 02 	lds	r25, 0x02A1	; 0x8002a1 <__data_end+0x1>
    148a:	81 35       	cpi	r24, 0x51	; 81
    148c:	91 05       	cpc	r25, r1
    148e:	20 f0       	brcs	.+8      	; 0x1498 <main+0x354>
		{
			sendSMS("Water level High");
    1490:	86 e7       	ldi	r24, 0x76	; 118
    1492:	92 e0       	ldi	r25, 0x02	; 2
    1494:	0e 94 49 07 	call	0xe92	; 0xe92 <sendSMS>
		}
		
		//sprintf(lcddata,"%02u:%02u:%02u:%02u:%02u:%02u",hourC,feedingTimes[0][0],minC,feedingTimes[0][1]);
		//LcdSetCursor(0,0,lcddata);
		
		if ((lampTimes[0]==hourC)&&(lampTimes[1]==minC))
    1498:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <lampTimes>
    149c:	80 91 b6 02 	lds	r24, 0x02B6	; 0x8002b6 <hourC>
    14a0:	98 13       	cpse	r25, r24
    14a2:	09 c0       	rjmp	.+18     	; 0x14b6 <main+0x372>
    14a4:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <lampTimes+0x1>
    14a8:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <minC>
    14ac:	98 13       	cpse	r25, r24
    14ae:	03 c0       	rjmp	.+6      	; 0x14b6 <main+0x372>
		{PORTC|=(1<<6);//lamp on
    14b0:	85 b3       	in	r24, 0x15	; 21
    14b2:	80 64       	ori	r24, 0x40	; 64
    14b4:	85 bb       	out	0x15, r24	; 21
		}
		
		if ((lampTimes[3]==hourC)&&(lampTimes[4]==minC))
    14b6:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <lampTimes+0x3>
    14ba:	80 91 b6 02 	lds	r24, 0x02B6	; 0x8002b6 <hourC>
    14be:	98 13       	cpse	r25, r24
    14c0:	09 c0       	rjmp	.+18     	; 0x14d4 <main+0x390>
    14c2:	90 91 7e 00 	lds	r25, 0x007E	; 0x80007e <lampTimes+0x4>
    14c6:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <minC>
    14ca:	98 13       	cpse	r25, r24
    14cc:	03 c0       	rjmp	.+6      	; 0x14d4 <main+0x390>
		{PORTC&=~(1<<6);//lamp off
    14ce:	85 b3       	in	r24, 0x15	; 21
    14d0:	8f 7b       	andi	r24, 0xBF	; 191
    14d2:	85 bb       	out	0x15, r24	; 21
		}
		
		
		//Feeding
		if (((hourC==feedingTimes[0][0]&&minC==feedingTimes[0][1])||(hourC==feedingTimes[1][0]&&minC==feedingTimes[1][1])||(hourC==feedingTimes[2][0]&&minC==feedingTimes[2][1])) && (secC<2))
    14d4:	90 91 a6 02 	lds	r25, 0x02A6	; 0x8002a6 <feedingTimes>
    14d8:	80 91 b6 02 	lds	r24, 0x02B6	; 0x8002b6 <hourC>
    14dc:	98 13       	cpse	r25, r24
    14de:	06 c0       	rjmp	.+12     	; 0x14ec <main+0x3a8>
    14e0:	20 91 a7 02 	lds	r18, 0x02A7	; 0x8002a7 <feedingTimes+0x1>
    14e4:	90 91 b5 02 	lds	r25, 0x02B5	; 0x8002b5 <minC>
    14e8:	29 17       	cp	r18, r25
    14ea:	a1 f0       	breq	.+40     	; 0x1514 <main+0x3d0>
    14ec:	90 91 a8 02 	lds	r25, 0x02A8	; 0x8002a8 <feedingTimes+0x2>
    14f0:	89 13       	cpse	r24, r25
    14f2:	06 c0       	rjmp	.+12     	; 0x1500 <main+0x3bc>
    14f4:	20 91 a9 02 	lds	r18, 0x02A9	; 0x8002a9 <feedingTimes+0x3>
    14f8:	90 91 b5 02 	lds	r25, 0x02B5	; 0x8002b5 <minC>
    14fc:	29 17       	cp	r18, r25
    14fe:	51 f0       	breq	.+20     	; 0x1514 <main+0x3d0>
    1500:	90 91 aa 02 	lds	r25, 0x02AA	; 0x8002aa <feedingTimes+0x4>
    1504:	89 13       	cpse	r24, r25
    1506:	a1 c0       	rjmp	.+322    	; 0x164a <main+0x506>
    1508:	90 91 ab 02 	lds	r25, 0x02AB	; 0x8002ab <feedingTimes+0x5>
    150c:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <minC>
    1510:	98 13       	cpse	r25, r24
    1512:	9b c0       	rjmp	.+310    	; 0x164a <main+0x506>
    1514:	80 91 cc 02 	lds	r24, 0x02CC	; 0x8002cc <secC>
    1518:	82 30       	cpi	r24, 0x02	; 2
    151a:	08 f0       	brcs	.+2      	; 0x151e <main+0x3da>
    151c:	96 c0       	rjmp	.+300    	; 0x164a <main+0x506>
		{PORTD&=~(1<<6);
    151e:	82 b3       	in	r24, 0x12	; 18
    1520:	8f 7b       	andi	r24, 0xBF	; 191
    1522:	82 bb       	out	0x12, r24	; 18
			LcdCommand(LCD_CLEARDISPLAY);
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
			LcdSetCursor(0,0,"Feeding");
    152a:	47 e8       	ldi	r20, 0x87	; 135
    152c:	52 e0       	ldi	r21, 0x02	; 2
    152e:	60 e0       	ldi	r22, 0x00	; 0
    1530:	80 e0       	ldi	r24, 0x00	; 0
    1532:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
			PORTC|=(1<<7);
    1536:	85 b3       	in	r24, 0x15	; 21
    1538:	80 68       	ori	r24, 0x80	; 128
    153a:	85 bb       	out	0x15, r24	; 21
			DDRD|=(1<<7);
    153c:	81 b3       	in	r24, 0x11	; 17
    153e:	80 68       	ori	r24, 0x80	; 128
    1540:	81 bb       	out	0x11, r24	; 17
			
			for(uint8_t j=0;j<100;j++){
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	1d c0       	rjmp	.+58     	; 0x1580 <main+0x43c>
				PORTD|=(1<<7);
    1546:	82 b3       	in	r24, 0x12	; 18
    1548:	80 68       	ori	r24, 0x80	; 128
    154a:	82 bb       	out	0x12, r24	; 18
				for(uint8_t i=0;i<10;i++){
    154c:	80 e0       	ldi	r24, 0x00	; 0
    154e:	07 c0       	rjmp	.+14     	; 0x155e <main+0x41a>
    1550:	e7 ec       	ldi	r30, 0xC7	; 199
    1552:	f0 e0       	ldi	r31, 0x00	; 0
    1554:	31 97       	sbiw	r30, 0x01	; 1
    1556:	f1 f7       	brne	.-4      	; 0x1554 <main+0x410>
    1558:	00 c0       	rjmp	.+0      	; 0x155a <main+0x416>
    155a:	00 00       	nop
    155c:	8f 5f       	subi	r24, 0xFF	; 255
    155e:	8a 30       	cpi	r24, 0x0A	; 10
    1560:	b8 f3       	brcs	.-18     	; 0x1550 <main+0x40c>
					_delay_us(100);
				}
				PORTD&=~(1<<7);
    1562:	82 b3       	in	r24, 0x12	; 18
    1564:	8f 77       	andi	r24, 0x7F	; 127
    1566:	82 bb       	out	0x12, r24	; 18
				
				uint8_t ser=200-10;
				
				for(uint8_t i=0;i<ser;i++){
    1568:	80 e0       	ldi	r24, 0x00	; 0
    156a:	07 c0       	rjmp	.+14     	; 0x157a <main+0x436>
    156c:	e7 ec       	ldi	r30, 0xC7	; 199
    156e:	f0 e0       	ldi	r31, 0x00	; 0
    1570:	31 97       	sbiw	r30, 0x01	; 1
    1572:	f1 f7       	brne	.-4      	; 0x1570 <main+0x42c>
    1574:	00 c0       	rjmp	.+0      	; 0x1576 <main+0x432>
    1576:	00 00       	nop
    1578:	8f 5f       	subi	r24, 0xFF	; 255
    157a:	8e 3b       	cpi	r24, 0xBE	; 190
    157c:	b8 f3       	brcs	.-18     	; 0x156c <main+0x428>
			LcdCommand(LCD_CLEARDISPLAY);
			LcdSetCursor(0,0,"Feeding");
			PORTC|=(1<<7);
			DDRD|=(1<<7);
			
			for(uint8_t j=0;j<100;j++){
    157e:	9f 5f       	subi	r25, 0xFF	; 255
    1580:	94 36       	cpi	r25, 0x64	; 100
    1582:	08 f3       	brcs	.-62     	; 0x1546 <main+0x402>
					_delay_us(100);
				}
			}
			
			
			hx=loadCellRead();
    1584:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <loadCellRead>
			uint16_t weight=hx*1000;
    1588:	20 e0       	ldi	r18, 0x00	; 0
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	4a e7       	ldi	r20, 0x7A	; 122
    158e:	54 e4       	ldi	r21, 0x44	; 68
    1590:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
    1594:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fixunssfsi>
    1598:	eb 01       	movw	r28, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    159a:	ff ef       	ldi	r31, 0xFF	; 255
    159c:	20 e7       	ldi	r18, 0x70	; 112
    159e:	32 e0       	ldi	r19, 0x02	; 2
    15a0:	f1 50       	subi	r31, 0x01	; 1
    15a2:	20 40       	sbci	r18, 0x00	; 0
    15a4:	30 40       	sbci	r19, 0x00	; 0
    15a6:	e1 f7       	brne	.-8      	; 0x15a0 <main+0x45c>
    15a8:	00 c0       	rjmp	.+0      	; 0x15aa <main+0x466>
    15aa:	00 00       	nop
			_delay_ms(100);
			while(1){
				hx=loadCellRead();
    15ac:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <loadCellRead>
				uint16_t weightNow=hx*1000;
    15b0:	20 e0       	ldi	r18, 0x00	; 0
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	4a e7       	ldi	r20, 0x7A	; 122
    15b6:	54 e4       	ldi	r21, 0x44	; 68
    15b8:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
    15bc:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fixunssfsi>
				weightNow+=feedingWeight;
    15c0:	20 91 a4 02 	lds	r18, 0x02A4	; 0x8002a4 <feedingWeight>
    15c4:	30 91 a5 02 	lds	r19, 0x02A5	; 0x8002a5 <feedingWeight+0x1>
    15c8:	62 0f       	add	r22, r18
    15ca:	73 1f       	adc	r23, r19
    15cc:	8f ef       	ldi	r24, 0xFF	; 255
    15ce:	90 e7       	ldi	r25, 0x70	; 112
    15d0:	e2 e0       	ldi	r30, 0x02	; 2
    15d2:	81 50       	subi	r24, 0x01	; 1
    15d4:	90 40       	sbci	r25, 0x00	; 0
    15d6:	e0 40       	sbci	r30, 0x00	; 0
    15d8:	e1 f7       	brne	.-8      	; 0x15d2 <main+0x48e>
    15da:	00 c0       	rjmp	.+0      	; 0x15dc <main+0x498>
    15dc:	00 00       	nop
				//LcdSetCursor(0,1,lcddata);
				//sprintf(lcddata,"%04u %04u",weightNow,weight);
				_delay_ms(100);
				if (weightNow<=weight)
    15de:	c6 17       	cp	r28, r22
    15e0:	d7 07       	cpc	r29, r23
    15e2:	20 f3       	brcs	.-56     	; 0x15ac <main+0x468>
				{break;
				}

			}
			LcdCommand(LCD_CLEARDISPLAY);
    15e4:	81 e0       	ldi	r24, 0x01	; 1
    15e6:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
			
			for(uint8_t j=0;j<100;j++){
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	1d c0       	rjmp	.+58     	; 0x1628 <main+0x4e4>
				
				PORTD|=(1<<4);
    15ee:	82 b3       	in	r24, 0x12	; 18
    15f0:	80 61       	ori	r24, 0x10	; 16
    15f2:	82 bb       	out	0x12, r24	; 18
				for(uint8_t i=0;i<15;i++){
    15f4:	80 e0       	ldi	r24, 0x00	; 0
    15f6:	07 c0       	rjmp	.+14     	; 0x1606 <main+0x4c2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    15f8:	e7 ec       	ldi	r30, 0xC7	; 199
    15fa:	f0 e0       	ldi	r31, 0x00	; 0
    15fc:	31 97       	sbiw	r30, 0x01	; 1
    15fe:	f1 f7       	brne	.-4      	; 0x15fc <main+0x4b8>
    1600:	00 c0       	rjmp	.+0      	; 0x1602 <main+0x4be>
    1602:	00 00       	nop
    1604:	8f 5f       	subi	r24, 0xFF	; 255
    1606:	8f 30       	cpi	r24, 0x0F	; 15
    1608:	b8 f3       	brcs	.-18     	; 0x15f8 <main+0x4b4>
					_delay_us(100);
				}
				PORTD&=~(1<<4);
    160a:	82 b3       	in	r24, 0x12	; 18
    160c:	8f 7e       	andi	r24, 0xEF	; 239
    160e:	82 bb       	out	0x12, r24	; 18
				
				uint8_t ser=200-15;
				
				for(uint8_t i=0;i<15;i++){
    1610:	80 e0       	ldi	r24, 0x00	; 0
    1612:	07 c0       	rjmp	.+14     	; 0x1622 <main+0x4de>
    1614:	e7 ec       	ldi	r30, 0xC7	; 199
    1616:	f0 e0       	ldi	r31, 0x00	; 0
    1618:	31 97       	sbiw	r30, 0x01	; 1
    161a:	f1 f7       	brne	.-4      	; 0x1618 <main+0x4d4>
    161c:	00 c0       	rjmp	.+0      	; 0x161e <main+0x4da>
    161e:	00 00       	nop
    1620:	8f 5f       	subi	r24, 0xFF	; 255
    1622:	8f 30       	cpi	r24, 0x0F	; 15
    1624:	b8 f3       	brcs	.-18     	; 0x1614 <main+0x4d0>
				}

			}
			LcdCommand(LCD_CLEARDISPLAY);
			
			for(uint8_t j=0;j<100;j++){
    1626:	9f 5f       	subi	r25, 0xFF	; 255
    1628:	94 36       	cpi	r25, 0x64	; 100
    162a:	08 f3       	brcs	.-62     	; 0x15ee <main+0x4aa>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    162c:	ff ef       	ldi	r31, 0xFF	; 255
    162e:	24 e3       	ldi	r18, 0x34	; 52
    1630:	3c e0       	ldi	r19, 0x0C	; 12
    1632:	f1 50       	subi	r31, 0x01	; 1
    1634:	20 40       	sbci	r18, 0x00	; 0
    1636:	30 40       	sbci	r19, 0x00	; 0
    1638:	e1 f7       	brne	.-8      	; 0x1632 <main+0x4ee>
    163a:	00 c0       	rjmp	.+0      	; 0x163c <main+0x4f8>
    163c:	00 00       	nop
				for(uint8_t i=0;i<15;i++){
					_delay_us(100);
				}
			}_delay_ms(500);
			
			PORTC&=~(1<<7);
    163e:	85 b3       	in	r24, 0x15	; 21
    1640:	8f 77       	andi	r24, 0x7F	; 127
    1642:	85 bb       	out	0x15, r24	; 21
			PORTD|=(1<<6);
    1644:	82 b3       	in	r24, 0x12	; 18
    1646:	80 64       	ori	r24, 0x40	; 64
    1648:	82 bb       	out	0x12, r24	; 18
    164a:	8f ef       	ldi	r24, 0xFF	; 255
    164c:	90 e7       	ldi	r25, 0x70	; 112
    164e:	e2 e0       	ldi	r30, 0x02	; 2
    1650:	81 50       	subi	r24, 0x01	; 1
    1652:	90 40       	sbci	r25, 0x00	; 0
    1654:	e0 40       	sbci	r30, 0x00	; 0
    1656:	e1 f7       	brne	.-8      	; 0x1650 <main+0x50c>
    1658:	00 c0       	rjmp	.+0      	; 0x165a <main+0x516>
    165a:	00 00       	nop
    165c:	f4 cd       	rjmp	.-1048   	; 0x1246 <main+0x102>

0000165e <__subsf3>:
    165e:	50 58       	subi	r21, 0x80	; 128

00001660 <__addsf3>:
    1660:	bb 27       	eor	r27, r27
    1662:	aa 27       	eor	r26, r26
    1664:	0e 94 47 0b 	call	0x168e	; 0x168e <__addsf3x>
    1668:	0c 94 91 0c 	jmp	0x1922	; 0x1922 <__fp_round>
    166c:	0e 94 83 0c 	call	0x1906	; 0x1906 <__fp_pscA>
    1670:	38 f0       	brcs	.+14     	; 0x1680 <__addsf3+0x20>
    1672:	0e 94 8a 0c 	call	0x1914	; 0x1914 <__fp_pscB>
    1676:	20 f0       	brcs	.+8      	; 0x1680 <__addsf3+0x20>
    1678:	39 f4       	brne	.+14     	; 0x1688 <__addsf3+0x28>
    167a:	9f 3f       	cpi	r25, 0xFF	; 255
    167c:	19 f4       	brne	.+6      	; 0x1684 <__addsf3+0x24>
    167e:	26 f4       	brtc	.+8      	; 0x1688 <__addsf3+0x28>
    1680:	0c 94 80 0c 	jmp	0x1900	; 0x1900 <__fp_nan>
    1684:	0e f4       	brtc	.+2      	; 0x1688 <__addsf3+0x28>
    1686:	e0 95       	com	r30
    1688:	e7 fb       	bst	r30, 7
    168a:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__fp_inf>

0000168e <__addsf3x>:
    168e:	e9 2f       	mov	r30, r25
    1690:	0e 94 a2 0c 	call	0x1944	; 0x1944 <__fp_split3>
    1694:	58 f3       	brcs	.-42     	; 0x166c <__addsf3+0xc>
    1696:	ba 17       	cp	r27, r26
    1698:	62 07       	cpc	r22, r18
    169a:	73 07       	cpc	r23, r19
    169c:	84 07       	cpc	r24, r20
    169e:	95 07       	cpc	r25, r21
    16a0:	20 f0       	brcs	.+8      	; 0x16aa <__addsf3x+0x1c>
    16a2:	79 f4       	brne	.+30     	; 0x16c2 <__addsf3x+0x34>
    16a4:	a6 f5       	brtc	.+104    	; 0x170e <__addsf3x+0x80>
    16a6:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__fp_zero>
    16aa:	0e f4       	brtc	.+2      	; 0x16ae <__addsf3x+0x20>
    16ac:	e0 95       	com	r30
    16ae:	0b 2e       	mov	r0, r27
    16b0:	ba 2f       	mov	r27, r26
    16b2:	a0 2d       	mov	r26, r0
    16b4:	0b 01       	movw	r0, r22
    16b6:	b9 01       	movw	r22, r18
    16b8:	90 01       	movw	r18, r0
    16ba:	0c 01       	movw	r0, r24
    16bc:	ca 01       	movw	r24, r20
    16be:	a0 01       	movw	r20, r0
    16c0:	11 24       	eor	r1, r1
    16c2:	ff 27       	eor	r31, r31
    16c4:	59 1b       	sub	r21, r25
    16c6:	99 f0       	breq	.+38     	; 0x16ee <__addsf3x+0x60>
    16c8:	59 3f       	cpi	r21, 0xF9	; 249
    16ca:	50 f4       	brcc	.+20     	; 0x16e0 <__addsf3x+0x52>
    16cc:	50 3e       	cpi	r21, 0xE0	; 224
    16ce:	68 f1       	brcs	.+90     	; 0x172a <__addsf3x+0x9c>
    16d0:	1a 16       	cp	r1, r26
    16d2:	f0 40       	sbci	r31, 0x00	; 0
    16d4:	a2 2f       	mov	r26, r18
    16d6:	23 2f       	mov	r18, r19
    16d8:	34 2f       	mov	r19, r20
    16da:	44 27       	eor	r20, r20
    16dc:	58 5f       	subi	r21, 0xF8	; 248
    16de:	f3 cf       	rjmp	.-26     	; 0x16c6 <__addsf3x+0x38>
    16e0:	46 95       	lsr	r20
    16e2:	37 95       	ror	r19
    16e4:	27 95       	ror	r18
    16e6:	a7 95       	ror	r26
    16e8:	f0 40       	sbci	r31, 0x00	; 0
    16ea:	53 95       	inc	r21
    16ec:	c9 f7       	brne	.-14     	; 0x16e0 <__addsf3x+0x52>
    16ee:	7e f4       	brtc	.+30     	; 0x170e <__addsf3x+0x80>
    16f0:	1f 16       	cp	r1, r31
    16f2:	ba 0b       	sbc	r27, r26
    16f4:	62 0b       	sbc	r22, r18
    16f6:	73 0b       	sbc	r23, r19
    16f8:	84 0b       	sbc	r24, r20
    16fa:	ba f0       	brmi	.+46     	; 0x172a <__addsf3x+0x9c>
    16fc:	91 50       	subi	r25, 0x01	; 1
    16fe:	a1 f0       	breq	.+40     	; 0x1728 <__addsf3x+0x9a>
    1700:	ff 0f       	add	r31, r31
    1702:	bb 1f       	adc	r27, r27
    1704:	66 1f       	adc	r22, r22
    1706:	77 1f       	adc	r23, r23
    1708:	88 1f       	adc	r24, r24
    170a:	c2 f7       	brpl	.-16     	; 0x16fc <__addsf3x+0x6e>
    170c:	0e c0       	rjmp	.+28     	; 0x172a <__addsf3x+0x9c>
    170e:	ba 0f       	add	r27, r26
    1710:	62 1f       	adc	r22, r18
    1712:	73 1f       	adc	r23, r19
    1714:	84 1f       	adc	r24, r20
    1716:	48 f4       	brcc	.+18     	; 0x172a <__addsf3x+0x9c>
    1718:	87 95       	ror	r24
    171a:	77 95       	ror	r23
    171c:	67 95       	ror	r22
    171e:	b7 95       	ror	r27
    1720:	f7 95       	ror	r31
    1722:	9e 3f       	cpi	r25, 0xFE	; 254
    1724:	08 f0       	brcs	.+2      	; 0x1728 <__addsf3x+0x9a>
    1726:	b0 cf       	rjmp	.-160    	; 0x1688 <__addsf3+0x28>
    1728:	93 95       	inc	r25
    172a:	88 0f       	add	r24, r24
    172c:	08 f0       	brcs	.+2      	; 0x1730 <__addsf3x+0xa2>
    172e:	99 27       	eor	r25, r25
    1730:	ee 0f       	add	r30, r30
    1732:	97 95       	ror	r25
    1734:	87 95       	ror	r24
    1736:	08 95       	ret

00001738 <__divsf3>:
    1738:	0e 94 b0 0b 	call	0x1760	; 0x1760 <__divsf3x>
    173c:	0c 94 91 0c 	jmp	0x1922	; 0x1922 <__fp_round>
    1740:	0e 94 8a 0c 	call	0x1914	; 0x1914 <__fp_pscB>
    1744:	58 f0       	brcs	.+22     	; 0x175c <__divsf3+0x24>
    1746:	0e 94 83 0c 	call	0x1906	; 0x1906 <__fp_pscA>
    174a:	40 f0       	brcs	.+16     	; 0x175c <__divsf3+0x24>
    174c:	29 f4       	brne	.+10     	; 0x1758 <__divsf3+0x20>
    174e:	5f 3f       	cpi	r21, 0xFF	; 255
    1750:	29 f0       	breq	.+10     	; 0x175c <__divsf3+0x24>
    1752:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__fp_inf>
    1756:	51 11       	cpse	r21, r1
    1758:	0c 94 c5 0c 	jmp	0x198a	; 0x198a <__fp_szero>
    175c:	0c 94 80 0c 	jmp	0x1900	; 0x1900 <__fp_nan>

00001760 <__divsf3x>:
    1760:	0e 94 a2 0c 	call	0x1944	; 0x1944 <__fp_split3>
    1764:	68 f3       	brcs	.-38     	; 0x1740 <__divsf3+0x8>

00001766 <__divsf3_pse>:
    1766:	99 23       	and	r25, r25
    1768:	b1 f3       	breq	.-20     	; 0x1756 <__divsf3+0x1e>
    176a:	55 23       	and	r21, r21
    176c:	91 f3       	breq	.-28     	; 0x1752 <__divsf3+0x1a>
    176e:	95 1b       	sub	r25, r21
    1770:	55 0b       	sbc	r21, r21
    1772:	bb 27       	eor	r27, r27
    1774:	aa 27       	eor	r26, r26
    1776:	62 17       	cp	r22, r18
    1778:	73 07       	cpc	r23, r19
    177a:	84 07       	cpc	r24, r20
    177c:	38 f0       	brcs	.+14     	; 0x178c <__divsf3_pse+0x26>
    177e:	9f 5f       	subi	r25, 0xFF	; 255
    1780:	5f 4f       	sbci	r21, 0xFF	; 255
    1782:	22 0f       	add	r18, r18
    1784:	33 1f       	adc	r19, r19
    1786:	44 1f       	adc	r20, r20
    1788:	aa 1f       	adc	r26, r26
    178a:	a9 f3       	breq	.-22     	; 0x1776 <__divsf3_pse+0x10>
    178c:	35 d0       	rcall	.+106    	; 0x17f8 <__divsf3_pse+0x92>
    178e:	0e 2e       	mov	r0, r30
    1790:	3a f0       	brmi	.+14     	; 0x17a0 <__divsf3_pse+0x3a>
    1792:	e0 e8       	ldi	r30, 0x80	; 128
    1794:	32 d0       	rcall	.+100    	; 0x17fa <__divsf3_pse+0x94>
    1796:	91 50       	subi	r25, 0x01	; 1
    1798:	50 40       	sbci	r21, 0x00	; 0
    179a:	e6 95       	lsr	r30
    179c:	00 1c       	adc	r0, r0
    179e:	ca f7       	brpl	.-14     	; 0x1792 <__divsf3_pse+0x2c>
    17a0:	2b d0       	rcall	.+86     	; 0x17f8 <__divsf3_pse+0x92>
    17a2:	fe 2f       	mov	r31, r30
    17a4:	29 d0       	rcall	.+82     	; 0x17f8 <__divsf3_pse+0x92>
    17a6:	66 0f       	add	r22, r22
    17a8:	77 1f       	adc	r23, r23
    17aa:	88 1f       	adc	r24, r24
    17ac:	bb 1f       	adc	r27, r27
    17ae:	26 17       	cp	r18, r22
    17b0:	37 07       	cpc	r19, r23
    17b2:	48 07       	cpc	r20, r24
    17b4:	ab 07       	cpc	r26, r27
    17b6:	b0 e8       	ldi	r27, 0x80	; 128
    17b8:	09 f0       	breq	.+2      	; 0x17bc <__divsf3_pse+0x56>
    17ba:	bb 0b       	sbc	r27, r27
    17bc:	80 2d       	mov	r24, r0
    17be:	bf 01       	movw	r22, r30
    17c0:	ff 27       	eor	r31, r31
    17c2:	93 58       	subi	r25, 0x83	; 131
    17c4:	5f 4f       	sbci	r21, 0xFF	; 255
    17c6:	3a f0       	brmi	.+14     	; 0x17d6 <__divsf3_pse+0x70>
    17c8:	9e 3f       	cpi	r25, 0xFE	; 254
    17ca:	51 05       	cpc	r21, r1
    17cc:	78 f0       	brcs	.+30     	; 0x17ec <__divsf3_pse+0x86>
    17ce:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__fp_inf>
    17d2:	0c 94 c5 0c 	jmp	0x198a	; 0x198a <__fp_szero>
    17d6:	5f 3f       	cpi	r21, 0xFF	; 255
    17d8:	e4 f3       	brlt	.-8      	; 0x17d2 <__divsf3_pse+0x6c>
    17da:	98 3e       	cpi	r25, 0xE8	; 232
    17dc:	d4 f3       	brlt	.-12     	; 0x17d2 <__divsf3_pse+0x6c>
    17de:	86 95       	lsr	r24
    17e0:	77 95       	ror	r23
    17e2:	67 95       	ror	r22
    17e4:	b7 95       	ror	r27
    17e6:	f7 95       	ror	r31
    17e8:	9f 5f       	subi	r25, 0xFF	; 255
    17ea:	c9 f7       	brne	.-14     	; 0x17de <__divsf3_pse+0x78>
    17ec:	88 0f       	add	r24, r24
    17ee:	91 1d       	adc	r25, r1
    17f0:	96 95       	lsr	r25
    17f2:	87 95       	ror	r24
    17f4:	97 f9       	bld	r25, 7
    17f6:	08 95       	ret
    17f8:	e1 e0       	ldi	r30, 0x01	; 1
    17fa:	66 0f       	add	r22, r22
    17fc:	77 1f       	adc	r23, r23
    17fe:	88 1f       	adc	r24, r24
    1800:	bb 1f       	adc	r27, r27
    1802:	62 17       	cp	r22, r18
    1804:	73 07       	cpc	r23, r19
    1806:	84 07       	cpc	r24, r20
    1808:	ba 07       	cpc	r27, r26
    180a:	20 f0       	brcs	.+8      	; 0x1814 <__divsf3_pse+0xae>
    180c:	62 1b       	sub	r22, r18
    180e:	73 0b       	sbc	r23, r19
    1810:	84 0b       	sbc	r24, r20
    1812:	ba 0b       	sbc	r27, r26
    1814:	ee 1f       	adc	r30, r30
    1816:	88 f7       	brcc	.-30     	; 0x17fa <__divsf3_pse+0x94>
    1818:	e0 95       	com	r30
    181a:	08 95       	ret

0000181c <__fixunssfsi>:
    181c:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__fp_splitA>
    1820:	88 f0       	brcs	.+34     	; 0x1844 <__fixunssfsi+0x28>
    1822:	9f 57       	subi	r25, 0x7F	; 127
    1824:	98 f0       	brcs	.+38     	; 0x184c <__fixunssfsi+0x30>
    1826:	b9 2f       	mov	r27, r25
    1828:	99 27       	eor	r25, r25
    182a:	b7 51       	subi	r27, 0x17	; 23
    182c:	b0 f0       	brcs	.+44     	; 0x185a <__fixunssfsi+0x3e>
    182e:	e1 f0       	breq	.+56     	; 0x1868 <__fixunssfsi+0x4c>
    1830:	66 0f       	add	r22, r22
    1832:	77 1f       	adc	r23, r23
    1834:	88 1f       	adc	r24, r24
    1836:	99 1f       	adc	r25, r25
    1838:	1a f0       	brmi	.+6      	; 0x1840 <__fixunssfsi+0x24>
    183a:	ba 95       	dec	r27
    183c:	c9 f7       	brne	.-14     	; 0x1830 <__fixunssfsi+0x14>
    183e:	14 c0       	rjmp	.+40     	; 0x1868 <__fixunssfsi+0x4c>
    1840:	b1 30       	cpi	r27, 0x01	; 1
    1842:	91 f0       	breq	.+36     	; 0x1868 <__fixunssfsi+0x4c>
    1844:	0e 94 c4 0c 	call	0x1988	; 0x1988 <__fp_zero>
    1848:	b1 e0       	ldi	r27, 0x01	; 1
    184a:	08 95       	ret
    184c:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__fp_zero>
    1850:	67 2f       	mov	r22, r23
    1852:	78 2f       	mov	r23, r24
    1854:	88 27       	eor	r24, r24
    1856:	b8 5f       	subi	r27, 0xF8	; 248
    1858:	39 f0       	breq	.+14     	; 0x1868 <__fixunssfsi+0x4c>
    185a:	b9 3f       	cpi	r27, 0xF9	; 249
    185c:	cc f3       	brlt	.-14     	; 0x1850 <__fixunssfsi+0x34>
    185e:	86 95       	lsr	r24
    1860:	77 95       	ror	r23
    1862:	67 95       	ror	r22
    1864:	b3 95       	inc	r27
    1866:	d9 f7       	brne	.-10     	; 0x185e <__fixunssfsi+0x42>
    1868:	3e f4       	brtc	.+14     	; 0x1878 <__fixunssfsi+0x5c>
    186a:	90 95       	com	r25
    186c:	80 95       	com	r24
    186e:	70 95       	com	r23
    1870:	61 95       	neg	r22
    1872:	7f 4f       	sbci	r23, 0xFF	; 255
    1874:	8f 4f       	sbci	r24, 0xFF	; 255
    1876:	9f 4f       	sbci	r25, 0xFF	; 255
    1878:	08 95       	ret

0000187a <__floatunsisf>:
    187a:	e8 94       	clt
    187c:	09 c0       	rjmp	.+18     	; 0x1890 <__floatsisf+0x12>

0000187e <__floatsisf>:
    187e:	97 fb       	bst	r25, 7
    1880:	3e f4       	brtc	.+14     	; 0x1890 <__floatsisf+0x12>
    1882:	90 95       	com	r25
    1884:	80 95       	com	r24
    1886:	70 95       	com	r23
    1888:	61 95       	neg	r22
    188a:	7f 4f       	sbci	r23, 0xFF	; 255
    188c:	8f 4f       	sbci	r24, 0xFF	; 255
    188e:	9f 4f       	sbci	r25, 0xFF	; 255
    1890:	99 23       	and	r25, r25
    1892:	a9 f0       	breq	.+42     	; 0x18be <__floatsisf+0x40>
    1894:	f9 2f       	mov	r31, r25
    1896:	96 e9       	ldi	r25, 0x96	; 150
    1898:	bb 27       	eor	r27, r27
    189a:	93 95       	inc	r25
    189c:	f6 95       	lsr	r31
    189e:	87 95       	ror	r24
    18a0:	77 95       	ror	r23
    18a2:	67 95       	ror	r22
    18a4:	b7 95       	ror	r27
    18a6:	f1 11       	cpse	r31, r1
    18a8:	f8 cf       	rjmp	.-16     	; 0x189a <__floatsisf+0x1c>
    18aa:	fa f4       	brpl	.+62     	; 0x18ea <__floatsisf+0x6c>
    18ac:	bb 0f       	add	r27, r27
    18ae:	11 f4       	brne	.+4      	; 0x18b4 <__floatsisf+0x36>
    18b0:	60 ff       	sbrs	r22, 0
    18b2:	1b c0       	rjmp	.+54     	; 0x18ea <__floatsisf+0x6c>
    18b4:	6f 5f       	subi	r22, 0xFF	; 255
    18b6:	7f 4f       	sbci	r23, 0xFF	; 255
    18b8:	8f 4f       	sbci	r24, 0xFF	; 255
    18ba:	9f 4f       	sbci	r25, 0xFF	; 255
    18bc:	16 c0       	rjmp	.+44     	; 0x18ea <__floatsisf+0x6c>
    18be:	88 23       	and	r24, r24
    18c0:	11 f0       	breq	.+4      	; 0x18c6 <__floatsisf+0x48>
    18c2:	96 e9       	ldi	r25, 0x96	; 150
    18c4:	11 c0       	rjmp	.+34     	; 0x18e8 <__floatsisf+0x6a>
    18c6:	77 23       	and	r23, r23
    18c8:	21 f0       	breq	.+8      	; 0x18d2 <__floatsisf+0x54>
    18ca:	9e e8       	ldi	r25, 0x8E	; 142
    18cc:	87 2f       	mov	r24, r23
    18ce:	76 2f       	mov	r23, r22
    18d0:	05 c0       	rjmp	.+10     	; 0x18dc <__floatsisf+0x5e>
    18d2:	66 23       	and	r22, r22
    18d4:	71 f0       	breq	.+28     	; 0x18f2 <__floatsisf+0x74>
    18d6:	96 e8       	ldi	r25, 0x86	; 134
    18d8:	86 2f       	mov	r24, r22
    18da:	70 e0       	ldi	r23, 0x00	; 0
    18dc:	60 e0       	ldi	r22, 0x00	; 0
    18de:	2a f0       	brmi	.+10     	; 0x18ea <__floatsisf+0x6c>
    18e0:	9a 95       	dec	r25
    18e2:	66 0f       	add	r22, r22
    18e4:	77 1f       	adc	r23, r23
    18e6:	88 1f       	adc	r24, r24
    18e8:	da f7       	brpl	.-10     	; 0x18e0 <__floatsisf+0x62>
    18ea:	88 0f       	add	r24, r24
    18ec:	96 95       	lsr	r25
    18ee:	87 95       	ror	r24
    18f0:	97 f9       	bld	r25, 7
    18f2:	08 95       	ret

000018f4 <__fp_inf>:
    18f4:	97 f9       	bld	r25, 7
    18f6:	9f 67       	ori	r25, 0x7F	; 127
    18f8:	80 e8       	ldi	r24, 0x80	; 128
    18fa:	70 e0       	ldi	r23, 0x00	; 0
    18fc:	60 e0       	ldi	r22, 0x00	; 0
    18fe:	08 95       	ret

00001900 <__fp_nan>:
    1900:	9f ef       	ldi	r25, 0xFF	; 255
    1902:	80 ec       	ldi	r24, 0xC0	; 192
    1904:	08 95       	ret

00001906 <__fp_pscA>:
    1906:	00 24       	eor	r0, r0
    1908:	0a 94       	dec	r0
    190a:	16 16       	cp	r1, r22
    190c:	17 06       	cpc	r1, r23
    190e:	18 06       	cpc	r1, r24
    1910:	09 06       	cpc	r0, r25
    1912:	08 95       	ret

00001914 <__fp_pscB>:
    1914:	00 24       	eor	r0, r0
    1916:	0a 94       	dec	r0
    1918:	12 16       	cp	r1, r18
    191a:	13 06       	cpc	r1, r19
    191c:	14 06       	cpc	r1, r20
    191e:	05 06       	cpc	r0, r21
    1920:	08 95       	ret

00001922 <__fp_round>:
    1922:	09 2e       	mov	r0, r25
    1924:	03 94       	inc	r0
    1926:	00 0c       	add	r0, r0
    1928:	11 f4       	brne	.+4      	; 0x192e <__fp_round+0xc>
    192a:	88 23       	and	r24, r24
    192c:	52 f0       	brmi	.+20     	; 0x1942 <__fp_round+0x20>
    192e:	bb 0f       	add	r27, r27
    1930:	40 f4       	brcc	.+16     	; 0x1942 <__fp_round+0x20>
    1932:	bf 2b       	or	r27, r31
    1934:	11 f4       	brne	.+4      	; 0x193a <__fp_round+0x18>
    1936:	60 ff       	sbrs	r22, 0
    1938:	04 c0       	rjmp	.+8      	; 0x1942 <__fp_round+0x20>
    193a:	6f 5f       	subi	r22, 0xFF	; 255
    193c:	7f 4f       	sbci	r23, 0xFF	; 255
    193e:	8f 4f       	sbci	r24, 0xFF	; 255
    1940:	9f 4f       	sbci	r25, 0xFF	; 255
    1942:	08 95       	ret

00001944 <__fp_split3>:
    1944:	57 fd       	sbrc	r21, 7
    1946:	90 58       	subi	r25, 0x80	; 128
    1948:	44 0f       	add	r20, r20
    194a:	55 1f       	adc	r21, r21
    194c:	59 f0       	breq	.+22     	; 0x1964 <__fp_splitA+0x10>
    194e:	5f 3f       	cpi	r21, 0xFF	; 255
    1950:	71 f0       	breq	.+28     	; 0x196e <__fp_splitA+0x1a>
    1952:	47 95       	ror	r20

00001954 <__fp_splitA>:
    1954:	88 0f       	add	r24, r24
    1956:	97 fb       	bst	r25, 7
    1958:	99 1f       	adc	r25, r25
    195a:	61 f0       	breq	.+24     	; 0x1974 <__fp_splitA+0x20>
    195c:	9f 3f       	cpi	r25, 0xFF	; 255
    195e:	79 f0       	breq	.+30     	; 0x197e <__fp_splitA+0x2a>
    1960:	87 95       	ror	r24
    1962:	08 95       	ret
    1964:	12 16       	cp	r1, r18
    1966:	13 06       	cpc	r1, r19
    1968:	14 06       	cpc	r1, r20
    196a:	55 1f       	adc	r21, r21
    196c:	f2 cf       	rjmp	.-28     	; 0x1952 <__fp_split3+0xe>
    196e:	46 95       	lsr	r20
    1970:	f1 df       	rcall	.-30     	; 0x1954 <__fp_splitA>
    1972:	08 c0       	rjmp	.+16     	; 0x1984 <__fp_splitA+0x30>
    1974:	16 16       	cp	r1, r22
    1976:	17 06       	cpc	r1, r23
    1978:	18 06       	cpc	r1, r24
    197a:	99 1f       	adc	r25, r25
    197c:	f1 cf       	rjmp	.-30     	; 0x1960 <__fp_splitA+0xc>
    197e:	86 95       	lsr	r24
    1980:	71 05       	cpc	r23, r1
    1982:	61 05       	cpc	r22, r1
    1984:	08 94       	sec
    1986:	08 95       	ret

00001988 <__fp_zero>:
    1988:	e8 94       	clt

0000198a <__fp_szero>:
    198a:	bb 27       	eor	r27, r27
    198c:	66 27       	eor	r22, r22
    198e:	77 27       	eor	r23, r23
    1990:	cb 01       	movw	r24, r22
    1992:	97 f9       	bld	r25, 7
    1994:	08 95       	ret

00001996 <__gesf2>:
    1996:	0e 94 3d 0d 	call	0x1a7a	; 0x1a7a <__fp_cmp>
    199a:	08 f4       	brcc	.+2      	; 0x199e <__gesf2+0x8>
    199c:	8f ef       	ldi	r24, 0xFF	; 255
    199e:	08 95       	ret

000019a0 <__mulsf3>:
    19a0:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <__mulsf3x>
    19a4:	0c 94 91 0c 	jmp	0x1922	; 0x1922 <__fp_round>
    19a8:	0e 94 83 0c 	call	0x1906	; 0x1906 <__fp_pscA>
    19ac:	38 f0       	brcs	.+14     	; 0x19bc <__mulsf3+0x1c>
    19ae:	0e 94 8a 0c 	call	0x1914	; 0x1914 <__fp_pscB>
    19b2:	20 f0       	brcs	.+8      	; 0x19bc <__mulsf3+0x1c>
    19b4:	95 23       	and	r25, r21
    19b6:	11 f0       	breq	.+4      	; 0x19bc <__mulsf3+0x1c>
    19b8:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__fp_inf>
    19bc:	0c 94 80 0c 	jmp	0x1900	; 0x1900 <__fp_nan>
    19c0:	11 24       	eor	r1, r1
    19c2:	0c 94 c5 0c 	jmp	0x198a	; 0x198a <__fp_szero>

000019c6 <__mulsf3x>:
    19c6:	0e 94 a2 0c 	call	0x1944	; 0x1944 <__fp_split3>
    19ca:	70 f3       	brcs	.-36     	; 0x19a8 <__mulsf3+0x8>

000019cc <__mulsf3_pse>:
    19cc:	95 9f       	mul	r25, r21
    19ce:	c1 f3       	breq	.-16     	; 0x19c0 <__mulsf3+0x20>
    19d0:	95 0f       	add	r25, r21
    19d2:	50 e0       	ldi	r21, 0x00	; 0
    19d4:	55 1f       	adc	r21, r21
    19d6:	62 9f       	mul	r22, r18
    19d8:	f0 01       	movw	r30, r0
    19da:	72 9f       	mul	r23, r18
    19dc:	bb 27       	eor	r27, r27
    19de:	f0 0d       	add	r31, r0
    19e0:	b1 1d       	adc	r27, r1
    19e2:	63 9f       	mul	r22, r19
    19e4:	aa 27       	eor	r26, r26
    19e6:	f0 0d       	add	r31, r0
    19e8:	b1 1d       	adc	r27, r1
    19ea:	aa 1f       	adc	r26, r26
    19ec:	64 9f       	mul	r22, r20
    19ee:	66 27       	eor	r22, r22
    19f0:	b0 0d       	add	r27, r0
    19f2:	a1 1d       	adc	r26, r1
    19f4:	66 1f       	adc	r22, r22
    19f6:	82 9f       	mul	r24, r18
    19f8:	22 27       	eor	r18, r18
    19fa:	b0 0d       	add	r27, r0
    19fc:	a1 1d       	adc	r26, r1
    19fe:	62 1f       	adc	r22, r18
    1a00:	73 9f       	mul	r23, r19
    1a02:	b0 0d       	add	r27, r0
    1a04:	a1 1d       	adc	r26, r1
    1a06:	62 1f       	adc	r22, r18
    1a08:	83 9f       	mul	r24, r19
    1a0a:	a0 0d       	add	r26, r0
    1a0c:	61 1d       	adc	r22, r1
    1a0e:	22 1f       	adc	r18, r18
    1a10:	74 9f       	mul	r23, r20
    1a12:	33 27       	eor	r19, r19
    1a14:	a0 0d       	add	r26, r0
    1a16:	61 1d       	adc	r22, r1
    1a18:	23 1f       	adc	r18, r19
    1a1a:	84 9f       	mul	r24, r20
    1a1c:	60 0d       	add	r22, r0
    1a1e:	21 1d       	adc	r18, r1
    1a20:	82 2f       	mov	r24, r18
    1a22:	76 2f       	mov	r23, r22
    1a24:	6a 2f       	mov	r22, r26
    1a26:	11 24       	eor	r1, r1
    1a28:	9f 57       	subi	r25, 0x7F	; 127
    1a2a:	50 40       	sbci	r21, 0x00	; 0
    1a2c:	9a f0       	brmi	.+38     	; 0x1a54 <__mulsf3_pse+0x88>
    1a2e:	f1 f0       	breq	.+60     	; 0x1a6c <__mulsf3_pse+0xa0>
    1a30:	88 23       	and	r24, r24
    1a32:	4a f0       	brmi	.+18     	; 0x1a46 <__mulsf3_pse+0x7a>
    1a34:	ee 0f       	add	r30, r30
    1a36:	ff 1f       	adc	r31, r31
    1a38:	bb 1f       	adc	r27, r27
    1a3a:	66 1f       	adc	r22, r22
    1a3c:	77 1f       	adc	r23, r23
    1a3e:	88 1f       	adc	r24, r24
    1a40:	91 50       	subi	r25, 0x01	; 1
    1a42:	50 40       	sbci	r21, 0x00	; 0
    1a44:	a9 f7       	brne	.-22     	; 0x1a30 <__mulsf3_pse+0x64>
    1a46:	9e 3f       	cpi	r25, 0xFE	; 254
    1a48:	51 05       	cpc	r21, r1
    1a4a:	80 f0       	brcs	.+32     	; 0x1a6c <__mulsf3_pse+0xa0>
    1a4c:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__fp_inf>
    1a50:	0c 94 c5 0c 	jmp	0x198a	; 0x198a <__fp_szero>
    1a54:	5f 3f       	cpi	r21, 0xFF	; 255
    1a56:	e4 f3       	brlt	.-8      	; 0x1a50 <__mulsf3_pse+0x84>
    1a58:	98 3e       	cpi	r25, 0xE8	; 232
    1a5a:	d4 f3       	brlt	.-12     	; 0x1a50 <__mulsf3_pse+0x84>
    1a5c:	86 95       	lsr	r24
    1a5e:	77 95       	ror	r23
    1a60:	67 95       	ror	r22
    1a62:	b7 95       	ror	r27
    1a64:	f7 95       	ror	r31
    1a66:	e7 95       	ror	r30
    1a68:	9f 5f       	subi	r25, 0xFF	; 255
    1a6a:	c1 f7       	brne	.-16     	; 0x1a5c <__mulsf3_pse+0x90>
    1a6c:	fe 2b       	or	r31, r30
    1a6e:	88 0f       	add	r24, r24
    1a70:	91 1d       	adc	r25, r1
    1a72:	96 95       	lsr	r25
    1a74:	87 95       	ror	r24
    1a76:	97 f9       	bld	r25, 7
    1a78:	08 95       	ret

00001a7a <__fp_cmp>:
    1a7a:	99 0f       	add	r25, r25
    1a7c:	00 08       	sbc	r0, r0
    1a7e:	55 0f       	add	r21, r21
    1a80:	aa 0b       	sbc	r26, r26
    1a82:	e0 e8       	ldi	r30, 0x80	; 128
    1a84:	fe ef       	ldi	r31, 0xFE	; 254
    1a86:	16 16       	cp	r1, r22
    1a88:	17 06       	cpc	r1, r23
    1a8a:	e8 07       	cpc	r30, r24
    1a8c:	f9 07       	cpc	r31, r25
    1a8e:	c0 f0       	brcs	.+48     	; 0x1ac0 <__fp_cmp+0x46>
    1a90:	12 16       	cp	r1, r18
    1a92:	13 06       	cpc	r1, r19
    1a94:	e4 07       	cpc	r30, r20
    1a96:	f5 07       	cpc	r31, r21
    1a98:	98 f0       	brcs	.+38     	; 0x1ac0 <__fp_cmp+0x46>
    1a9a:	62 1b       	sub	r22, r18
    1a9c:	73 0b       	sbc	r23, r19
    1a9e:	84 0b       	sbc	r24, r20
    1aa0:	95 0b       	sbc	r25, r21
    1aa2:	39 f4       	brne	.+14     	; 0x1ab2 <__fp_cmp+0x38>
    1aa4:	0a 26       	eor	r0, r26
    1aa6:	61 f0       	breq	.+24     	; 0x1ac0 <__fp_cmp+0x46>
    1aa8:	23 2b       	or	r18, r19
    1aaa:	24 2b       	or	r18, r20
    1aac:	25 2b       	or	r18, r21
    1aae:	21 f4       	brne	.+8      	; 0x1ab8 <__fp_cmp+0x3e>
    1ab0:	08 95       	ret
    1ab2:	0a 26       	eor	r0, r26
    1ab4:	09 f4       	brne	.+2      	; 0x1ab8 <__fp_cmp+0x3e>
    1ab6:	a1 40       	sbci	r26, 0x01	; 1
    1ab8:	a6 95       	lsr	r26
    1aba:	8f ef       	ldi	r24, 0xFF	; 255
    1abc:	81 1d       	adc	r24, r1
    1abe:	81 1d       	adc	r24, r1
    1ac0:	08 95       	ret

00001ac2 <vfprintf>:
    1ac2:	a0 e1       	ldi	r26, 0x10	; 16
    1ac4:	b0 e0       	ldi	r27, 0x00	; 0
    1ac6:	e7 e6       	ldi	r30, 0x67	; 103
    1ac8:	fd e0       	ldi	r31, 0x0D	; 13
    1aca:	0c 94 fd 10 	jmp	0x21fa	; 0x21fa <__prologue_saves__>
    1ace:	7c 01       	movw	r14, r24
    1ad0:	1b 01       	movw	r2, r22
    1ad2:	6a 01       	movw	r12, r20
    1ad4:	fc 01       	movw	r30, r24
    1ad6:	17 82       	std	Z+7, r1	; 0x07
    1ad8:	16 82       	std	Z+6, r1	; 0x06
    1ada:	83 81       	ldd	r24, Z+3	; 0x03
    1adc:	81 ff       	sbrs	r24, 1
    1ade:	44 c3       	rjmp	.+1672   	; 0x2168 <vfprintf+0x6a6>
    1ae0:	9e 01       	movw	r18, r28
    1ae2:	2f 5f       	subi	r18, 0xFF	; 255
    1ae4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ae6:	39 01       	movw	r6, r18
    1ae8:	f7 01       	movw	r30, r14
    1aea:	93 81       	ldd	r25, Z+3	; 0x03
    1aec:	f1 01       	movw	r30, r2
    1aee:	93 fd       	sbrc	r25, 3
    1af0:	85 91       	lpm	r24, Z+
    1af2:	93 ff       	sbrs	r25, 3
    1af4:	81 91       	ld	r24, Z+
    1af6:	1f 01       	movw	r2, r30
    1af8:	88 23       	and	r24, r24
    1afa:	09 f4       	brne	.+2      	; 0x1afe <vfprintf+0x3c>
    1afc:	31 c3       	rjmp	.+1634   	; 0x2160 <vfprintf+0x69e>
    1afe:	85 32       	cpi	r24, 0x25	; 37
    1b00:	39 f4       	brne	.+14     	; 0x1b10 <vfprintf+0x4e>
    1b02:	93 fd       	sbrc	r25, 3
    1b04:	85 91       	lpm	r24, Z+
    1b06:	93 ff       	sbrs	r25, 3
    1b08:	81 91       	ld	r24, Z+
    1b0a:	1f 01       	movw	r2, r30
    1b0c:	85 32       	cpi	r24, 0x25	; 37
    1b0e:	39 f4       	brne	.+14     	; 0x1b1e <vfprintf+0x5c>
    1b10:	b7 01       	movw	r22, r14
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1b18:	56 01       	movw	r10, r12
    1b1a:	65 01       	movw	r12, r10
    1b1c:	e5 cf       	rjmp	.-54     	; 0x1ae8 <vfprintf+0x26>
    1b1e:	10 e0       	ldi	r17, 0x00	; 0
    1b20:	51 2c       	mov	r5, r1
    1b22:	91 2c       	mov	r9, r1
    1b24:	ff e1       	ldi	r31, 0x1F	; 31
    1b26:	f9 15       	cp	r31, r9
    1b28:	d8 f0       	brcs	.+54     	; 0x1b60 <vfprintf+0x9e>
    1b2a:	8b 32       	cpi	r24, 0x2B	; 43
    1b2c:	79 f0       	breq	.+30     	; 0x1b4c <vfprintf+0x8a>
    1b2e:	38 f4       	brcc	.+14     	; 0x1b3e <vfprintf+0x7c>
    1b30:	80 32       	cpi	r24, 0x20	; 32
    1b32:	79 f0       	breq	.+30     	; 0x1b52 <vfprintf+0x90>
    1b34:	83 32       	cpi	r24, 0x23	; 35
    1b36:	a1 f4       	brne	.+40     	; 0x1b60 <vfprintf+0x9e>
    1b38:	f9 2d       	mov	r31, r9
    1b3a:	f0 61       	ori	r31, 0x10	; 16
    1b3c:	2e c0       	rjmp	.+92     	; 0x1b9a <vfprintf+0xd8>
    1b3e:	8d 32       	cpi	r24, 0x2D	; 45
    1b40:	61 f0       	breq	.+24     	; 0x1b5a <vfprintf+0x98>
    1b42:	80 33       	cpi	r24, 0x30	; 48
    1b44:	69 f4       	brne	.+26     	; 0x1b60 <vfprintf+0x9e>
    1b46:	29 2d       	mov	r18, r9
    1b48:	21 60       	ori	r18, 0x01	; 1
    1b4a:	2d c0       	rjmp	.+90     	; 0x1ba6 <vfprintf+0xe4>
    1b4c:	39 2d       	mov	r19, r9
    1b4e:	32 60       	ori	r19, 0x02	; 2
    1b50:	93 2e       	mov	r9, r19
    1b52:	89 2d       	mov	r24, r9
    1b54:	84 60       	ori	r24, 0x04	; 4
    1b56:	98 2e       	mov	r9, r24
    1b58:	2a c0       	rjmp	.+84     	; 0x1bae <vfprintf+0xec>
    1b5a:	e9 2d       	mov	r30, r9
    1b5c:	e8 60       	ori	r30, 0x08	; 8
    1b5e:	15 c0       	rjmp	.+42     	; 0x1b8a <vfprintf+0xc8>
    1b60:	97 fc       	sbrc	r9, 7
    1b62:	2d c0       	rjmp	.+90     	; 0x1bbe <vfprintf+0xfc>
    1b64:	20 ed       	ldi	r18, 0xD0	; 208
    1b66:	28 0f       	add	r18, r24
    1b68:	2a 30       	cpi	r18, 0x0A	; 10
    1b6a:	88 f4       	brcc	.+34     	; 0x1b8e <vfprintf+0xcc>
    1b6c:	96 fe       	sbrs	r9, 6
    1b6e:	06 c0       	rjmp	.+12     	; 0x1b7c <vfprintf+0xba>
    1b70:	3a e0       	ldi	r19, 0x0A	; 10
    1b72:	13 9f       	mul	r17, r19
    1b74:	20 0d       	add	r18, r0
    1b76:	11 24       	eor	r1, r1
    1b78:	12 2f       	mov	r17, r18
    1b7a:	19 c0       	rjmp	.+50     	; 0x1bae <vfprintf+0xec>
    1b7c:	8a e0       	ldi	r24, 0x0A	; 10
    1b7e:	58 9e       	mul	r5, r24
    1b80:	20 0d       	add	r18, r0
    1b82:	11 24       	eor	r1, r1
    1b84:	52 2e       	mov	r5, r18
    1b86:	e9 2d       	mov	r30, r9
    1b88:	e0 62       	ori	r30, 0x20	; 32
    1b8a:	9e 2e       	mov	r9, r30
    1b8c:	10 c0       	rjmp	.+32     	; 0x1bae <vfprintf+0xec>
    1b8e:	8e 32       	cpi	r24, 0x2E	; 46
    1b90:	31 f4       	brne	.+12     	; 0x1b9e <vfprintf+0xdc>
    1b92:	96 fc       	sbrc	r9, 6
    1b94:	e5 c2       	rjmp	.+1482   	; 0x2160 <vfprintf+0x69e>
    1b96:	f9 2d       	mov	r31, r9
    1b98:	f0 64       	ori	r31, 0x40	; 64
    1b9a:	9f 2e       	mov	r9, r31
    1b9c:	08 c0       	rjmp	.+16     	; 0x1bae <vfprintf+0xec>
    1b9e:	8c 36       	cpi	r24, 0x6C	; 108
    1ba0:	21 f4       	brne	.+8      	; 0x1baa <vfprintf+0xe8>
    1ba2:	29 2d       	mov	r18, r9
    1ba4:	20 68       	ori	r18, 0x80	; 128
    1ba6:	92 2e       	mov	r9, r18
    1ba8:	02 c0       	rjmp	.+4      	; 0x1bae <vfprintf+0xec>
    1baa:	88 36       	cpi	r24, 0x68	; 104
    1bac:	41 f4       	brne	.+16     	; 0x1bbe <vfprintf+0xfc>
    1bae:	f1 01       	movw	r30, r2
    1bb0:	93 fd       	sbrc	r25, 3
    1bb2:	85 91       	lpm	r24, Z+
    1bb4:	93 ff       	sbrs	r25, 3
    1bb6:	81 91       	ld	r24, Z+
    1bb8:	1f 01       	movw	r2, r30
    1bba:	81 11       	cpse	r24, r1
    1bbc:	b3 cf       	rjmp	.-154    	; 0x1b24 <vfprintf+0x62>
    1bbe:	9b eb       	ldi	r25, 0xBB	; 187
    1bc0:	98 0f       	add	r25, r24
    1bc2:	93 30       	cpi	r25, 0x03	; 3
    1bc4:	20 f4       	brcc	.+8      	; 0x1bce <vfprintf+0x10c>
    1bc6:	99 2d       	mov	r25, r9
    1bc8:	90 61       	ori	r25, 0x10	; 16
    1bca:	80 5e       	subi	r24, 0xE0	; 224
    1bcc:	07 c0       	rjmp	.+14     	; 0x1bdc <vfprintf+0x11a>
    1bce:	9b e9       	ldi	r25, 0x9B	; 155
    1bd0:	98 0f       	add	r25, r24
    1bd2:	93 30       	cpi	r25, 0x03	; 3
    1bd4:	08 f0       	brcs	.+2      	; 0x1bd8 <vfprintf+0x116>
    1bd6:	66 c1       	rjmp	.+716    	; 0x1ea4 <vfprintf+0x3e2>
    1bd8:	99 2d       	mov	r25, r9
    1bda:	9f 7e       	andi	r25, 0xEF	; 239
    1bdc:	96 ff       	sbrs	r25, 6
    1bde:	16 e0       	ldi	r17, 0x06	; 6
    1be0:	9f 73       	andi	r25, 0x3F	; 63
    1be2:	99 2e       	mov	r9, r25
    1be4:	85 36       	cpi	r24, 0x65	; 101
    1be6:	19 f4       	brne	.+6      	; 0x1bee <vfprintf+0x12c>
    1be8:	90 64       	ori	r25, 0x40	; 64
    1bea:	99 2e       	mov	r9, r25
    1bec:	08 c0       	rjmp	.+16     	; 0x1bfe <vfprintf+0x13c>
    1bee:	86 36       	cpi	r24, 0x66	; 102
    1bf0:	21 f4       	brne	.+8      	; 0x1bfa <vfprintf+0x138>
    1bf2:	39 2f       	mov	r19, r25
    1bf4:	30 68       	ori	r19, 0x80	; 128
    1bf6:	93 2e       	mov	r9, r19
    1bf8:	02 c0       	rjmp	.+4      	; 0x1bfe <vfprintf+0x13c>
    1bfa:	11 11       	cpse	r17, r1
    1bfc:	11 50       	subi	r17, 0x01	; 1
    1bfe:	97 fe       	sbrs	r9, 7
    1c00:	07 c0       	rjmp	.+14     	; 0x1c10 <vfprintf+0x14e>
    1c02:	1c 33       	cpi	r17, 0x3C	; 60
    1c04:	50 f4       	brcc	.+20     	; 0x1c1a <vfprintf+0x158>
    1c06:	44 24       	eor	r4, r4
    1c08:	43 94       	inc	r4
    1c0a:	41 0e       	add	r4, r17
    1c0c:	27 e0       	ldi	r18, 0x07	; 7
    1c0e:	0b c0       	rjmp	.+22     	; 0x1c26 <vfprintf+0x164>
    1c10:	18 30       	cpi	r17, 0x08	; 8
    1c12:	38 f0       	brcs	.+14     	; 0x1c22 <vfprintf+0x160>
    1c14:	27 e0       	ldi	r18, 0x07	; 7
    1c16:	17 e0       	ldi	r17, 0x07	; 7
    1c18:	05 c0       	rjmp	.+10     	; 0x1c24 <vfprintf+0x162>
    1c1a:	27 e0       	ldi	r18, 0x07	; 7
    1c1c:	9c e3       	ldi	r25, 0x3C	; 60
    1c1e:	49 2e       	mov	r4, r25
    1c20:	02 c0       	rjmp	.+4      	; 0x1c26 <vfprintf+0x164>
    1c22:	21 2f       	mov	r18, r17
    1c24:	41 2c       	mov	r4, r1
    1c26:	56 01       	movw	r10, r12
    1c28:	84 e0       	ldi	r24, 0x04	; 4
    1c2a:	a8 0e       	add	r10, r24
    1c2c:	b1 1c       	adc	r11, r1
    1c2e:	f6 01       	movw	r30, r12
    1c30:	60 81       	ld	r22, Z
    1c32:	71 81       	ldd	r23, Z+1	; 0x01
    1c34:	82 81       	ldd	r24, Z+2	; 0x02
    1c36:	93 81       	ldd	r25, Z+3	; 0x03
    1c38:	04 2d       	mov	r16, r4
    1c3a:	a3 01       	movw	r20, r6
    1c3c:	0e 94 56 11 	call	0x22ac	; 0x22ac <__ftoa_engine>
    1c40:	6c 01       	movw	r12, r24
    1c42:	f9 81       	ldd	r31, Y+1	; 0x01
    1c44:	fc 87       	std	Y+12, r31	; 0x0c
    1c46:	f0 ff       	sbrs	r31, 0
    1c48:	02 c0       	rjmp	.+4      	; 0x1c4e <vfprintf+0x18c>
    1c4a:	f3 ff       	sbrs	r31, 3
    1c4c:	06 c0       	rjmp	.+12     	; 0x1c5a <vfprintf+0x198>
    1c4e:	91 fc       	sbrc	r9, 1
    1c50:	06 c0       	rjmp	.+12     	; 0x1c5e <vfprintf+0x19c>
    1c52:	92 fe       	sbrs	r9, 2
    1c54:	06 c0       	rjmp	.+12     	; 0x1c62 <vfprintf+0x1a0>
    1c56:	00 e2       	ldi	r16, 0x20	; 32
    1c58:	05 c0       	rjmp	.+10     	; 0x1c64 <vfprintf+0x1a2>
    1c5a:	0d e2       	ldi	r16, 0x2D	; 45
    1c5c:	03 c0       	rjmp	.+6      	; 0x1c64 <vfprintf+0x1a2>
    1c5e:	0b e2       	ldi	r16, 0x2B	; 43
    1c60:	01 c0       	rjmp	.+2      	; 0x1c64 <vfprintf+0x1a2>
    1c62:	00 e0       	ldi	r16, 0x00	; 0
    1c64:	8c 85       	ldd	r24, Y+12	; 0x0c
    1c66:	8c 70       	andi	r24, 0x0C	; 12
    1c68:	19 f0       	breq	.+6      	; 0x1c70 <vfprintf+0x1ae>
    1c6a:	01 11       	cpse	r16, r1
    1c6c:	5a c2       	rjmp	.+1204   	; 0x2122 <vfprintf+0x660>
    1c6e:	9b c2       	rjmp	.+1334   	; 0x21a6 <vfprintf+0x6e4>
    1c70:	97 fe       	sbrs	r9, 7
    1c72:	10 c0       	rjmp	.+32     	; 0x1c94 <vfprintf+0x1d2>
    1c74:	4c 0c       	add	r4, r12
    1c76:	fc 85       	ldd	r31, Y+12	; 0x0c
    1c78:	f4 ff       	sbrs	r31, 4
    1c7a:	04 c0       	rjmp	.+8      	; 0x1c84 <vfprintf+0x1c2>
    1c7c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c7e:	81 33       	cpi	r24, 0x31	; 49
    1c80:	09 f4       	brne	.+2      	; 0x1c84 <vfprintf+0x1c2>
    1c82:	4a 94       	dec	r4
    1c84:	14 14       	cp	r1, r4
    1c86:	74 f5       	brge	.+92     	; 0x1ce4 <vfprintf+0x222>
    1c88:	28 e0       	ldi	r18, 0x08	; 8
    1c8a:	24 15       	cp	r18, r4
    1c8c:	78 f5       	brcc	.+94     	; 0x1cec <vfprintf+0x22a>
    1c8e:	88 e0       	ldi	r24, 0x08	; 8
    1c90:	48 2e       	mov	r4, r24
    1c92:	2c c0       	rjmp	.+88     	; 0x1cec <vfprintf+0x22a>
    1c94:	96 fc       	sbrc	r9, 6
    1c96:	2a c0       	rjmp	.+84     	; 0x1cec <vfprintf+0x22a>
    1c98:	81 2f       	mov	r24, r17
    1c9a:	90 e0       	ldi	r25, 0x00	; 0
    1c9c:	8c 15       	cp	r24, r12
    1c9e:	9d 05       	cpc	r25, r13
    1ca0:	9c f0       	brlt	.+38     	; 0x1cc8 <vfprintf+0x206>
    1ca2:	3c ef       	ldi	r19, 0xFC	; 252
    1ca4:	c3 16       	cp	r12, r19
    1ca6:	3f ef       	ldi	r19, 0xFF	; 255
    1ca8:	d3 06       	cpc	r13, r19
    1caa:	74 f0       	brlt	.+28     	; 0x1cc8 <vfprintf+0x206>
    1cac:	89 2d       	mov	r24, r9
    1cae:	80 68       	ori	r24, 0x80	; 128
    1cb0:	98 2e       	mov	r9, r24
    1cb2:	0a c0       	rjmp	.+20     	; 0x1cc8 <vfprintf+0x206>
    1cb4:	e2 e0       	ldi	r30, 0x02	; 2
    1cb6:	f0 e0       	ldi	r31, 0x00	; 0
    1cb8:	ec 0f       	add	r30, r28
    1cba:	fd 1f       	adc	r31, r29
    1cbc:	e1 0f       	add	r30, r17
    1cbe:	f1 1d       	adc	r31, r1
    1cc0:	80 81       	ld	r24, Z
    1cc2:	80 33       	cpi	r24, 0x30	; 48
    1cc4:	19 f4       	brne	.+6      	; 0x1ccc <vfprintf+0x20a>
    1cc6:	11 50       	subi	r17, 0x01	; 1
    1cc8:	11 11       	cpse	r17, r1
    1cca:	f4 cf       	rjmp	.-24     	; 0x1cb4 <vfprintf+0x1f2>
    1ccc:	97 fe       	sbrs	r9, 7
    1cce:	0e c0       	rjmp	.+28     	; 0x1cec <vfprintf+0x22a>
    1cd0:	44 24       	eor	r4, r4
    1cd2:	43 94       	inc	r4
    1cd4:	41 0e       	add	r4, r17
    1cd6:	81 2f       	mov	r24, r17
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	c8 16       	cp	r12, r24
    1cdc:	d9 06       	cpc	r13, r25
    1cde:	2c f4       	brge	.+10     	; 0x1cea <vfprintf+0x228>
    1ce0:	1c 19       	sub	r17, r12
    1ce2:	04 c0       	rjmp	.+8      	; 0x1cec <vfprintf+0x22a>
    1ce4:	44 24       	eor	r4, r4
    1ce6:	43 94       	inc	r4
    1ce8:	01 c0       	rjmp	.+2      	; 0x1cec <vfprintf+0x22a>
    1cea:	10 e0       	ldi	r17, 0x00	; 0
    1cec:	97 fe       	sbrs	r9, 7
    1cee:	06 c0       	rjmp	.+12     	; 0x1cfc <vfprintf+0x23a>
    1cf0:	1c 14       	cp	r1, r12
    1cf2:	1d 04       	cpc	r1, r13
    1cf4:	34 f4       	brge	.+12     	; 0x1d02 <vfprintf+0x240>
    1cf6:	c6 01       	movw	r24, r12
    1cf8:	01 96       	adiw	r24, 0x01	; 1
    1cfa:	05 c0       	rjmp	.+10     	; 0x1d06 <vfprintf+0x244>
    1cfc:	85 e0       	ldi	r24, 0x05	; 5
    1cfe:	90 e0       	ldi	r25, 0x00	; 0
    1d00:	02 c0       	rjmp	.+4      	; 0x1d06 <vfprintf+0x244>
    1d02:	81 e0       	ldi	r24, 0x01	; 1
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	01 11       	cpse	r16, r1
    1d08:	01 96       	adiw	r24, 0x01	; 1
    1d0a:	11 23       	and	r17, r17
    1d0c:	31 f0       	breq	.+12     	; 0x1d1a <vfprintf+0x258>
    1d0e:	21 2f       	mov	r18, r17
    1d10:	30 e0       	ldi	r19, 0x00	; 0
    1d12:	2f 5f       	subi	r18, 0xFF	; 255
    1d14:	3f 4f       	sbci	r19, 0xFF	; 255
    1d16:	82 0f       	add	r24, r18
    1d18:	93 1f       	adc	r25, r19
    1d1a:	25 2d       	mov	r18, r5
    1d1c:	30 e0       	ldi	r19, 0x00	; 0
    1d1e:	82 17       	cp	r24, r18
    1d20:	93 07       	cpc	r25, r19
    1d22:	14 f4       	brge	.+4      	; 0x1d28 <vfprintf+0x266>
    1d24:	58 1a       	sub	r5, r24
    1d26:	01 c0       	rjmp	.+2      	; 0x1d2a <vfprintf+0x268>
    1d28:	51 2c       	mov	r5, r1
    1d2a:	89 2d       	mov	r24, r9
    1d2c:	89 70       	andi	r24, 0x09	; 9
    1d2e:	49 f4       	brne	.+18     	; 0x1d42 <vfprintf+0x280>
    1d30:	55 20       	and	r5, r5
    1d32:	39 f0       	breq	.+14     	; 0x1d42 <vfprintf+0x280>
    1d34:	b7 01       	movw	r22, r14
    1d36:	80 e2       	ldi	r24, 0x20	; 32
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1d3e:	5a 94       	dec	r5
    1d40:	f7 cf       	rjmp	.-18     	; 0x1d30 <vfprintf+0x26e>
    1d42:	00 23       	and	r16, r16
    1d44:	29 f0       	breq	.+10     	; 0x1d50 <vfprintf+0x28e>
    1d46:	b7 01       	movw	r22, r14
    1d48:	80 2f       	mov	r24, r16
    1d4a:	90 e0       	ldi	r25, 0x00	; 0
    1d4c:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1d50:	93 fc       	sbrc	r9, 3
    1d52:	09 c0       	rjmp	.+18     	; 0x1d66 <vfprintf+0x2a4>
    1d54:	55 20       	and	r5, r5
    1d56:	39 f0       	breq	.+14     	; 0x1d66 <vfprintf+0x2a4>
    1d58:	b7 01       	movw	r22, r14
    1d5a:	80 e3       	ldi	r24, 0x30	; 48
    1d5c:	90 e0       	ldi	r25, 0x00	; 0
    1d5e:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1d62:	5a 94       	dec	r5
    1d64:	f7 cf       	rjmp	.-18     	; 0x1d54 <vfprintf+0x292>
    1d66:	97 fe       	sbrs	r9, 7
    1d68:	4c c0       	rjmp	.+152    	; 0x1e02 <vfprintf+0x340>
    1d6a:	46 01       	movw	r8, r12
    1d6c:	d7 fe       	sbrs	r13, 7
    1d6e:	02 c0       	rjmp	.+4      	; 0x1d74 <vfprintf+0x2b2>
    1d70:	81 2c       	mov	r8, r1
    1d72:	91 2c       	mov	r9, r1
    1d74:	c6 01       	movw	r24, r12
    1d76:	88 19       	sub	r24, r8
    1d78:	99 09       	sbc	r25, r9
    1d7a:	f3 01       	movw	r30, r6
    1d7c:	e8 0f       	add	r30, r24
    1d7e:	f9 1f       	adc	r31, r25
    1d80:	fe 87       	std	Y+14, r31	; 0x0e
    1d82:	ed 87       	std	Y+13, r30	; 0x0d
    1d84:	96 01       	movw	r18, r12
    1d86:	24 19       	sub	r18, r4
    1d88:	31 09       	sbc	r19, r1
    1d8a:	38 8b       	std	Y+16, r19	; 0x10
    1d8c:	2f 87       	std	Y+15, r18	; 0x0f
    1d8e:	01 2f       	mov	r16, r17
    1d90:	10 e0       	ldi	r17, 0x00	; 0
    1d92:	11 95       	neg	r17
    1d94:	01 95       	neg	r16
    1d96:	11 09       	sbc	r17, r1
    1d98:	3f ef       	ldi	r19, 0xFF	; 255
    1d9a:	83 16       	cp	r8, r19
    1d9c:	93 06       	cpc	r9, r19
    1d9e:	29 f4       	brne	.+10     	; 0x1daa <vfprintf+0x2e8>
    1da0:	b7 01       	movw	r22, r14
    1da2:	8e e2       	ldi	r24, 0x2E	; 46
    1da4:	90 e0       	ldi	r25, 0x00	; 0
    1da6:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1daa:	c8 14       	cp	r12, r8
    1dac:	d9 04       	cpc	r13, r9
    1dae:	4c f0       	brlt	.+18     	; 0x1dc2 <vfprintf+0x300>
    1db0:	8f 85       	ldd	r24, Y+15	; 0x0f
    1db2:	98 89       	ldd	r25, Y+16	; 0x10
    1db4:	88 15       	cp	r24, r8
    1db6:	99 05       	cpc	r25, r9
    1db8:	24 f4       	brge	.+8      	; 0x1dc2 <vfprintf+0x300>
    1dba:	ed 85       	ldd	r30, Y+13	; 0x0d
    1dbc:	fe 85       	ldd	r31, Y+14	; 0x0e
    1dbe:	81 81       	ldd	r24, Z+1	; 0x01
    1dc0:	01 c0       	rjmp	.+2      	; 0x1dc4 <vfprintf+0x302>
    1dc2:	80 e3       	ldi	r24, 0x30	; 48
    1dc4:	f1 e0       	ldi	r31, 0x01	; 1
    1dc6:	8f 1a       	sub	r8, r31
    1dc8:	91 08       	sbc	r9, r1
    1dca:	2d 85       	ldd	r18, Y+13	; 0x0d
    1dcc:	3e 85       	ldd	r19, Y+14	; 0x0e
    1dce:	2f 5f       	subi	r18, 0xFF	; 255
    1dd0:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd2:	3e 87       	std	Y+14, r19	; 0x0e
    1dd4:	2d 87       	std	Y+13, r18	; 0x0d
    1dd6:	80 16       	cp	r8, r16
    1dd8:	91 06       	cpc	r9, r17
    1dda:	2c f0       	brlt	.+10     	; 0x1de6 <vfprintf+0x324>
    1ddc:	b7 01       	movw	r22, r14
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1de4:	d9 cf       	rjmp	.-78     	; 0x1d98 <vfprintf+0x2d6>
    1de6:	c8 14       	cp	r12, r8
    1de8:	d9 04       	cpc	r13, r9
    1dea:	41 f4       	brne	.+16     	; 0x1dfc <vfprintf+0x33a>
    1dec:	9a 81       	ldd	r25, Y+2	; 0x02
    1dee:	96 33       	cpi	r25, 0x36	; 54
    1df0:	20 f4       	brcc	.+8      	; 0x1dfa <vfprintf+0x338>
    1df2:	95 33       	cpi	r25, 0x35	; 53
    1df4:	19 f4       	brne	.+6      	; 0x1dfc <vfprintf+0x33a>
    1df6:	3c 85       	ldd	r19, Y+12	; 0x0c
    1df8:	34 ff       	sbrs	r19, 4
    1dfa:	81 e3       	ldi	r24, 0x31	; 49
    1dfc:	b7 01       	movw	r22, r14
    1dfe:	90 e0       	ldi	r25, 0x00	; 0
    1e00:	4e c0       	rjmp	.+156    	; 0x1e9e <vfprintf+0x3dc>
    1e02:	8a 81       	ldd	r24, Y+2	; 0x02
    1e04:	81 33       	cpi	r24, 0x31	; 49
    1e06:	19 f0       	breq	.+6      	; 0x1e0e <vfprintf+0x34c>
    1e08:	9c 85       	ldd	r25, Y+12	; 0x0c
    1e0a:	9f 7e       	andi	r25, 0xEF	; 239
    1e0c:	9c 87       	std	Y+12, r25	; 0x0c
    1e0e:	b7 01       	movw	r22, r14
    1e10:	90 e0       	ldi	r25, 0x00	; 0
    1e12:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1e16:	11 11       	cpse	r17, r1
    1e18:	05 c0       	rjmp	.+10     	; 0x1e24 <vfprintf+0x362>
    1e1a:	94 fc       	sbrc	r9, 4
    1e1c:	18 c0       	rjmp	.+48     	; 0x1e4e <vfprintf+0x38c>
    1e1e:	85 e6       	ldi	r24, 0x65	; 101
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	17 c0       	rjmp	.+46     	; 0x1e52 <vfprintf+0x390>
    1e24:	b7 01       	movw	r22, r14
    1e26:	8e e2       	ldi	r24, 0x2E	; 46
    1e28:	90 e0       	ldi	r25, 0x00	; 0
    1e2a:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1e2e:	1e 5f       	subi	r17, 0xFE	; 254
    1e30:	82 e0       	ldi	r24, 0x02	; 2
    1e32:	01 e0       	ldi	r16, 0x01	; 1
    1e34:	08 0f       	add	r16, r24
    1e36:	f3 01       	movw	r30, r6
    1e38:	e8 0f       	add	r30, r24
    1e3a:	f1 1d       	adc	r31, r1
    1e3c:	80 81       	ld	r24, Z
    1e3e:	b7 01       	movw	r22, r14
    1e40:	90 e0       	ldi	r25, 0x00	; 0
    1e42:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1e46:	80 2f       	mov	r24, r16
    1e48:	01 13       	cpse	r16, r17
    1e4a:	f3 cf       	rjmp	.-26     	; 0x1e32 <vfprintf+0x370>
    1e4c:	e6 cf       	rjmp	.-52     	; 0x1e1a <vfprintf+0x358>
    1e4e:	85 e4       	ldi	r24, 0x45	; 69
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	b7 01       	movw	r22, r14
    1e54:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1e58:	d7 fc       	sbrc	r13, 7
    1e5a:	06 c0       	rjmp	.+12     	; 0x1e68 <vfprintf+0x3a6>
    1e5c:	c1 14       	cp	r12, r1
    1e5e:	d1 04       	cpc	r13, r1
    1e60:	41 f4       	brne	.+16     	; 0x1e72 <vfprintf+0x3b0>
    1e62:	ec 85       	ldd	r30, Y+12	; 0x0c
    1e64:	e4 ff       	sbrs	r30, 4
    1e66:	05 c0       	rjmp	.+10     	; 0x1e72 <vfprintf+0x3b0>
    1e68:	d1 94       	neg	r13
    1e6a:	c1 94       	neg	r12
    1e6c:	d1 08       	sbc	r13, r1
    1e6e:	8d e2       	ldi	r24, 0x2D	; 45
    1e70:	01 c0       	rjmp	.+2      	; 0x1e74 <vfprintf+0x3b2>
    1e72:	8b e2       	ldi	r24, 0x2B	; 43
    1e74:	b7 01       	movw	r22, r14
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1e7c:	80 e3       	ldi	r24, 0x30	; 48
    1e7e:	2a e0       	ldi	r18, 0x0A	; 10
    1e80:	c2 16       	cp	r12, r18
    1e82:	d1 04       	cpc	r13, r1
    1e84:	2c f0       	brlt	.+10     	; 0x1e90 <vfprintf+0x3ce>
    1e86:	8f 5f       	subi	r24, 0xFF	; 255
    1e88:	fa e0       	ldi	r31, 0x0A	; 10
    1e8a:	cf 1a       	sub	r12, r31
    1e8c:	d1 08       	sbc	r13, r1
    1e8e:	f7 cf       	rjmp	.-18     	; 0x1e7e <vfprintf+0x3bc>
    1e90:	b7 01       	movw	r22, r14
    1e92:	90 e0       	ldi	r25, 0x00	; 0
    1e94:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1e98:	b7 01       	movw	r22, r14
    1e9a:	c6 01       	movw	r24, r12
    1e9c:	c0 96       	adiw	r24, 0x30	; 48
    1e9e:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1ea2:	54 c1       	rjmp	.+680    	; 0x214c <vfprintf+0x68a>
    1ea4:	83 36       	cpi	r24, 0x63	; 99
    1ea6:	31 f0       	breq	.+12     	; 0x1eb4 <vfprintf+0x3f2>
    1ea8:	83 37       	cpi	r24, 0x73	; 115
    1eaa:	79 f0       	breq	.+30     	; 0x1eca <vfprintf+0x408>
    1eac:	83 35       	cpi	r24, 0x53	; 83
    1eae:	09 f0       	breq	.+2      	; 0x1eb2 <vfprintf+0x3f0>
    1eb0:	56 c0       	rjmp	.+172    	; 0x1f5e <vfprintf+0x49c>
    1eb2:	20 c0       	rjmp	.+64     	; 0x1ef4 <vfprintf+0x432>
    1eb4:	56 01       	movw	r10, r12
    1eb6:	32 e0       	ldi	r19, 0x02	; 2
    1eb8:	a3 0e       	add	r10, r19
    1eba:	b1 1c       	adc	r11, r1
    1ebc:	f6 01       	movw	r30, r12
    1ebe:	80 81       	ld	r24, Z
    1ec0:	89 83       	std	Y+1, r24	; 0x01
    1ec2:	01 e0       	ldi	r16, 0x01	; 1
    1ec4:	10 e0       	ldi	r17, 0x00	; 0
    1ec6:	63 01       	movw	r12, r6
    1ec8:	12 c0       	rjmp	.+36     	; 0x1eee <vfprintf+0x42c>
    1eca:	56 01       	movw	r10, r12
    1ecc:	f2 e0       	ldi	r31, 0x02	; 2
    1ece:	af 0e       	add	r10, r31
    1ed0:	b1 1c       	adc	r11, r1
    1ed2:	f6 01       	movw	r30, r12
    1ed4:	c0 80       	ld	r12, Z
    1ed6:	d1 80       	ldd	r13, Z+1	; 0x01
    1ed8:	96 fe       	sbrs	r9, 6
    1eda:	03 c0       	rjmp	.+6      	; 0x1ee2 <vfprintf+0x420>
    1edc:	61 2f       	mov	r22, r17
    1ede:	70 e0       	ldi	r23, 0x00	; 0
    1ee0:	02 c0       	rjmp	.+4      	; 0x1ee6 <vfprintf+0x424>
    1ee2:	6f ef       	ldi	r22, 0xFF	; 255
    1ee4:	7f ef       	ldi	r23, 0xFF	; 255
    1ee6:	c6 01       	movw	r24, r12
    1ee8:	0e 94 39 12 	call	0x2472	; 0x2472 <strnlen>
    1eec:	8c 01       	movw	r16, r24
    1eee:	f9 2d       	mov	r31, r9
    1ef0:	ff 77       	andi	r31, 0x7F	; 127
    1ef2:	14 c0       	rjmp	.+40     	; 0x1f1c <vfprintf+0x45a>
    1ef4:	56 01       	movw	r10, r12
    1ef6:	22 e0       	ldi	r18, 0x02	; 2
    1ef8:	a2 0e       	add	r10, r18
    1efa:	b1 1c       	adc	r11, r1
    1efc:	f6 01       	movw	r30, r12
    1efe:	c0 80       	ld	r12, Z
    1f00:	d1 80       	ldd	r13, Z+1	; 0x01
    1f02:	96 fe       	sbrs	r9, 6
    1f04:	03 c0       	rjmp	.+6      	; 0x1f0c <vfprintf+0x44a>
    1f06:	61 2f       	mov	r22, r17
    1f08:	70 e0       	ldi	r23, 0x00	; 0
    1f0a:	02 c0       	rjmp	.+4      	; 0x1f10 <vfprintf+0x44e>
    1f0c:	6f ef       	ldi	r22, 0xFF	; 255
    1f0e:	7f ef       	ldi	r23, 0xFF	; 255
    1f10:	c6 01       	movw	r24, r12
    1f12:	0e 94 2e 12 	call	0x245c	; 0x245c <strnlen_P>
    1f16:	8c 01       	movw	r16, r24
    1f18:	f9 2d       	mov	r31, r9
    1f1a:	f0 68       	ori	r31, 0x80	; 128
    1f1c:	9f 2e       	mov	r9, r31
    1f1e:	f3 fd       	sbrc	r31, 3
    1f20:	1a c0       	rjmp	.+52     	; 0x1f56 <vfprintf+0x494>
    1f22:	85 2d       	mov	r24, r5
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	08 17       	cp	r16, r24
    1f28:	19 07       	cpc	r17, r25
    1f2a:	a8 f4       	brcc	.+42     	; 0x1f56 <vfprintf+0x494>
    1f2c:	b7 01       	movw	r22, r14
    1f2e:	80 e2       	ldi	r24, 0x20	; 32
    1f30:	90 e0       	ldi	r25, 0x00	; 0
    1f32:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1f36:	5a 94       	dec	r5
    1f38:	f4 cf       	rjmp	.-24     	; 0x1f22 <vfprintf+0x460>
    1f3a:	f6 01       	movw	r30, r12
    1f3c:	97 fc       	sbrc	r9, 7
    1f3e:	85 91       	lpm	r24, Z+
    1f40:	97 fe       	sbrs	r9, 7
    1f42:	81 91       	ld	r24, Z+
    1f44:	6f 01       	movw	r12, r30
    1f46:	b7 01       	movw	r22, r14
    1f48:	90 e0       	ldi	r25, 0x00	; 0
    1f4a:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    1f4e:	51 10       	cpse	r5, r1
    1f50:	5a 94       	dec	r5
    1f52:	01 50       	subi	r16, 0x01	; 1
    1f54:	11 09       	sbc	r17, r1
    1f56:	01 15       	cp	r16, r1
    1f58:	11 05       	cpc	r17, r1
    1f5a:	79 f7       	brne	.-34     	; 0x1f3a <vfprintf+0x478>
    1f5c:	f7 c0       	rjmp	.+494    	; 0x214c <vfprintf+0x68a>
    1f5e:	84 36       	cpi	r24, 0x64	; 100
    1f60:	11 f0       	breq	.+4      	; 0x1f66 <vfprintf+0x4a4>
    1f62:	89 36       	cpi	r24, 0x69	; 105
    1f64:	61 f5       	brne	.+88     	; 0x1fbe <vfprintf+0x4fc>
    1f66:	56 01       	movw	r10, r12
    1f68:	97 fe       	sbrs	r9, 7
    1f6a:	09 c0       	rjmp	.+18     	; 0x1f7e <vfprintf+0x4bc>
    1f6c:	24 e0       	ldi	r18, 0x04	; 4
    1f6e:	a2 0e       	add	r10, r18
    1f70:	b1 1c       	adc	r11, r1
    1f72:	f6 01       	movw	r30, r12
    1f74:	60 81       	ld	r22, Z
    1f76:	71 81       	ldd	r23, Z+1	; 0x01
    1f78:	82 81       	ldd	r24, Z+2	; 0x02
    1f7a:	93 81       	ldd	r25, Z+3	; 0x03
    1f7c:	0a c0       	rjmp	.+20     	; 0x1f92 <vfprintf+0x4d0>
    1f7e:	f2 e0       	ldi	r31, 0x02	; 2
    1f80:	af 0e       	add	r10, r31
    1f82:	b1 1c       	adc	r11, r1
    1f84:	f6 01       	movw	r30, r12
    1f86:	60 81       	ld	r22, Z
    1f88:	71 81       	ldd	r23, Z+1	; 0x01
    1f8a:	07 2e       	mov	r0, r23
    1f8c:	00 0c       	add	r0, r0
    1f8e:	88 0b       	sbc	r24, r24
    1f90:	99 0b       	sbc	r25, r25
    1f92:	f9 2d       	mov	r31, r9
    1f94:	ff 76       	andi	r31, 0x6F	; 111
    1f96:	9f 2e       	mov	r9, r31
    1f98:	97 ff       	sbrs	r25, 7
    1f9a:	09 c0       	rjmp	.+18     	; 0x1fae <vfprintf+0x4ec>
    1f9c:	90 95       	com	r25
    1f9e:	80 95       	com	r24
    1fa0:	70 95       	com	r23
    1fa2:	61 95       	neg	r22
    1fa4:	7f 4f       	sbci	r23, 0xFF	; 255
    1fa6:	8f 4f       	sbci	r24, 0xFF	; 255
    1fa8:	9f 4f       	sbci	r25, 0xFF	; 255
    1faa:	f0 68       	ori	r31, 0x80	; 128
    1fac:	9f 2e       	mov	r9, r31
    1fae:	2a e0       	ldi	r18, 0x0A	; 10
    1fb0:	30 e0       	ldi	r19, 0x00	; 0
    1fb2:	a3 01       	movw	r20, r6
    1fb4:	0e 94 a2 12 	call	0x2544	; 0x2544 <__ultoa_invert>
    1fb8:	c8 2e       	mov	r12, r24
    1fba:	c6 18       	sub	r12, r6
    1fbc:	3f c0       	rjmp	.+126    	; 0x203c <vfprintf+0x57a>
    1fbe:	09 2d       	mov	r16, r9
    1fc0:	85 37       	cpi	r24, 0x75	; 117
    1fc2:	21 f4       	brne	.+8      	; 0x1fcc <vfprintf+0x50a>
    1fc4:	0f 7e       	andi	r16, 0xEF	; 239
    1fc6:	2a e0       	ldi	r18, 0x0A	; 10
    1fc8:	30 e0       	ldi	r19, 0x00	; 0
    1fca:	1d c0       	rjmp	.+58     	; 0x2006 <vfprintf+0x544>
    1fcc:	09 7f       	andi	r16, 0xF9	; 249
    1fce:	8f 36       	cpi	r24, 0x6F	; 111
    1fd0:	91 f0       	breq	.+36     	; 0x1ff6 <vfprintf+0x534>
    1fd2:	18 f4       	brcc	.+6      	; 0x1fda <vfprintf+0x518>
    1fd4:	88 35       	cpi	r24, 0x58	; 88
    1fd6:	59 f0       	breq	.+22     	; 0x1fee <vfprintf+0x52c>
    1fd8:	c3 c0       	rjmp	.+390    	; 0x2160 <vfprintf+0x69e>
    1fda:	80 37       	cpi	r24, 0x70	; 112
    1fdc:	19 f0       	breq	.+6      	; 0x1fe4 <vfprintf+0x522>
    1fde:	88 37       	cpi	r24, 0x78	; 120
    1fe0:	11 f0       	breq	.+4      	; 0x1fe6 <vfprintf+0x524>
    1fe2:	be c0       	rjmp	.+380    	; 0x2160 <vfprintf+0x69e>
    1fe4:	00 61       	ori	r16, 0x10	; 16
    1fe6:	04 ff       	sbrs	r16, 4
    1fe8:	09 c0       	rjmp	.+18     	; 0x1ffc <vfprintf+0x53a>
    1fea:	04 60       	ori	r16, 0x04	; 4
    1fec:	07 c0       	rjmp	.+14     	; 0x1ffc <vfprintf+0x53a>
    1fee:	94 fe       	sbrs	r9, 4
    1ff0:	08 c0       	rjmp	.+16     	; 0x2002 <vfprintf+0x540>
    1ff2:	06 60       	ori	r16, 0x06	; 6
    1ff4:	06 c0       	rjmp	.+12     	; 0x2002 <vfprintf+0x540>
    1ff6:	28 e0       	ldi	r18, 0x08	; 8
    1ff8:	30 e0       	ldi	r19, 0x00	; 0
    1ffa:	05 c0       	rjmp	.+10     	; 0x2006 <vfprintf+0x544>
    1ffc:	20 e1       	ldi	r18, 0x10	; 16
    1ffe:	30 e0       	ldi	r19, 0x00	; 0
    2000:	02 c0       	rjmp	.+4      	; 0x2006 <vfprintf+0x544>
    2002:	20 e1       	ldi	r18, 0x10	; 16
    2004:	32 e0       	ldi	r19, 0x02	; 2
    2006:	56 01       	movw	r10, r12
    2008:	07 ff       	sbrs	r16, 7
    200a:	09 c0       	rjmp	.+18     	; 0x201e <vfprintf+0x55c>
    200c:	84 e0       	ldi	r24, 0x04	; 4
    200e:	a8 0e       	add	r10, r24
    2010:	b1 1c       	adc	r11, r1
    2012:	f6 01       	movw	r30, r12
    2014:	60 81       	ld	r22, Z
    2016:	71 81       	ldd	r23, Z+1	; 0x01
    2018:	82 81       	ldd	r24, Z+2	; 0x02
    201a:	93 81       	ldd	r25, Z+3	; 0x03
    201c:	08 c0       	rjmp	.+16     	; 0x202e <vfprintf+0x56c>
    201e:	f2 e0       	ldi	r31, 0x02	; 2
    2020:	af 0e       	add	r10, r31
    2022:	b1 1c       	adc	r11, r1
    2024:	f6 01       	movw	r30, r12
    2026:	60 81       	ld	r22, Z
    2028:	71 81       	ldd	r23, Z+1	; 0x01
    202a:	80 e0       	ldi	r24, 0x00	; 0
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	a3 01       	movw	r20, r6
    2030:	0e 94 a2 12 	call	0x2544	; 0x2544 <__ultoa_invert>
    2034:	c8 2e       	mov	r12, r24
    2036:	c6 18       	sub	r12, r6
    2038:	0f 77       	andi	r16, 0x7F	; 127
    203a:	90 2e       	mov	r9, r16
    203c:	96 fe       	sbrs	r9, 6
    203e:	0b c0       	rjmp	.+22     	; 0x2056 <vfprintf+0x594>
    2040:	09 2d       	mov	r16, r9
    2042:	0e 7f       	andi	r16, 0xFE	; 254
    2044:	c1 16       	cp	r12, r17
    2046:	50 f4       	brcc	.+20     	; 0x205c <vfprintf+0x59a>
    2048:	94 fe       	sbrs	r9, 4
    204a:	0a c0       	rjmp	.+20     	; 0x2060 <vfprintf+0x59e>
    204c:	92 fc       	sbrc	r9, 2
    204e:	08 c0       	rjmp	.+16     	; 0x2060 <vfprintf+0x59e>
    2050:	09 2d       	mov	r16, r9
    2052:	0e 7e       	andi	r16, 0xEE	; 238
    2054:	05 c0       	rjmp	.+10     	; 0x2060 <vfprintf+0x59e>
    2056:	dc 2c       	mov	r13, r12
    2058:	09 2d       	mov	r16, r9
    205a:	03 c0       	rjmp	.+6      	; 0x2062 <vfprintf+0x5a0>
    205c:	dc 2c       	mov	r13, r12
    205e:	01 c0       	rjmp	.+2      	; 0x2062 <vfprintf+0x5a0>
    2060:	d1 2e       	mov	r13, r17
    2062:	04 ff       	sbrs	r16, 4
    2064:	0d c0       	rjmp	.+26     	; 0x2080 <vfprintf+0x5be>
    2066:	fe 01       	movw	r30, r28
    2068:	ec 0d       	add	r30, r12
    206a:	f1 1d       	adc	r31, r1
    206c:	80 81       	ld	r24, Z
    206e:	80 33       	cpi	r24, 0x30	; 48
    2070:	11 f4       	brne	.+4      	; 0x2076 <vfprintf+0x5b4>
    2072:	09 7e       	andi	r16, 0xE9	; 233
    2074:	09 c0       	rjmp	.+18     	; 0x2088 <vfprintf+0x5c6>
    2076:	02 ff       	sbrs	r16, 2
    2078:	06 c0       	rjmp	.+12     	; 0x2086 <vfprintf+0x5c4>
    207a:	d3 94       	inc	r13
    207c:	d3 94       	inc	r13
    207e:	04 c0       	rjmp	.+8      	; 0x2088 <vfprintf+0x5c6>
    2080:	80 2f       	mov	r24, r16
    2082:	86 78       	andi	r24, 0x86	; 134
    2084:	09 f0       	breq	.+2      	; 0x2088 <vfprintf+0x5c6>
    2086:	d3 94       	inc	r13
    2088:	03 fd       	sbrc	r16, 3
    208a:	11 c0       	rjmp	.+34     	; 0x20ae <vfprintf+0x5ec>
    208c:	00 ff       	sbrs	r16, 0
    208e:	06 c0       	rjmp	.+12     	; 0x209c <vfprintf+0x5da>
    2090:	1c 2d       	mov	r17, r12
    2092:	d5 14       	cp	r13, r5
    2094:	80 f4       	brcc	.+32     	; 0x20b6 <vfprintf+0x5f4>
    2096:	15 0d       	add	r17, r5
    2098:	1d 19       	sub	r17, r13
    209a:	0d c0       	rjmp	.+26     	; 0x20b6 <vfprintf+0x5f4>
    209c:	d5 14       	cp	r13, r5
    209e:	58 f4       	brcc	.+22     	; 0x20b6 <vfprintf+0x5f4>
    20a0:	b7 01       	movw	r22, r14
    20a2:	80 e2       	ldi	r24, 0x20	; 32
    20a4:	90 e0       	ldi	r25, 0x00	; 0
    20a6:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    20aa:	d3 94       	inc	r13
    20ac:	f7 cf       	rjmp	.-18     	; 0x209c <vfprintf+0x5da>
    20ae:	d5 14       	cp	r13, r5
    20b0:	10 f4       	brcc	.+4      	; 0x20b6 <vfprintf+0x5f4>
    20b2:	5d 18       	sub	r5, r13
    20b4:	01 c0       	rjmp	.+2      	; 0x20b8 <vfprintf+0x5f6>
    20b6:	51 2c       	mov	r5, r1
    20b8:	04 ff       	sbrs	r16, 4
    20ba:	10 c0       	rjmp	.+32     	; 0x20dc <vfprintf+0x61a>
    20bc:	b7 01       	movw	r22, r14
    20be:	80 e3       	ldi	r24, 0x30	; 48
    20c0:	90 e0       	ldi	r25, 0x00	; 0
    20c2:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    20c6:	02 ff       	sbrs	r16, 2
    20c8:	17 c0       	rjmp	.+46     	; 0x20f8 <vfprintf+0x636>
    20ca:	01 fd       	sbrc	r16, 1
    20cc:	03 c0       	rjmp	.+6      	; 0x20d4 <vfprintf+0x612>
    20ce:	88 e7       	ldi	r24, 0x78	; 120
    20d0:	90 e0       	ldi	r25, 0x00	; 0
    20d2:	02 c0       	rjmp	.+4      	; 0x20d8 <vfprintf+0x616>
    20d4:	88 e5       	ldi	r24, 0x58	; 88
    20d6:	90 e0       	ldi	r25, 0x00	; 0
    20d8:	b7 01       	movw	r22, r14
    20da:	0c c0       	rjmp	.+24     	; 0x20f4 <vfprintf+0x632>
    20dc:	80 2f       	mov	r24, r16
    20de:	86 78       	andi	r24, 0x86	; 134
    20e0:	59 f0       	breq	.+22     	; 0x20f8 <vfprintf+0x636>
    20e2:	01 ff       	sbrs	r16, 1
    20e4:	02 c0       	rjmp	.+4      	; 0x20ea <vfprintf+0x628>
    20e6:	8b e2       	ldi	r24, 0x2B	; 43
    20e8:	01 c0       	rjmp	.+2      	; 0x20ec <vfprintf+0x62a>
    20ea:	80 e2       	ldi	r24, 0x20	; 32
    20ec:	07 fd       	sbrc	r16, 7
    20ee:	8d e2       	ldi	r24, 0x2D	; 45
    20f0:	b7 01       	movw	r22, r14
    20f2:	90 e0       	ldi	r25, 0x00	; 0
    20f4:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    20f8:	c1 16       	cp	r12, r17
    20fa:	38 f4       	brcc	.+14     	; 0x210a <vfprintf+0x648>
    20fc:	b7 01       	movw	r22, r14
    20fe:	80 e3       	ldi	r24, 0x30	; 48
    2100:	90 e0       	ldi	r25, 0x00	; 0
    2102:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    2106:	11 50       	subi	r17, 0x01	; 1
    2108:	f7 cf       	rjmp	.-18     	; 0x20f8 <vfprintf+0x636>
    210a:	ca 94       	dec	r12
    210c:	f3 01       	movw	r30, r6
    210e:	ec 0d       	add	r30, r12
    2110:	f1 1d       	adc	r31, r1
    2112:	80 81       	ld	r24, Z
    2114:	b7 01       	movw	r22, r14
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    211c:	c1 10       	cpse	r12, r1
    211e:	f5 cf       	rjmp	.-22     	; 0x210a <vfprintf+0x648>
    2120:	15 c0       	rjmp	.+42     	; 0x214c <vfprintf+0x68a>
    2122:	f4 e0       	ldi	r31, 0x04	; 4
    2124:	f5 15       	cp	r31, r5
    2126:	60 f5       	brcc	.+88     	; 0x2180 <vfprintf+0x6be>
    2128:	84 e0       	ldi	r24, 0x04	; 4
    212a:	58 1a       	sub	r5, r24
    212c:	93 fe       	sbrs	r9, 3
    212e:	1f c0       	rjmp	.+62     	; 0x216e <vfprintf+0x6ac>
    2130:	01 11       	cpse	r16, r1
    2132:	27 c0       	rjmp	.+78     	; 0x2182 <vfprintf+0x6c0>
    2134:	2c 85       	ldd	r18, Y+12	; 0x0c
    2136:	23 ff       	sbrs	r18, 3
    2138:	2a c0       	rjmp	.+84     	; 0x218e <vfprintf+0x6cc>
    213a:	04 e5       	ldi	r16, 0x54	; 84
    213c:	10 e0       	ldi	r17, 0x00	; 0
    213e:	39 2d       	mov	r19, r9
    2140:	30 71       	andi	r19, 0x10	; 16
    2142:	93 2e       	mov	r9, r19
    2144:	f8 01       	movw	r30, r16
    2146:	84 91       	lpm	r24, Z
    2148:	81 11       	cpse	r24, r1
    214a:	24 c0       	rjmp	.+72     	; 0x2194 <vfprintf+0x6d2>
    214c:	55 20       	and	r5, r5
    214e:	09 f4       	brne	.+2      	; 0x2152 <vfprintf+0x690>
    2150:	e4 cc       	rjmp	.-1592   	; 0x1b1a <vfprintf+0x58>
    2152:	b7 01       	movw	r22, r14
    2154:	80 e2       	ldi	r24, 0x20	; 32
    2156:	90 e0       	ldi	r25, 0x00	; 0
    2158:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    215c:	5a 94       	dec	r5
    215e:	f6 cf       	rjmp	.-20     	; 0x214c <vfprintf+0x68a>
    2160:	f7 01       	movw	r30, r14
    2162:	86 81       	ldd	r24, Z+6	; 0x06
    2164:	97 81       	ldd	r25, Z+7	; 0x07
    2166:	26 c0       	rjmp	.+76     	; 0x21b4 <vfprintf+0x6f2>
    2168:	8f ef       	ldi	r24, 0xFF	; 255
    216a:	9f ef       	ldi	r25, 0xFF	; 255
    216c:	23 c0       	rjmp	.+70     	; 0x21b4 <vfprintf+0x6f2>
    216e:	b7 01       	movw	r22, r14
    2170:	80 e2       	ldi	r24, 0x20	; 32
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    2178:	5a 94       	dec	r5
    217a:	51 10       	cpse	r5, r1
    217c:	f8 cf       	rjmp	.-16     	; 0x216e <vfprintf+0x6ac>
    217e:	d8 cf       	rjmp	.-80     	; 0x2130 <vfprintf+0x66e>
    2180:	51 2c       	mov	r5, r1
    2182:	b7 01       	movw	r22, r14
    2184:	80 2f       	mov	r24, r16
    2186:	90 e0       	ldi	r25, 0x00	; 0
    2188:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    218c:	d3 cf       	rjmp	.-90     	; 0x2134 <vfprintf+0x672>
    218e:	08 e5       	ldi	r16, 0x58	; 88
    2190:	10 e0       	ldi	r17, 0x00	; 0
    2192:	d5 cf       	rjmp	.-86     	; 0x213e <vfprintf+0x67c>
    2194:	91 10       	cpse	r9, r1
    2196:	80 52       	subi	r24, 0x20	; 32
    2198:	b7 01       	movw	r22, r14
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	0e 94 44 12 	call	0x2488	; 0x2488 <fputc>
    21a0:	0f 5f       	subi	r16, 0xFF	; 255
    21a2:	1f 4f       	sbci	r17, 0xFF	; 255
    21a4:	cf cf       	rjmp	.-98     	; 0x2144 <vfprintf+0x682>
    21a6:	23 e0       	ldi	r18, 0x03	; 3
    21a8:	25 15       	cp	r18, r5
    21aa:	10 f4       	brcc	.+4      	; 0x21b0 <vfprintf+0x6ee>
    21ac:	83 e0       	ldi	r24, 0x03	; 3
    21ae:	bd cf       	rjmp	.-134    	; 0x212a <vfprintf+0x668>
    21b0:	51 2c       	mov	r5, r1
    21b2:	c0 cf       	rjmp	.-128    	; 0x2134 <vfprintf+0x672>
    21b4:	60 96       	adiw	r28, 0x10	; 16
    21b6:	e2 e1       	ldi	r30, 0x12	; 18
    21b8:	0c 94 19 11 	jmp	0x2232	; 0x2232 <__epilogue_restores__>

000021bc <__divmodsi4>:
    21bc:	05 2e       	mov	r0, r21
    21be:	97 fb       	bst	r25, 7
    21c0:	1e f4       	brtc	.+6      	; 0x21c8 <__divmodsi4+0xc>
    21c2:	00 94       	com	r0
    21c4:	0e 94 f5 10 	call	0x21ea	; 0x21ea <__negsi2>
    21c8:	57 fd       	sbrc	r21, 7
    21ca:	07 d0       	rcall	.+14     	; 0x21da <__divmodsi4_neg2>
    21cc:	0e 94 34 11 	call	0x2268	; 0x2268 <__udivmodsi4>
    21d0:	07 fc       	sbrc	r0, 7
    21d2:	03 d0       	rcall	.+6      	; 0x21da <__divmodsi4_neg2>
    21d4:	4e f4       	brtc	.+18     	; 0x21e8 <__divmodsi4_exit>
    21d6:	0c 94 f5 10 	jmp	0x21ea	; 0x21ea <__negsi2>

000021da <__divmodsi4_neg2>:
    21da:	50 95       	com	r21
    21dc:	40 95       	com	r20
    21de:	30 95       	com	r19
    21e0:	21 95       	neg	r18
    21e2:	3f 4f       	sbci	r19, 0xFF	; 255
    21e4:	4f 4f       	sbci	r20, 0xFF	; 255
    21e6:	5f 4f       	sbci	r21, 0xFF	; 255

000021e8 <__divmodsi4_exit>:
    21e8:	08 95       	ret

000021ea <__negsi2>:
    21ea:	90 95       	com	r25
    21ec:	80 95       	com	r24
    21ee:	70 95       	com	r23
    21f0:	61 95       	neg	r22
    21f2:	7f 4f       	sbci	r23, 0xFF	; 255
    21f4:	8f 4f       	sbci	r24, 0xFF	; 255
    21f6:	9f 4f       	sbci	r25, 0xFF	; 255
    21f8:	08 95       	ret

000021fa <__prologue_saves__>:
    21fa:	2f 92       	push	r2
    21fc:	3f 92       	push	r3
    21fe:	4f 92       	push	r4
    2200:	5f 92       	push	r5
    2202:	6f 92       	push	r6
    2204:	7f 92       	push	r7
    2206:	8f 92       	push	r8
    2208:	9f 92       	push	r9
    220a:	af 92       	push	r10
    220c:	bf 92       	push	r11
    220e:	cf 92       	push	r12
    2210:	df 92       	push	r13
    2212:	ef 92       	push	r14
    2214:	ff 92       	push	r15
    2216:	0f 93       	push	r16
    2218:	1f 93       	push	r17
    221a:	cf 93       	push	r28
    221c:	df 93       	push	r29
    221e:	cd b7       	in	r28, 0x3d	; 61
    2220:	de b7       	in	r29, 0x3e	; 62
    2222:	ca 1b       	sub	r28, r26
    2224:	db 0b       	sbc	r29, r27
    2226:	0f b6       	in	r0, 0x3f	; 63
    2228:	f8 94       	cli
    222a:	de bf       	out	0x3e, r29	; 62
    222c:	0f be       	out	0x3f, r0	; 63
    222e:	cd bf       	out	0x3d, r28	; 61
    2230:	09 94       	ijmp

00002232 <__epilogue_restores__>:
    2232:	2a 88       	ldd	r2, Y+18	; 0x12
    2234:	39 88       	ldd	r3, Y+17	; 0x11
    2236:	48 88       	ldd	r4, Y+16	; 0x10
    2238:	5f 84       	ldd	r5, Y+15	; 0x0f
    223a:	6e 84       	ldd	r6, Y+14	; 0x0e
    223c:	7d 84       	ldd	r7, Y+13	; 0x0d
    223e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2240:	9b 84       	ldd	r9, Y+11	; 0x0b
    2242:	aa 84       	ldd	r10, Y+10	; 0x0a
    2244:	b9 84       	ldd	r11, Y+9	; 0x09
    2246:	c8 84       	ldd	r12, Y+8	; 0x08
    2248:	df 80       	ldd	r13, Y+7	; 0x07
    224a:	ee 80       	ldd	r14, Y+6	; 0x06
    224c:	fd 80       	ldd	r15, Y+5	; 0x05
    224e:	0c 81       	ldd	r16, Y+4	; 0x04
    2250:	1b 81       	ldd	r17, Y+3	; 0x03
    2252:	aa 81       	ldd	r26, Y+2	; 0x02
    2254:	b9 81       	ldd	r27, Y+1	; 0x01
    2256:	ce 0f       	add	r28, r30
    2258:	d1 1d       	adc	r29, r1
    225a:	0f b6       	in	r0, 0x3f	; 63
    225c:	f8 94       	cli
    225e:	de bf       	out	0x3e, r29	; 62
    2260:	0f be       	out	0x3f, r0	; 63
    2262:	cd bf       	out	0x3d, r28	; 61
    2264:	ed 01       	movw	r28, r26
    2266:	08 95       	ret

00002268 <__udivmodsi4>:
    2268:	a1 e2       	ldi	r26, 0x21	; 33
    226a:	1a 2e       	mov	r1, r26
    226c:	aa 1b       	sub	r26, r26
    226e:	bb 1b       	sub	r27, r27
    2270:	fd 01       	movw	r30, r26
    2272:	0d c0       	rjmp	.+26     	; 0x228e <__udivmodsi4_ep>

00002274 <__udivmodsi4_loop>:
    2274:	aa 1f       	adc	r26, r26
    2276:	bb 1f       	adc	r27, r27
    2278:	ee 1f       	adc	r30, r30
    227a:	ff 1f       	adc	r31, r31
    227c:	a2 17       	cp	r26, r18
    227e:	b3 07       	cpc	r27, r19
    2280:	e4 07       	cpc	r30, r20
    2282:	f5 07       	cpc	r31, r21
    2284:	20 f0       	brcs	.+8      	; 0x228e <__udivmodsi4_ep>
    2286:	a2 1b       	sub	r26, r18
    2288:	b3 0b       	sbc	r27, r19
    228a:	e4 0b       	sbc	r30, r20
    228c:	f5 0b       	sbc	r31, r21

0000228e <__udivmodsi4_ep>:
    228e:	66 1f       	adc	r22, r22
    2290:	77 1f       	adc	r23, r23
    2292:	88 1f       	adc	r24, r24
    2294:	99 1f       	adc	r25, r25
    2296:	1a 94       	dec	r1
    2298:	69 f7       	brne	.-38     	; 0x2274 <__udivmodsi4_loop>
    229a:	60 95       	com	r22
    229c:	70 95       	com	r23
    229e:	80 95       	com	r24
    22a0:	90 95       	com	r25
    22a2:	9b 01       	movw	r18, r22
    22a4:	ac 01       	movw	r20, r24
    22a6:	bd 01       	movw	r22, r26
    22a8:	cf 01       	movw	r24, r30
    22aa:	08 95       	ret

000022ac <__ftoa_engine>:
    22ac:	28 30       	cpi	r18, 0x08	; 8
    22ae:	08 f0       	brcs	.+2      	; 0x22b2 <__ftoa_engine+0x6>
    22b0:	27 e0       	ldi	r18, 0x07	; 7
    22b2:	33 27       	eor	r19, r19
    22b4:	da 01       	movw	r26, r20
    22b6:	99 0f       	add	r25, r25
    22b8:	31 1d       	adc	r19, r1
    22ba:	87 fd       	sbrc	r24, 7
    22bc:	91 60       	ori	r25, 0x01	; 1
    22be:	00 96       	adiw	r24, 0x00	; 0
    22c0:	61 05       	cpc	r22, r1
    22c2:	71 05       	cpc	r23, r1
    22c4:	39 f4       	brne	.+14     	; 0x22d4 <__ftoa_engine+0x28>
    22c6:	32 60       	ori	r19, 0x02	; 2
    22c8:	2e 5f       	subi	r18, 0xFE	; 254
    22ca:	3d 93       	st	X+, r19
    22cc:	30 e3       	ldi	r19, 0x30	; 48
    22ce:	2a 95       	dec	r18
    22d0:	e1 f7       	brne	.-8      	; 0x22ca <__ftoa_engine+0x1e>
    22d2:	08 95       	ret
    22d4:	9f 3f       	cpi	r25, 0xFF	; 255
    22d6:	30 f0       	brcs	.+12     	; 0x22e4 <__ftoa_engine+0x38>
    22d8:	80 38       	cpi	r24, 0x80	; 128
    22da:	71 05       	cpc	r23, r1
    22dc:	61 05       	cpc	r22, r1
    22de:	09 f0       	breq	.+2      	; 0x22e2 <__ftoa_engine+0x36>
    22e0:	3c 5f       	subi	r19, 0xFC	; 252
    22e2:	3c 5f       	subi	r19, 0xFC	; 252
    22e4:	3d 93       	st	X+, r19
    22e6:	91 30       	cpi	r25, 0x01	; 1
    22e8:	08 f0       	brcs	.+2      	; 0x22ec <__ftoa_engine+0x40>
    22ea:	80 68       	ori	r24, 0x80	; 128
    22ec:	91 1d       	adc	r25, r1
    22ee:	df 93       	push	r29
    22f0:	cf 93       	push	r28
    22f2:	1f 93       	push	r17
    22f4:	0f 93       	push	r16
    22f6:	ff 92       	push	r15
    22f8:	ef 92       	push	r14
    22fa:	19 2f       	mov	r17, r25
    22fc:	98 7f       	andi	r25, 0xF8	; 248
    22fe:	96 95       	lsr	r25
    2300:	e9 2f       	mov	r30, r25
    2302:	96 95       	lsr	r25
    2304:	96 95       	lsr	r25
    2306:	e9 0f       	add	r30, r25
    2308:	ff 27       	eor	r31, r31
    230a:	ea 54       	subi	r30, 0x4A	; 74
    230c:	ff 4f       	sbci	r31, 0xFF	; 255
    230e:	99 27       	eor	r25, r25
    2310:	33 27       	eor	r19, r19
    2312:	ee 24       	eor	r14, r14
    2314:	ff 24       	eor	r15, r15
    2316:	a7 01       	movw	r20, r14
    2318:	e7 01       	movw	r28, r14
    231a:	05 90       	lpm	r0, Z+
    231c:	08 94       	sec
    231e:	07 94       	ror	r0
    2320:	28 f4       	brcc	.+10     	; 0x232c <__ftoa_engine+0x80>
    2322:	36 0f       	add	r19, r22
    2324:	e7 1e       	adc	r14, r23
    2326:	f8 1e       	adc	r15, r24
    2328:	49 1f       	adc	r20, r25
    232a:	51 1d       	adc	r21, r1
    232c:	66 0f       	add	r22, r22
    232e:	77 1f       	adc	r23, r23
    2330:	88 1f       	adc	r24, r24
    2332:	99 1f       	adc	r25, r25
    2334:	06 94       	lsr	r0
    2336:	a1 f7       	brne	.-24     	; 0x2320 <__ftoa_engine+0x74>
    2338:	05 90       	lpm	r0, Z+
    233a:	07 94       	ror	r0
    233c:	28 f4       	brcc	.+10     	; 0x2348 <__ftoa_engine+0x9c>
    233e:	e7 0e       	add	r14, r23
    2340:	f8 1e       	adc	r15, r24
    2342:	49 1f       	adc	r20, r25
    2344:	56 1f       	adc	r21, r22
    2346:	c1 1d       	adc	r28, r1
    2348:	77 0f       	add	r23, r23
    234a:	88 1f       	adc	r24, r24
    234c:	99 1f       	adc	r25, r25
    234e:	66 1f       	adc	r22, r22
    2350:	06 94       	lsr	r0
    2352:	a1 f7       	brne	.-24     	; 0x233c <__ftoa_engine+0x90>
    2354:	05 90       	lpm	r0, Z+
    2356:	07 94       	ror	r0
    2358:	28 f4       	brcc	.+10     	; 0x2364 <__ftoa_engine+0xb8>
    235a:	f8 0e       	add	r15, r24
    235c:	49 1f       	adc	r20, r25
    235e:	56 1f       	adc	r21, r22
    2360:	c7 1f       	adc	r28, r23
    2362:	d1 1d       	adc	r29, r1
    2364:	88 0f       	add	r24, r24
    2366:	99 1f       	adc	r25, r25
    2368:	66 1f       	adc	r22, r22
    236a:	77 1f       	adc	r23, r23
    236c:	06 94       	lsr	r0
    236e:	a1 f7       	brne	.-24     	; 0x2358 <__ftoa_engine+0xac>
    2370:	05 90       	lpm	r0, Z+
    2372:	07 94       	ror	r0
    2374:	20 f4       	brcc	.+8      	; 0x237e <__ftoa_engine+0xd2>
    2376:	49 0f       	add	r20, r25
    2378:	56 1f       	adc	r21, r22
    237a:	c7 1f       	adc	r28, r23
    237c:	d8 1f       	adc	r29, r24
    237e:	99 0f       	add	r25, r25
    2380:	66 1f       	adc	r22, r22
    2382:	77 1f       	adc	r23, r23
    2384:	88 1f       	adc	r24, r24
    2386:	06 94       	lsr	r0
    2388:	a9 f7       	brne	.-22     	; 0x2374 <__ftoa_engine+0xc8>
    238a:	84 91       	lpm	r24, Z
    238c:	10 95       	com	r17
    238e:	17 70       	andi	r17, 0x07	; 7
    2390:	41 f0       	breq	.+16     	; 0x23a2 <__ftoa_engine+0xf6>
    2392:	d6 95       	lsr	r29
    2394:	c7 95       	ror	r28
    2396:	57 95       	ror	r21
    2398:	47 95       	ror	r20
    239a:	f7 94       	ror	r15
    239c:	e7 94       	ror	r14
    239e:	1a 95       	dec	r17
    23a0:	c1 f7       	brne	.-16     	; 0x2392 <__ftoa_engine+0xe6>
    23a2:	ec e5       	ldi	r30, 0x5C	; 92
    23a4:	f0 e0       	ldi	r31, 0x00	; 0
    23a6:	68 94       	set
    23a8:	15 90       	lpm	r1, Z+
    23aa:	15 91       	lpm	r17, Z+
    23ac:	35 91       	lpm	r19, Z+
    23ae:	65 91       	lpm	r22, Z+
    23b0:	95 91       	lpm	r25, Z+
    23b2:	05 90       	lpm	r0, Z+
    23b4:	7f e2       	ldi	r23, 0x2F	; 47
    23b6:	73 95       	inc	r23
    23b8:	e1 18       	sub	r14, r1
    23ba:	f1 0a       	sbc	r15, r17
    23bc:	43 0b       	sbc	r20, r19
    23be:	56 0b       	sbc	r21, r22
    23c0:	c9 0b       	sbc	r28, r25
    23c2:	d0 09       	sbc	r29, r0
    23c4:	c0 f7       	brcc	.-16     	; 0x23b6 <__ftoa_engine+0x10a>
    23c6:	e1 0c       	add	r14, r1
    23c8:	f1 1e       	adc	r15, r17
    23ca:	43 1f       	adc	r20, r19
    23cc:	56 1f       	adc	r21, r22
    23ce:	c9 1f       	adc	r28, r25
    23d0:	d0 1d       	adc	r29, r0
    23d2:	7e f4       	brtc	.+30     	; 0x23f2 <__ftoa_engine+0x146>
    23d4:	70 33       	cpi	r23, 0x30	; 48
    23d6:	11 f4       	brne	.+4      	; 0x23dc <__ftoa_engine+0x130>
    23d8:	8a 95       	dec	r24
    23da:	e6 cf       	rjmp	.-52     	; 0x23a8 <__ftoa_engine+0xfc>
    23dc:	e8 94       	clt
    23de:	01 50       	subi	r16, 0x01	; 1
    23e0:	30 f0       	brcs	.+12     	; 0x23ee <__ftoa_engine+0x142>
    23e2:	08 0f       	add	r16, r24
    23e4:	0a f4       	brpl	.+2      	; 0x23e8 <__ftoa_engine+0x13c>
    23e6:	00 27       	eor	r16, r16
    23e8:	02 17       	cp	r16, r18
    23ea:	08 f4       	brcc	.+2      	; 0x23ee <__ftoa_engine+0x142>
    23ec:	20 2f       	mov	r18, r16
    23ee:	23 95       	inc	r18
    23f0:	02 2f       	mov	r16, r18
    23f2:	7a 33       	cpi	r23, 0x3A	; 58
    23f4:	28 f0       	brcs	.+10     	; 0x2400 <__ftoa_engine+0x154>
    23f6:	79 e3       	ldi	r23, 0x39	; 57
    23f8:	7d 93       	st	X+, r23
    23fa:	2a 95       	dec	r18
    23fc:	e9 f7       	brne	.-6      	; 0x23f8 <__ftoa_engine+0x14c>
    23fe:	10 c0       	rjmp	.+32     	; 0x2420 <__ftoa_engine+0x174>
    2400:	7d 93       	st	X+, r23
    2402:	2a 95       	dec	r18
    2404:	89 f6       	brne	.-94     	; 0x23a8 <__ftoa_engine+0xfc>
    2406:	06 94       	lsr	r0
    2408:	97 95       	ror	r25
    240a:	67 95       	ror	r22
    240c:	37 95       	ror	r19
    240e:	17 95       	ror	r17
    2410:	17 94       	ror	r1
    2412:	e1 18       	sub	r14, r1
    2414:	f1 0a       	sbc	r15, r17
    2416:	43 0b       	sbc	r20, r19
    2418:	56 0b       	sbc	r21, r22
    241a:	c9 0b       	sbc	r28, r25
    241c:	d0 09       	sbc	r29, r0
    241e:	98 f0       	brcs	.+38     	; 0x2446 <__ftoa_engine+0x19a>
    2420:	23 95       	inc	r18
    2422:	7e 91       	ld	r23, -X
    2424:	73 95       	inc	r23
    2426:	7a 33       	cpi	r23, 0x3A	; 58
    2428:	08 f0       	brcs	.+2      	; 0x242c <__ftoa_engine+0x180>
    242a:	70 e3       	ldi	r23, 0x30	; 48
    242c:	7c 93       	st	X, r23
    242e:	20 13       	cpse	r18, r16
    2430:	b8 f7       	brcc	.-18     	; 0x2420 <__ftoa_engine+0x174>
    2432:	7e 91       	ld	r23, -X
    2434:	70 61       	ori	r23, 0x10	; 16
    2436:	7d 93       	st	X+, r23
    2438:	30 f0       	brcs	.+12     	; 0x2446 <__ftoa_engine+0x19a>
    243a:	83 95       	inc	r24
    243c:	71 e3       	ldi	r23, 0x31	; 49
    243e:	7d 93       	st	X+, r23
    2440:	70 e3       	ldi	r23, 0x30	; 48
    2442:	2a 95       	dec	r18
    2444:	e1 f7       	brne	.-8      	; 0x243e <__ftoa_engine+0x192>
    2446:	11 24       	eor	r1, r1
    2448:	ef 90       	pop	r14
    244a:	ff 90       	pop	r15
    244c:	0f 91       	pop	r16
    244e:	1f 91       	pop	r17
    2450:	cf 91       	pop	r28
    2452:	df 91       	pop	r29
    2454:	99 27       	eor	r25, r25
    2456:	87 fd       	sbrc	r24, 7
    2458:	90 95       	com	r25
    245a:	08 95       	ret

0000245c <strnlen_P>:
    245c:	fc 01       	movw	r30, r24
    245e:	05 90       	lpm	r0, Z+
    2460:	61 50       	subi	r22, 0x01	; 1
    2462:	70 40       	sbci	r23, 0x00	; 0
    2464:	01 10       	cpse	r0, r1
    2466:	d8 f7       	brcc	.-10     	; 0x245e <strnlen_P+0x2>
    2468:	80 95       	com	r24
    246a:	90 95       	com	r25
    246c:	8e 0f       	add	r24, r30
    246e:	9f 1f       	adc	r25, r31
    2470:	08 95       	ret

00002472 <strnlen>:
    2472:	fc 01       	movw	r30, r24
    2474:	61 50       	subi	r22, 0x01	; 1
    2476:	70 40       	sbci	r23, 0x00	; 0
    2478:	01 90       	ld	r0, Z+
    247a:	01 10       	cpse	r0, r1
    247c:	d8 f7       	brcc	.-10     	; 0x2474 <strnlen+0x2>
    247e:	80 95       	com	r24
    2480:	90 95       	com	r25
    2482:	8e 0f       	add	r24, r30
    2484:	9f 1f       	adc	r25, r31
    2486:	08 95       	ret

00002488 <fputc>:
    2488:	0f 93       	push	r16
    248a:	1f 93       	push	r17
    248c:	cf 93       	push	r28
    248e:	df 93       	push	r29
    2490:	fb 01       	movw	r30, r22
    2492:	23 81       	ldd	r18, Z+3	; 0x03
    2494:	21 fd       	sbrc	r18, 1
    2496:	03 c0       	rjmp	.+6      	; 0x249e <fputc+0x16>
    2498:	8f ef       	ldi	r24, 0xFF	; 255
    249a:	9f ef       	ldi	r25, 0xFF	; 255
    249c:	2c c0       	rjmp	.+88     	; 0x24f6 <fputc+0x6e>
    249e:	22 ff       	sbrs	r18, 2
    24a0:	16 c0       	rjmp	.+44     	; 0x24ce <fputc+0x46>
    24a2:	46 81       	ldd	r20, Z+6	; 0x06
    24a4:	57 81       	ldd	r21, Z+7	; 0x07
    24a6:	24 81       	ldd	r18, Z+4	; 0x04
    24a8:	35 81       	ldd	r19, Z+5	; 0x05
    24aa:	42 17       	cp	r20, r18
    24ac:	53 07       	cpc	r21, r19
    24ae:	44 f4       	brge	.+16     	; 0x24c0 <fputc+0x38>
    24b0:	a0 81       	ld	r26, Z
    24b2:	b1 81       	ldd	r27, Z+1	; 0x01
    24b4:	9d 01       	movw	r18, r26
    24b6:	2f 5f       	subi	r18, 0xFF	; 255
    24b8:	3f 4f       	sbci	r19, 0xFF	; 255
    24ba:	31 83       	std	Z+1, r19	; 0x01
    24bc:	20 83       	st	Z, r18
    24be:	8c 93       	st	X, r24
    24c0:	26 81       	ldd	r18, Z+6	; 0x06
    24c2:	37 81       	ldd	r19, Z+7	; 0x07
    24c4:	2f 5f       	subi	r18, 0xFF	; 255
    24c6:	3f 4f       	sbci	r19, 0xFF	; 255
    24c8:	37 83       	std	Z+7, r19	; 0x07
    24ca:	26 83       	std	Z+6, r18	; 0x06
    24cc:	14 c0       	rjmp	.+40     	; 0x24f6 <fputc+0x6e>
    24ce:	8b 01       	movw	r16, r22
    24d0:	ec 01       	movw	r28, r24
    24d2:	fb 01       	movw	r30, r22
    24d4:	00 84       	ldd	r0, Z+8	; 0x08
    24d6:	f1 85       	ldd	r31, Z+9	; 0x09
    24d8:	e0 2d       	mov	r30, r0
    24da:	09 95       	icall
    24dc:	89 2b       	or	r24, r25
    24de:	e1 f6       	brne	.-72     	; 0x2498 <fputc+0x10>
    24e0:	d8 01       	movw	r26, r16
    24e2:	16 96       	adiw	r26, 0x06	; 6
    24e4:	8d 91       	ld	r24, X+
    24e6:	9c 91       	ld	r25, X
    24e8:	17 97       	sbiw	r26, 0x07	; 7
    24ea:	01 96       	adiw	r24, 0x01	; 1
    24ec:	17 96       	adiw	r26, 0x07	; 7
    24ee:	9c 93       	st	X, r25
    24f0:	8e 93       	st	-X, r24
    24f2:	16 97       	sbiw	r26, 0x06	; 6
    24f4:	ce 01       	movw	r24, r28
    24f6:	df 91       	pop	r29
    24f8:	cf 91       	pop	r28
    24fa:	1f 91       	pop	r17
    24fc:	0f 91       	pop	r16
    24fe:	08 95       	ret

00002500 <sprintf>:
    2500:	ae e0       	ldi	r26, 0x0E	; 14
    2502:	b0 e0       	ldi	r27, 0x00	; 0
    2504:	e6 e8       	ldi	r30, 0x86	; 134
    2506:	f2 e1       	ldi	r31, 0x12	; 18
    2508:	0c 94 0b 11 	jmp	0x2216	; 0x2216 <__prologue_saves__+0x1c>
    250c:	0d 89       	ldd	r16, Y+21	; 0x15
    250e:	1e 89       	ldd	r17, Y+22	; 0x16
    2510:	86 e0       	ldi	r24, 0x06	; 6
    2512:	8c 83       	std	Y+4, r24	; 0x04
    2514:	1a 83       	std	Y+2, r17	; 0x02
    2516:	09 83       	std	Y+1, r16	; 0x01
    2518:	8f ef       	ldi	r24, 0xFF	; 255
    251a:	9f e7       	ldi	r25, 0x7F	; 127
    251c:	9e 83       	std	Y+6, r25	; 0x06
    251e:	8d 83       	std	Y+5, r24	; 0x05
    2520:	ae 01       	movw	r20, r28
    2522:	47 5e       	subi	r20, 0xE7	; 231
    2524:	5f 4f       	sbci	r21, 0xFF	; 255
    2526:	6f 89       	ldd	r22, Y+23	; 0x17
    2528:	78 8d       	ldd	r23, Y+24	; 0x18
    252a:	ce 01       	movw	r24, r28
    252c:	01 96       	adiw	r24, 0x01	; 1
    252e:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <vfprintf>
    2532:	ef 81       	ldd	r30, Y+7	; 0x07
    2534:	f8 85       	ldd	r31, Y+8	; 0x08
    2536:	e0 0f       	add	r30, r16
    2538:	f1 1f       	adc	r31, r17
    253a:	10 82       	st	Z, r1
    253c:	2e 96       	adiw	r28, 0x0e	; 14
    253e:	e4 e0       	ldi	r30, 0x04	; 4
    2540:	0c 94 27 11 	jmp	0x224e	; 0x224e <__epilogue_restores__+0x1c>

00002544 <__ultoa_invert>:
    2544:	fa 01       	movw	r30, r20
    2546:	aa 27       	eor	r26, r26
    2548:	28 30       	cpi	r18, 0x08	; 8
    254a:	51 f1       	breq	.+84     	; 0x25a0 <__ultoa_invert+0x5c>
    254c:	20 31       	cpi	r18, 0x10	; 16
    254e:	81 f1       	breq	.+96     	; 0x25b0 <__ultoa_invert+0x6c>
    2550:	e8 94       	clt
    2552:	6f 93       	push	r22
    2554:	6e 7f       	andi	r22, 0xFE	; 254
    2556:	6e 5f       	subi	r22, 0xFE	; 254
    2558:	7f 4f       	sbci	r23, 0xFF	; 255
    255a:	8f 4f       	sbci	r24, 0xFF	; 255
    255c:	9f 4f       	sbci	r25, 0xFF	; 255
    255e:	af 4f       	sbci	r26, 0xFF	; 255
    2560:	b1 e0       	ldi	r27, 0x01	; 1
    2562:	3e d0       	rcall	.+124    	; 0x25e0 <__ultoa_invert+0x9c>
    2564:	b4 e0       	ldi	r27, 0x04	; 4
    2566:	3c d0       	rcall	.+120    	; 0x25e0 <__ultoa_invert+0x9c>
    2568:	67 0f       	add	r22, r23
    256a:	78 1f       	adc	r23, r24
    256c:	89 1f       	adc	r24, r25
    256e:	9a 1f       	adc	r25, r26
    2570:	a1 1d       	adc	r26, r1
    2572:	68 0f       	add	r22, r24
    2574:	79 1f       	adc	r23, r25
    2576:	8a 1f       	adc	r24, r26
    2578:	91 1d       	adc	r25, r1
    257a:	a1 1d       	adc	r26, r1
    257c:	6a 0f       	add	r22, r26
    257e:	71 1d       	adc	r23, r1
    2580:	81 1d       	adc	r24, r1
    2582:	91 1d       	adc	r25, r1
    2584:	a1 1d       	adc	r26, r1
    2586:	20 d0       	rcall	.+64     	; 0x25c8 <__ultoa_invert+0x84>
    2588:	09 f4       	brne	.+2      	; 0x258c <__ultoa_invert+0x48>
    258a:	68 94       	set
    258c:	3f 91       	pop	r19
    258e:	2a e0       	ldi	r18, 0x0A	; 10
    2590:	26 9f       	mul	r18, r22
    2592:	11 24       	eor	r1, r1
    2594:	30 19       	sub	r19, r0
    2596:	30 5d       	subi	r19, 0xD0	; 208
    2598:	31 93       	st	Z+, r19
    259a:	de f6       	brtc	.-74     	; 0x2552 <__ultoa_invert+0xe>
    259c:	cf 01       	movw	r24, r30
    259e:	08 95       	ret
    25a0:	46 2f       	mov	r20, r22
    25a2:	47 70       	andi	r20, 0x07	; 7
    25a4:	40 5d       	subi	r20, 0xD0	; 208
    25a6:	41 93       	st	Z+, r20
    25a8:	b3 e0       	ldi	r27, 0x03	; 3
    25aa:	0f d0       	rcall	.+30     	; 0x25ca <__ultoa_invert+0x86>
    25ac:	c9 f7       	brne	.-14     	; 0x25a0 <__ultoa_invert+0x5c>
    25ae:	f6 cf       	rjmp	.-20     	; 0x259c <__ultoa_invert+0x58>
    25b0:	46 2f       	mov	r20, r22
    25b2:	4f 70       	andi	r20, 0x0F	; 15
    25b4:	40 5d       	subi	r20, 0xD0	; 208
    25b6:	4a 33       	cpi	r20, 0x3A	; 58
    25b8:	18 f0       	brcs	.+6      	; 0x25c0 <__ultoa_invert+0x7c>
    25ba:	49 5d       	subi	r20, 0xD9	; 217
    25bc:	31 fd       	sbrc	r19, 1
    25be:	40 52       	subi	r20, 0x20	; 32
    25c0:	41 93       	st	Z+, r20
    25c2:	02 d0       	rcall	.+4      	; 0x25c8 <__ultoa_invert+0x84>
    25c4:	a9 f7       	brne	.-22     	; 0x25b0 <__ultoa_invert+0x6c>
    25c6:	ea cf       	rjmp	.-44     	; 0x259c <__ultoa_invert+0x58>
    25c8:	b4 e0       	ldi	r27, 0x04	; 4
    25ca:	a6 95       	lsr	r26
    25cc:	97 95       	ror	r25
    25ce:	87 95       	ror	r24
    25d0:	77 95       	ror	r23
    25d2:	67 95       	ror	r22
    25d4:	ba 95       	dec	r27
    25d6:	c9 f7       	brne	.-14     	; 0x25ca <__ultoa_invert+0x86>
    25d8:	00 97       	sbiw	r24, 0x00	; 0
    25da:	61 05       	cpc	r22, r1
    25dc:	71 05       	cpc	r23, r1
    25de:	08 95       	ret
    25e0:	9b 01       	movw	r18, r22
    25e2:	ac 01       	movw	r20, r24
    25e4:	0a 2e       	mov	r0, r26
    25e6:	06 94       	lsr	r0
    25e8:	57 95       	ror	r21
    25ea:	47 95       	ror	r20
    25ec:	37 95       	ror	r19
    25ee:	27 95       	ror	r18
    25f0:	ba 95       	dec	r27
    25f2:	c9 f7       	brne	.-14     	; 0x25e6 <__ultoa_invert+0xa2>
    25f4:	62 0f       	add	r22, r18
    25f6:	73 1f       	adc	r23, r19
    25f8:	84 1f       	adc	r24, r20
    25fa:	95 1f       	adc	r25, r21
    25fc:	a0 1d       	adc	r26, r0
    25fe:	08 95       	ret

00002600 <eeprom_read_byte>:
    2600:	e1 99       	sbic	0x1c, 1	; 28
    2602:	fe cf       	rjmp	.-4      	; 0x2600 <eeprom_read_byte>
    2604:	9f bb       	out	0x1f, r25	; 31
    2606:	8e bb       	out	0x1e, r24	; 30
    2608:	e0 9a       	sbi	0x1c, 0	; 28
    260a:	99 27       	eor	r25, r25
    260c:	8d b3       	in	r24, 0x1d	; 29
    260e:	08 95       	ret

00002610 <eeprom_read_word>:
    2610:	a8 e1       	ldi	r26, 0x18	; 24
    2612:	b0 e0       	ldi	r27, 0x00	; 0
    2614:	42 e0       	ldi	r20, 0x02	; 2
    2616:	50 e0       	ldi	r21, 0x00	; 0
    2618:	0c 94 22 13 	jmp	0x2644	; 0x2644 <eeprom_read_blraw>

0000261c <eeprom_write_byte>:
    261c:	26 2f       	mov	r18, r22

0000261e <eeprom_write_r18>:
    261e:	e1 99       	sbic	0x1c, 1	; 28
    2620:	fe cf       	rjmp	.-4      	; 0x261e <eeprom_write_r18>
    2622:	9f bb       	out	0x1f, r25	; 31
    2624:	8e bb       	out	0x1e, r24	; 30
    2626:	2d bb       	out	0x1d, r18	; 29
    2628:	0f b6       	in	r0, 0x3f	; 63
    262a:	f8 94       	cli
    262c:	e2 9a       	sbi	0x1c, 2	; 28
    262e:	e1 9a       	sbi	0x1c, 1	; 28
    2630:	0f be       	out	0x3f, r0	; 63
    2632:	01 96       	adiw	r24, 0x01	; 1
    2634:	08 95       	ret

00002636 <eeprom_write_word>:
    2636:	0e 94 0e 13 	call	0x261c	; 0x261c <eeprom_write_byte>
    263a:	27 2f       	mov	r18, r23
    263c:	0c 94 0f 13 	jmp	0x261e	; 0x261e <eeprom_write_r18>

00002640 <eeprom_read_block>:
    2640:	dc 01       	movw	r26, r24
    2642:	cb 01       	movw	r24, r22

00002644 <eeprom_read_blraw>:
    2644:	fc 01       	movw	r30, r24
    2646:	e1 99       	sbic	0x1c, 1	; 28
    2648:	fe cf       	rjmp	.-4      	; 0x2646 <eeprom_read_blraw+0x2>
    264a:	06 c0       	rjmp	.+12     	; 0x2658 <eeprom_read_blraw+0x14>
    264c:	ff bb       	out	0x1f, r31	; 31
    264e:	ee bb       	out	0x1e, r30	; 30
    2650:	e0 9a       	sbi	0x1c, 0	; 28
    2652:	31 96       	adiw	r30, 0x01	; 1
    2654:	0d b2       	in	r0, 0x1d	; 29
    2656:	0d 92       	st	X+, r0
    2658:	41 50       	subi	r20, 0x01	; 1
    265a:	50 40       	sbci	r21, 0x00	; 0
    265c:	b8 f7       	brcc	.-18     	; 0x264c <eeprom_read_blraw+0x8>
    265e:	08 95       	ret

00002660 <_exit>:
    2660:	f8 94       	cli

00002662 <__stop_program>:
    2662:	ff cf       	rjmp	.-2      	; 0x2662 <__stop_program>
