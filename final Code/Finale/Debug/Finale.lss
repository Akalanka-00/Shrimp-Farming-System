
Finale.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002480  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000234  00800060  00002480  00002514  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002f  00800294  00800294  00002748  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002748  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000027a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  000027e0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000028ae  00000000  00000000  000029b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b5  00000000  00000000  00005266  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014da  00000000  00000000  00005c1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000414  00000000  00000000  000070f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006cc  00000000  00000000  0000750c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014c6  00000000  00000000  00007bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  0000909e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       8:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      20:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 b7 06 	jmp	0xd6e	; 0xd6e <__vector_10>
      2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__vector_13>
      38:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d8 e0       	ldi	r29, 0x08	; 8
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	12 e0       	ldi	r17, 0x02	; 2
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	e0 e8       	ldi	r30, 0x80	; 128
     16a:	f4 e2       	ldi	r31, 0x24	; 36
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	a4 39       	cpi	r26, 0x94	; 148
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	22 e0       	ldi	r18, 0x02	; 2
     17a:	a4 e9       	ldi	r26, 0x94	; 148
     17c:	b2 e0       	ldi	r27, 0x02	; 2
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	a3 3c       	cpi	r26, 0xC3	; 195
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 8f 07 	call	0xf1e	; 0xf1e <main>
     18c:	0c 94 3e 12 	jmp	0x247c	; 0x247c <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <TWIInit>:
		contactNo[i+1] = eeprom_read_word((uint8_t*)phoneNoAddress[i]);
	}
	
	return "+";
	//feedingWeight=eeprom_read_word((uint8_t*)WeightDataAdress);
}
     194:	11 b8       	out	0x01, r1	; 1
     196:	88 e4       	ldi	r24, 0x48	; 72
     198:	80 b9       	out	0x00, r24	; 0
     19a:	84 e0       	ldi	r24, 0x04	; 4
     19c:	86 bf       	out	0x36, r24	; 54
     19e:	08 95       	ret

000001a0 <TWIStart>:
     1a0:	84 ea       	ldi	r24, 0xA4	; 164
     1a2:	86 bf       	out	0x36, r24	; 54
     1a4:	06 b6       	in	r0, 0x36	; 54
     1a6:	07 fe       	sbrs	r0, 7
     1a8:	fd cf       	rjmp	.-6      	; 0x1a4 <TWIStart+0x4>
     1aa:	08 95       	ret

000001ac <TWIStop>:
     1ac:	84 e9       	ldi	r24, 0x94	; 148
     1ae:	86 bf       	out	0x36, r24	; 54
     1b0:	06 b6       	in	r0, 0x36	; 54
     1b2:	04 fc       	sbrc	r0, 4
     1b4:	fd cf       	rjmp	.-6      	; 0x1b0 <TWIStop+0x4>
     1b6:	08 95       	ret

000001b8 <TWIWriteAddrs>:
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	88 0f       	add	r24, r24
     1bc:	99 1f       	adc	r25, r25
     1be:	86 2b       	or	r24, r22
     1c0:	83 b9       	out	0x03, r24	; 3
     1c2:	84 e8       	ldi	r24, 0x84	; 132
     1c4:	86 bf       	out	0x36, r24	; 54
     1c6:	06 b6       	in	r0, 0x36	; 54
     1c8:	07 fe       	sbrs	r0, 7
     1ca:	fd cf       	rjmp	.-6      	; 0x1c6 <TWIWriteAddrs+0xe>
     1cc:	81 b1       	in	r24, 0x01	; 1
     1ce:	88 7f       	andi	r24, 0xF8	; 248
     1d0:	08 95       	ret

000001d2 <TWIWriteData>:
     1d2:	83 b9       	out	0x03, r24	; 3
     1d4:	84 e8       	ldi	r24, 0x84	; 132
     1d6:	86 bf       	out	0x36, r24	; 54
     1d8:	06 b6       	in	r0, 0x36	; 54
     1da:	07 fe       	sbrs	r0, 7
     1dc:	fd cf       	rjmp	.-6      	; 0x1d8 <TWIWriteData+0x6>
     1de:	81 b1       	in	r24, 0x01	; 1
     1e0:	88 7f       	andi	r24, 0xF8	; 248
     1e2:	08 95       	ret

000001e4 <TWIReadACK>:
     1e4:	84 ec       	ldi	r24, 0xC4	; 196
     1e6:	86 bf       	out	0x36, r24	; 54
     1e8:	06 b6       	in	r0, 0x36	; 54
     1ea:	07 fe       	sbrs	r0, 7
     1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <TWIReadACK+0x4>
     1ee:	83 b1       	in	r24, 0x03	; 3
     1f0:	08 95       	ret

000001f2 <TWIReadNACK>:
     1f2:	84 e8       	ldi	r24, 0x84	; 132
     1f4:	86 bf       	out	0x36, r24	; 54
     1f6:	06 b6       	in	r0, 0x36	; 54
     1f8:	07 fe       	sbrs	r0, 7
     1fa:	fd cf       	rjmp	.-6      	; 0x1f6 <TWIReadNACK+0x4>
     1fc:	83 b1       	in	r24, 0x03	; 3
     1fe:	08 95       	ret

00000200 <LcdBacklight>:
     200:	81 30       	cpi	r24, 0x01	; 1
     202:	21 f4       	brne	.+8      	; 0x20c <LcdBacklight+0xc>
     204:	88 e0       	ldi	r24, 0x08	; 8
     206:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <Backlight>
     20a:	08 95       	ret
     20c:	10 92 a8 02 	sts	0x02A8, r1	; 0x8002a8 <Backlight>
     210:	08 95       	ret

00000212 <Lcd4bitdata>:
     212:	1f 93       	push	r17
     214:	cf 93       	push	r28
     216:	df 93       	push	r29
     218:	d8 2f       	mov	r29, r24
     21a:	c6 2f       	mov	r28, r22
     21c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <deviceAdress>
     226:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     22a:	1d 2f       	mov	r17, r29
     22c:	1c 2b       	or	r17, r28
     22e:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <Backlight>
     232:	81 2b       	or	r24, r17
     234:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     238:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     23c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <deviceAdress>
     246:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     24a:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <Backlight>
     24e:	81 2b       	or	r24, r17
     250:	84 60       	ori	r24, 0x04	; 4
     252:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     256:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     25a:	8f e8       	ldi	r24, 0x8F	; 143
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	01 97       	sbiw	r24, 0x01	; 1
     260:	f1 f7       	brne	.-4      	; 0x25e <Lcd4bitdata+0x4c>
     262:	00 c0       	rjmp	.+0      	; 0x264 <Lcd4bitdata+0x52>
     264:	00 00       	nop
     266:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     26a:	60 e0       	ldi	r22, 0x00	; 0
     26c:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <deviceAdress>
     270:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     274:	db 7f       	andi	r29, 0xFB	; 251
     276:	cd 2b       	or	r28, r29
     278:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <Backlight>
     27c:	8c 2b       	or	r24, r28
     27e:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     282:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     286:	8f e9       	ldi	r24, 0x9F	; 159
     288:	9f e0       	ldi	r25, 0x0F	; 15
     28a:	01 97       	sbiw	r24, 0x01	; 1
     28c:	f1 f7       	brne	.-4      	; 0x28a <Lcd4bitdata+0x78>
     28e:	00 c0       	rjmp	.+0      	; 0x290 <Lcd4bitdata+0x7e>
     290:	00 00       	nop
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	1f 91       	pop	r17
     298:	08 95       	ret

0000029a <LcdCommand>:
     29a:	cf 93       	push	r28
     29c:	c8 2f       	mov	r28, r24
     29e:	60 e0       	ldi	r22, 0x00	; 0
     2a0:	80 7f       	andi	r24, 0xF0	; 240
     2a2:	0e 94 09 01 	call	0x212	; 0x212 <Lcd4bitdata>
     2a6:	60 e0       	ldi	r22, 0x00	; 0
     2a8:	8c 2f       	mov	r24, r28
     2aa:	82 95       	swap	r24
     2ac:	80 7f       	andi	r24, 0xF0	; 240
     2ae:	0e 94 09 01 	call	0x212	; 0x212 <Lcd4bitdata>
     2b2:	cf 91       	pop	r28
     2b4:	08 95       	ret

000002b6 <LcdInit>:
     2b6:	0e 94 ca 00 	call	0x194	; 0x194 <TWIInit>
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	0e 94 00 01 	call	0x200	; 0x200 <LcdBacklight>
     2c0:	8f e3       	ldi	r24, 0x3F	; 63
     2c2:	9c e9       	ldi	r25, 0x9C	; 156
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <LcdInit+0xe>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <LcdInit+0x14>
     2ca:	00 00       	nop
     2cc:	87 e2       	ldi	r24, 0x27	; 39
     2ce:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <deviceAdress>
     2d2:	82 e0       	ldi	r24, 0x02	; 2
     2d4:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     2d8:	88 e2       	ldi	r24, 0x28	; 40
     2da:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     2de:	8c e0       	ldi	r24, 0x0C	; 12
     2e0:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     2e4:	86 e0       	ldi	r24, 0x06	; 6
     2e6:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     2f0:	08 95       	ret

000002f2 <LcdChar>:
     2f2:	cf 93       	push	r28
     2f4:	c8 2f       	mov	r28, r24
     2f6:	61 e0       	ldi	r22, 0x01	; 1
     2f8:	80 7f       	andi	r24, 0xF0	; 240
     2fa:	0e 94 09 01 	call	0x212	; 0x212 <Lcd4bitdata>
     2fe:	61 e0       	ldi	r22, 0x01	; 1
     300:	8c 2f       	mov	r24, r28
     302:	82 95       	swap	r24
     304:	80 7f       	andi	r24, 0xF0	; 240
     306:	0e 94 09 01 	call	0x212	; 0x212 <Lcd4bitdata>
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <LcdString>:
     30e:	0f 93       	push	r16
     310:	1f 93       	push	r17
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	8c 01       	movw	r16, r24
     318:	c0 e0       	ldi	r28, 0x00	; 0
     31a:	d0 e0       	ldi	r29, 0x00	; 0
     31c:	03 c0       	rjmp	.+6      	; 0x324 <LcdString+0x16>
     31e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <LcdChar>
     322:	21 96       	adiw	r28, 0x01	; 1
     324:	f8 01       	movw	r30, r16
     326:	ec 0f       	add	r30, r28
     328:	fd 1f       	adc	r31, r29
     32a:	80 81       	ld	r24, Z
     32c:	81 11       	cpse	r24, r1
     32e:	f7 cf       	rjmp	.-18     	; 0x31e <LcdString+0x10>
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	1f 91       	pop	r17
     336:	0f 91       	pop	r16
     338:	08 95       	ret

0000033a <LcdSetCursor>:
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	ea 01       	movw	r28, r20
     340:	61 30       	cpi	r22, 0x01	; 1
     342:	31 f0       	breq	.+12     	; 0x350 <LcdSetCursor+0x16>
     344:	58 f0       	brcs	.+22     	; 0x35c <LcdSetCursor+0x22>
     346:	62 30       	cpi	r22, 0x02	; 2
     348:	29 f0       	breq	.+10     	; 0x354 <LcdSetCursor+0x1a>
     34a:	63 30       	cpi	r22, 0x03	; 3
     34c:	29 f0       	breq	.+10     	; 0x358 <LcdSetCursor+0x1e>
     34e:	07 c0       	rjmp	.+14     	; 0x35e <LcdSetCursor+0x24>
     350:	90 ec       	ldi	r25, 0xC0	; 192
     352:	05 c0       	rjmp	.+10     	; 0x35e <LcdSetCursor+0x24>
     354:	94 e9       	ldi	r25, 0x94	; 148
     356:	03 c0       	rjmp	.+6      	; 0x35e <LcdSetCursor+0x24>
     358:	94 ed       	ldi	r25, 0xD4	; 212
     35a:	01 c0       	rjmp	.+2      	; 0x35e <LcdSetCursor+0x24>
     35c:	90 e8       	ldi	r25, 0x80	; 128
     35e:	8f 70       	andi	r24, 0x0F	; 15
     360:	89 2b       	or	r24, r25
     362:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     366:	ce 01       	movw	r24, r28
     368:	0e 94 87 01 	call	0x30e	; 0x30e <LcdString>
     36c:	df 91       	pop	r29
     36e:	cf 91       	pop	r28
     370:	08 95       	ret

00000372 <USART_Init>:
     372:	9c 01       	movw	r18, r24
     374:	40 e0       	ldi	r20, 0x00	; 0
     376:	50 e0       	ldi	r21, 0x00	; 0
     378:	60 e2       	ldi	r22, 0x20	; 32
     37a:	71 ea       	ldi	r23, 0xA1	; 161
     37c:	87 e0       	ldi	r24, 0x07	; 7
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	0e 94 ec 0f 	call	0x1fd8	; 0x1fd8 <__divmodsi4>
     384:	21 50       	subi	r18, 0x01	; 1
     386:	31 09       	sbc	r19, r1
     388:	30 bd       	out	0x20, r19	; 32
     38a:	29 b9       	out	0x09, r18	; 9
     38c:	88 e1       	ldi	r24, 0x18	; 24
     38e:	8a b9       	out	0x0a, r24	; 10
     390:	8e e8       	ldi	r24, 0x8E	; 142
     392:	80 bd       	out	0x20, r24	; 32
     394:	78 94       	sei
     396:	08 95       	ret

00000398 <USART_Transmit>:
     398:	5d 9b       	sbis	0x0b, 5	; 11
     39a:	fe cf       	rjmp	.-4      	; 0x398 <USART_Transmit>
     39c:	8c b9       	out	0x0c, r24	; 12
     39e:	08 95       	ret

000003a0 <USART_TxStringln>:
     3a0:	cf 93       	push	r28
     3a2:	df 93       	push	r29
     3a4:	ec 01       	movw	r28, r24
     3a6:	03 c0       	rjmp	.+6      	; 0x3ae <USART_TxStringln+0xe>
     3a8:	21 96       	adiw	r28, 0x01	; 1
     3aa:	0e 94 cc 01 	call	0x398	; 0x398 <USART_Transmit>
     3ae:	88 81       	ld	r24, Y
     3b0:	81 11       	cpse	r24, r1
     3b2:	fa cf       	rjmp	.-12     	; 0x3a8 <USART_TxStringln+0x8>
     3b4:	8d e0       	ldi	r24, 0x0D	; 13
     3b6:	0e 94 cc 01 	call	0x398	; 0x398 <USART_Transmit>
     3ba:	8a e0       	ldi	r24, 0x0A	; 10
     3bc:	0e 94 cc 01 	call	0x398	; 0x398 <USART_Transmit>
     3c0:	df 91       	pop	r29
     3c2:	cf 91       	pop	r28
     3c4:	08 95       	ret

000003c6 <__vector_13>:
     3c6:	1f 92       	push	r1
     3c8:	0f 92       	push	r0
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	0f 92       	push	r0
     3ce:	11 24       	eor	r1, r1
     3d0:	8f 93       	push	r24
     3d2:	8c b1       	in	r24, 0x0c	; 12
     3d4:	80 93 a7 02 	sts	0x02A7, r24	; 0x8002a7 <rchar>
     3d8:	8f 91       	pop	r24
     3da:	0f 90       	pop	r0
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	0f 90       	pop	r0
     3e0:	1f 90       	pop	r1
     3e2:	18 95       	reti

000003e4 <ReadADC>:
     3e4:	97 b1       	in	r25, 0x07	; 7
     3e6:	90 7f       	andi	r25, 0xF0	; 240
     3e8:	8f 70       	andi	r24, 0x0F	; 15
     3ea:	89 2b       	or	r24, r25
     3ec:	87 b9       	out	0x07, r24	; 7
     3ee:	86 b1       	in	r24, 0x06	; 6
     3f0:	80 64       	ori	r24, 0x40	; 64
     3f2:	86 b9       	out	0x06, r24	; 6
     3f4:	36 99       	sbic	0x06, 6	; 6
     3f6:	fe cf       	rjmp	.-4      	; 0x3f4 <ReadADC+0x10>
     3f8:	84 b1       	in	r24, 0x04	; 4
     3fa:	95 b1       	in	r25, 0x05	; 5
     3fc:	08 95       	ret

000003fe <getkeyNum>:
     3fe:	8f e0       	ldi	r24, 0x0F	; 15
     400:	87 bb       	out	0x17, r24	; 23
     402:	80 ef       	ldi	r24, 0xF0	; 240
     404:	88 bb       	out	0x18, r24	; 24
     406:	86 b3       	in	r24, 0x16	; 22
     408:	8f 60       	ori	r24, 0x0F	; 15
     40a:	80 95       	com	r24
     40c:	e1 f3       	breq	.-8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     40e:	80 32       	cpi	r24, 0x20	; 32
     410:	49 f0       	breq	.+18     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     412:	18 f4       	brcc	.+6      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     414:	80 31       	cpi	r24, 0x10	; 16
     416:	61 f0       	breq	.+24     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
     418:	0c c0       	rjmp	.+24     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     41a:	80 34       	cpi	r24, 0x40	; 64
     41c:	29 f0       	breq	.+10     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     41e:	80 38       	cpi	r24, 0x80	; 128
     420:	29 f0       	breq	.+10     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
     422:	07 c0       	rjmp	.+14     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     424:	91 e0       	ldi	r25, 0x01	; 1
     426:	05 c0       	rjmp	.+10     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     428:	92 e0       	ldi	r25, 0x02	; 2
     42a:	03 c0       	rjmp	.+6      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     42c:	93 e0       	ldi	r25, 0x03	; 3
     42e:	01 c0       	rjmp	.+2      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	17 ba       	out	0x17, r1	; 23
     434:	18 ba       	out	0x18, r1	; 24
     436:	80 ef       	ldi	r24, 0xF0	; 240
     438:	87 bb       	out	0x17, r24	; 23
     43a:	8f e0       	ldi	r24, 0x0F	; 15
     43c:	88 bb       	out	0x18, r24	; 24
     43e:	86 b3       	in	r24, 0x16	; 22
     440:	80 6f       	ori	r24, 0xF0	; 240
     442:	80 95       	com	r24
     444:	82 30       	cpi	r24, 0x02	; 2
     446:	49 f0       	breq	.+18     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
     448:	18 f4       	brcc	.+6      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
     44a:	81 30       	cpi	r24, 0x01	; 1
     44c:	61 f0       	breq	.+24     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     44e:	0c c0       	rjmp	.+24     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     450:	84 30       	cpi	r24, 0x04	; 4
     452:	29 f0       	breq	.+10     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
     454:	88 30       	cpi	r24, 0x08	; 8
     456:	29 f0       	breq	.+10     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     458:	07 c0       	rjmp	.+14     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     45a:	e1 e0       	ldi	r30, 0x01	; 1
     45c:	05 c0       	rjmp	.+10     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     45e:	e2 e0       	ldi	r30, 0x02	; 2
     460:	03 c0       	rjmp	.+6      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     462:	e3 e0       	ldi	r30, 0x03	; 3
     464:	01 c0       	rjmp	.+2      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     466:	e0 e0       	ldi	r30, 0x00	; 0
     468:	8f e0       	ldi	r24, 0x0F	; 15
     46a:	87 bb       	out	0x17, r24	; 23
     46c:	80 ef       	ldi	r24, 0xF0	; 240
     46e:	88 bb       	out	0x18, r24	; 24
     470:	f0 e0       	ldi	r31, 0x00	; 0
     472:	ee 0f       	add	r30, r30
     474:	ff 1f       	adc	r31, r31
     476:	ee 0f       	add	r30, r30
     478:	ff 1f       	adc	r31, r31
     47a:	ed 57       	subi	r30, 0x7D	; 125
     47c:	fd 4f       	sbci	r31, 0xFD	; 253
     47e:	e9 0f       	add	r30, r25
     480:	f1 1d       	adc	r31, r1
     482:	80 81       	ld	r24, Z
     484:	08 95       	ret

00000486 <Addtime>:
     486:	ef 92       	push	r14
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
     492:	cd b7       	in	r28, 0x3d	; 61
     494:	de b7       	in	r29, 0x3e	; 62
     496:	2c 97       	sbiw	r28, 0x0c	; 12
     498:	0f b6       	in	r0, 0x3f	; 63
     49a:	f8 94       	cli
     49c:	de bf       	out	0x3e, r29	; 62
     49e:	0f be       	out	0x3f, r0	; 63
     4a0:	cd bf       	out	0x3d, r28	; 61
     4a2:	08 2f       	mov	r16, r24
     4a4:	81 e0       	ldi	r24, 0x01	; 1
     4a6:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     4aa:	4f ed       	ldi	r20, 0xDF	; 223
     4ac:	50 e0       	ldi	r21, 0x00	; 0
     4ae:	60 e0       	ldi	r22, 0x00	; 0
     4b0:	80 e0       	ldi	r24, 0x00	; 0
     4b2:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     4b6:	2f ef       	ldi	r18, 0xFF	; 255
     4b8:	34 e3       	ldi	r19, 0x34	; 52
     4ba:	4c e0       	ldi	r20, 0x0C	; 12
     4bc:	21 50       	subi	r18, 0x01	; 1
     4be:	30 40       	sbci	r19, 0x00	; 0
     4c0:	40 40       	sbci	r20, 0x00	; 0
     4c2:	e1 f7       	brne	.-8      	; 0x4bc <Addtime+0x36>
     4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <Addtime+0x40>
     4c6:	00 00       	nop
     4c8:	19 82       	std	Y+1, r1	; 0x01
     4ca:	1a 82       	std	Y+2, r1	; 0x02
     4cc:	1b 82       	std	Y+3, r1	; 0x03
     4ce:	1c 82       	std	Y+4, r1	; 0x04
     4d0:	88 e0       	ldi	r24, 0x08	; 8
     4d2:	e7 e8       	ldi	r30, 0x87	; 135
     4d4:	f0 e0       	ldi	r31, 0x00	; 0
     4d6:	de 01       	movw	r26, r28
     4d8:	15 96       	adiw	r26, 0x05	; 5
     4da:	01 90       	ld	r0, Z+
     4dc:	0d 92       	st	X+, r0
     4de:	8a 95       	dec	r24
     4e0:	e1 f7       	brne	.-8      	; 0x4da <Addtime+0x54>
     4e2:	1f 92       	push	r1
     4e4:	1f 92       	push	r1
     4e6:	1f 92       	push	r1
     4e8:	1f 92       	push	r1
     4ea:	1f 92       	push	r1
     4ec:	1f 92       	push	r1
     4ee:	1f 92       	push	r1
     4f0:	1f 92       	push	r1
     4f2:	80 e3       	ldi	r24, 0x30	; 48
     4f4:	91 e0       	ldi	r25, 0x01	; 1
     4f6:	9f 93       	push	r25
     4f8:	8f 93       	push	r24
     4fa:	8c ea       	ldi	r24, 0xAC	; 172
     4fc:	92 e0       	ldi	r25, 0x02	; 2
     4fe:	9f 93       	push	r25
     500:	8f 93       	push	r24
     502:	0e 94 8e 11 	call	0x231c	; 0x231c <sprintf>
     506:	4c ea       	ldi	r20, 0xAC	; 172
     508:	52 e0       	ldi	r21, 0x02	; 2
     50a:	61 e0       	ldi	r22, 0x01	; 1
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     512:	4f e8       	ldi	r20, 0x8F	; 143
     514:	51 e0       	ldi	r21, 0x01	; 1
     516:	61 e0       	ldi	r22, 0x01	; 1
     518:	80 e0       	ldi	r24, 0x00	; 0
     51a:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     51e:	8d e0       	ldi	r24, 0x0D	; 13
     520:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     524:	0f b6       	in	r0, 0x3f	; 63
     526:	f8 94       	cli
     528:	de bf       	out	0x3e, r29	; 62
     52a:	0f be       	out	0x3f, r0	; 63
     52c:	cd bf       	out	0x3d, r28	; 61
     52e:	10 e0       	ldi	r17, 0x00	; 0
     530:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
     534:	21 2f       	mov	r18, r17
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	f9 01       	movw	r30, r18
     53a:	ee 0f       	add	r30, r30
     53c:	ff 1f       	adc	r31, r31
     53e:	41 e0       	ldi	r20, 0x01	; 1
     540:	50 e0       	ldi	r21, 0x00	; 0
     542:	4c 0f       	add	r20, r28
     544:	5d 1f       	adc	r21, r29
     546:	e4 0f       	add	r30, r20
     548:	f5 1f       	adc	r31, r21
     54a:	95 81       	ldd	r25, Z+5	; 0x05
     54c:	98 17       	cp	r25, r24
     54e:	08 f4       	brcc	.+2      	; 0x552 <Addtime+0xcc>
     550:	43 c0       	rjmp	.+134    	; 0x5d8 <Addtime+0x152>
     552:	fa 01       	movw	r30, r20
     554:	e2 0f       	add	r30, r18
     556:	f3 1f       	adc	r31, r19
     558:	80 83       	st	Z, r24
     55a:	3c 81       	ldd	r19, Y+4	; 0x04
     55c:	2b 81       	ldd	r18, Y+3	; 0x03
     55e:	9a 81       	ldd	r25, Y+2	; 0x02
     560:	89 81       	ldd	r24, Y+1	; 0x01
     562:	1f 92       	push	r1
     564:	3f 93       	push	r19
     566:	1f 92       	push	r1
     568:	2f 93       	push	r18
     56a:	1f 92       	push	r1
     56c:	9f 93       	push	r25
     56e:	1f 92       	push	r1
     570:	8f 93       	push	r24
     572:	80 e3       	ldi	r24, 0x30	; 48
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	9f 93       	push	r25
     578:	8f 93       	push	r24
     57a:	8c ea       	ldi	r24, 0xAC	; 172
     57c:	92 e0       	ldi	r25, 0x02	; 2
     57e:	9f 93       	push	r25
     580:	8f 93       	push	r24
     582:	0e 94 8e 11 	call	0x231c	; 0x231c <sprintf>
     586:	4c ea       	ldi	r20, 0xAC	; 172
     588:	52 e0       	ldi	r21, 0x02	; 2
     58a:	61 e0       	ldi	r22, 0x01	; 1
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     592:	1f 5f       	subi	r17, 0xFF	; 255
     594:	0f b6       	in	r0, 0x3f	; 63
     596:	f8 94       	cli
     598:	de bf       	out	0x3e, r29	; 62
     59a:	0f be       	out	0x3f, r0	; 63
     59c:	cd bf       	out	0x3d, r28	; 61
     59e:	14 30       	cpi	r17, 0x04	; 4
     5a0:	08 f0       	brcs	.+2      	; 0x5a4 <Addtime+0x11e>
     5a2:	10 e0       	ldi	r17, 0x00	; 0
     5a4:	e1 2f       	mov	r30, r17
     5a6:	f0 e0       	ldi	r31, 0x00	; 0
     5a8:	ee 0f       	add	r30, r30
     5aa:	ff 1f       	adc	r31, r31
     5ac:	21 e0       	ldi	r18, 0x01	; 1
     5ae:	30 e0       	ldi	r19, 0x00	; 0
     5b0:	2c 0f       	add	r18, r28
     5b2:	3d 1f       	adc	r19, r29
     5b4:	e2 0f       	add	r30, r18
     5b6:	f3 1f       	adc	r31, r19
     5b8:	4f e8       	ldi	r20, 0x8F	; 143
     5ba:	51 e0       	ldi	r21, 0x01	; 1
     5bc:	61 e0       	ldi	r22, 0x01	; 1
     5be:	84 81       	ldd	r24, Z+4	; 0x04
     5c0:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     5c4:	3f ef       	ldi	r19, 0xFF	; 255
     5c6:	41 ee       	ldi	r20, 0xE1	; 225
     5c8:	54 e0       	ldi	r21, 0x04	; 4
     5ca:	31 50       	subi	r19, 0x01	; 1
     5cc:	40 40       	sbci	r20, 0x00	; 0
     5ce:	50 40       	sbci	r21, 0x00	; 0
     5d0:	e1 f7       	brne	.-8      	; 0x5ca <Addtime+0x144>
     5d2:	00 c0       	rjmp	.+0      	; 0x5d4 <Addtime+0x14e>
     5d4:	00 00       	nop
     5d6:	ac cf       	rjmp	.-168    	; 0x530 <Addtime+0xaa>
     5d8:	8e 30       	cpi	r24, 0x0E	; 14
     5da:	09 f0       	breq	.+2      	; 0x5de <Addtime+0x158>
     5dc:	a9 cf       	rjmp	.-174    	; 0x530 <Addtime+0xaa>
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     5e4:	8c e0       	ldi	r24, 0x0C	; 12
     5e6:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     5ea:	4a ee       	ldi	r20, 0xEA	; 234
     5ec:	50 e0       	ldi	r21, 0x00	; 0
     5ee:	60 e0       	ldi	r22, 0x00	; 0
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     5f6:	80 2f       	mov	r24, r16
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	29 81       	ldd	r18, Y+1	; 0x01
     5fc:	3a 81       	ldd	r19, Y+2	; 0x02
     5fe:	8c 01       	movw	r16, r24
     600:	00 0f       	add	r16, r16
     602:	11 1f       	adc	r17, r17
     604:	06 56       	subi	r16, 0x66	; 102
     606:	1d 4f       	sbci	r17, 0xFD	; 253
     608:	22 0f       	add	r18, r18
     60a:	42 2f       	mov	r20, r18
     60c:	44 0f       	add	r20, r20
     60e:	44 0f       	add	r20, r20
     610:	24 0f       	add	r18, r20
     612:	23 0f       	add	r18, r19
     614:	f8 01       	movw	r30, r16
     616:	20 83       	st	Z, r18
     618:	2b 81       	ldd	r18, Y+3	; 0x03
     61a:	3c 81       	ldd	r19, Y+4	; 0x04
     61c:	22 0f       	add	r18, r18
     61e:	42 2f       	mov	r20, r18
     620:	44 0f       	add	r20, r20
     622:	44 0f       	add	r20, r20
     624:	24 0f       	add	r18, r20
     626:	23 0f       	add	r18, r19
     628:	21 83       	std	Z+1, r18	; 0x01
     62a:	9c 01       	movw	r18, r24
     62c:	20 5a       	subi	r18, 0xA0	; 160
     62e:	3f 4f       	sbci	r19, 0xFF	; 255
     630:	79 01       	movw	r14, r18
     632:	f9 01       	movw	r30, r18
     634:	80 81       	ld	r24, Z
     636:	f8 01       	movw	r30, r16
     638:	60 81       	ld	r22, Z
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	0e 94 1c 12 	call	0x2438	; 0x2438 <eeprom_write_byte>
     640:	f7 01       	movw	r30, r14
     642:	80 81       	ld	r24, Z
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	f8 01       	movw	r30, r16
     648:	61 81       	ldd	r22, Z+1	; 0x01
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	0e 94 1c 12 	call	0x2438	; 0x2438 <eeprom_write_byte>
     650:	ff ef       	ldi	r31, 0xFF	; 255
     652:	24 e3       	ldi	r18, 0x34	; 52
     654:	3c e0       	ldi	r19, 0x0C	; 12
     656:	f1 50       	subi	r31, 0x01	; 1
     658:	20 40       	sbci	r18, 0x00	; 0
     65a:	30 40       	sbci	r19, 0x00	; 0
     65c:	e1 f7       	brne	.-8      	; 0x656 <Addtime+0x1d0>
     65e:	00 c0       	rjmp	.+0      	; 0x660 <Addtime+0x1da>
     660:	00 00       	nop
     662:	2c 96       	adiw	r28, 0x0c	; 12
     664:	0f b6       	in	r0, 0x3f	; 63
     666:	f8 94       	cli
     668:	de bf       	out	0x3e, r29	; 62
     66a:	0f be       	out	0x3f, r0	; 63
     66c:	cd bf       	out	0x3d, r28	; 61
     66e:	df 91       	pop	r29
     670:	cf 91       	pop	r28
     672:	1f 91       	pop	r17
     674:	0f 91       	pop	r16
     676:	ff 90       	pop	r15
     678:	ef 90       	pop	r14
     67a:	08 95       	ret

0000067c <AddWeight>:
     67c:	1f 93       	push	r17
     67e:	cf 93       	push	r28
     680:	df 93       	push	r29
     682:	cd b7       	in	r28, 0x3d	; 61
     684:	de b7       	in	r29, 0x3e	; 62
     686:	2c 97       	sbiw	r28, 0x0c	; 12
     688:	0f b6       	in	r0, 0x3f	; 63
     68a:	f8 94       	cli
     68c:	de bf       	out	0x3e, r29	; 62
     68e:	0f be       	out	0x3f, r0	; 63
     690:	cd bf       	out	0x3d, r28	; 61
     692:	81 e0       	ldi	r24, 0x01	; 1
     694:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     698:	45 ef       	ldi	r20, 0xF5	; 245
     69a:	50 e0       	ldi	r21, 0x00	; 0
     69c:	60 e0       	ldi	r22, 0x00	; 0
     69e:	80 e0       	ldi	r24, 0x00	; 0
     6a0:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     6a4:	2f ef       	ldi	r18, 0xFF	; 255
     6a6:	44 e3       	ldi	r20, 0x34	; 52
     6a8:	5c e0       	ldi	r21, 0x0C	; 12
     6aa:	21 50       	subi	r18, 0x01	; 1
     6ac:	40 40       	sbci	r20, 0x00	; 0
     6ae:	50 40       	sbci	r21, 0x00	; 0
     6b0:	e1 f7       	brne	.-8      	; 0x6aa <AddWeight+0x2e>
     6b2:	00 c0       	rjmp	.+0      	; 0x6b4 <AddWeight+0x38>
     6b4:	00 00       	nop
     6b6:	19 82       	std	Y+1, r1	; 0x01
     6b8:	1a 82       	std	Y+2, r1	; 0x02
     6ba:	1b 82       	std	Y+3, r1	; 0x03
     6bc:	1c 82       	std	Y+4, r1	; 0x04
     6be:	88 e0       	ldi	r24, 0x08	; 8
     6c0:	ef e8       	ldi	r30, 0x8F	; 143
     6c2:	f0 e0       	ldi	r31, 0x00	; 0
     6c4:	de 01       	movw	r26, r28
     6c6:	15 96       	adiw	r26, 0x05	; 5
     6c8:	01 90       	ld	r0, Z+
     6ca:	0d 92       	st	X+, r0
     6cc:	8a 95       	dec	r24
     6ce:	e1 f7       	brne	.-8      	; 0x6c8 <AddWeight+0x4c>
     6d0:	1f 92       	push	r1
     6d2:	1f 92       	push	r1
     6d4:	1f 92       	push	r1
     6d6:	1f 92       	push	r1
     6d8:	1f 92       	push	r1
     6da:	1f 92       	push	r1
     6dc:	1f 92       	push	r1
     6de:	1f 92       	push	r1
     6e0:	82 e0       	ldi	r24, 0x02	; 2
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	9f 93       	push	r25
     6e6:	8f 93       	push	r24
     6e8:	8c ea       	ldi	r24, 0xAC	; 172
     6ea:	92 e0       	ldi	r25, 0x02	; 2
     6ec:	9f 93       	push	r25
     6ee:	8f 93       	push	r24
     6f0:	0e 94 8e 11 	call	0x231c	; 0x231c <sprintf>
     6f4:	4c ea       	ldi	r20, 0xAC	; 172
     6f6:	52 e0       	ldi	r21, 0x02	; 2
     6f8:	61 e0       	ldi	r22, 0x01	; 1
     6fa:	80 e0       	ldi	r24, 0x00	; 0
     6fc:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     700:	4f e8       	ldi	r20, 0x8F	; 143
     702:	51 e0       	ldi	r21, 0x01	; 1
     704:	61 e0       	ldi	r22, 0x01	; 1
     706:	80 e0       	ldi	r24, 0x00	; 0
     708:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     70c:	8d e0       	ldi	r24, 0x0D	; 13
     70e:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     712:	0f b6       	in	r0, 0x3f	; 63
     714:	f8 94       	cli
     716:	de bf       	out	0x3e, r29	; 62
     718:	0f be       	out	0x3f, r0	; 63
     71a:	cd bf       	out	0x3d, r28	; 61
     71c:	10 e0       	ldi	r17, 0x00	; 0
     71e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
     722:	21 2f       	mov	r18, r17
     724:	30 e0       	ldi	r19, 0x00	; 0
     726:	f9 01       	movw	r30, r18
     728:	ee 0f       	add	r30, r30
     72a:	ff 1f       	adc	r31, r31
     72c:	41 e0       	ldi	r20, 0x01	; 1
     72e:	50 e0       	ldi	r21, 0x00	; 0
     730:	4c 0f       	add	r20, r28
     732:	5d 1f       	adc	r21, r29
     734:	e4 0f       	add	r30, r20
     736:	f5 1f       	adc	r31, r21
     738:	95 81       	ldd	r25, Z+5	; 0x05
     73a:	98 17       	cp	r25, r24
     73c:	08 f4       	brcc	.+2      	; 0x740 <AddWeight+0xc4>
     73e:	43 c0       	rjmp	.+134    	; 0x7c6 <AddWeight+0x14a>
     740:	fa 01       	movw	r30, r20
     742:	e2 0f       	add	r30, r18
     744:	f3 1f       	adc	r31, r19
     746:	80 83       	st	Z, r24
     748:	3c 81       	ldd	r19, Y+4	; 0x04
     74a:	2b 81       	ldd	r18, Y+3	; 0x03
     74c:	9a 81       	ldd	r25, Y+2	; 0x02
     74e:	89 81       	ldd	r24, Y+1	; 0x01
     750:	1f 92       	push	r1
     752:	3f 93       	push	r19
     754:	1f 92       	push	r1
     756:	2f 93       	push	r18
     758:	1f 92       	push	r1
     75a:	9f 93       	push	r25
     75c:	1f 92       	push	r1
     75e:	8f 93       	push	r24
     760:	82 e0       	ldi	r24, 0x02	; 2
     762:	91 e0       	ldi	r25, 0x01	; 1
     764:	9f 93       	push	r25
     766:	8f 93       	push	r24
     768:	8c ea       	ldi	r24, 0xAC	; 172
     76a:	92 e0       	ldi	r25, 0x02	; 2
     76c:	9f 93       	push	r25
     76e:	8f 93       	push	r24
     770:	0e 94 8e 11 	call	0x231c	; 0x231c <sprintf>
     774:	4c ea       	ldi	r20, 0xAC	; 172
     776:	52 e0       	ldi	r21, 0x02	; 2
     778:	61 e0       	ldi	r22, 0x01	; 1
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     780:	1f 5f       	subi	r17, 0xFF	; 255
     782:	0f b6       	in	r0, 0x3f	; 63
     784:	f8 94       	cli
     786:	de bf       	out	0x3e, r29	; 62
     788:	0f be       	out	0x3f, r0	; 63
     78a:	cd bf       	out	0x3d, r28	; 61
     78c:	14 30       	cpi	r17, 0x04	; 4
     78e:	08 f0       	brcs	.+2      	; 0x792 <AddWeight+0x116>
     790:	10 e0       	ldi	r17, 0x00	; 0
     792:	e1 2f       	mov	r30, r17
     794:	f0 e0       	ldi	r31, 0x00	; 0
     796:	ee 0f       	add	r30, r30
     798:	ff 1f       	adc	r31, r31
     79a:	41 e0       	ldi	r20, 0x01	; 1
     79c:	50 e0       	ldi	r21, 0x00	; 0
     79e:	4c 0f       	add	r20, r28
     7a0:	5d 1f       	adc	r21, r29
     7a2:	e4 0f       	add	r30, r20
     7a4:	f5 1f       	adc	r31, r21
     7a6:	4f e8       	ldi	r20, 0x8F	; 143
     7a8:	51 e0       	ldi	r21, 0x01	; 1
     7aa:	61 e0       	ldi	r22, 0x01	; 1
     7ac:	84 81       	ldd	r24, Z+4	; 0x04
     7ae:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     7b2:	5f ef       	ldi	r21, 0xFF	; 255
     7b4:	81 ee       	ldi	r24, 0xE1	; 225
     7b6:	94 e0       	ldi	r25, 0x04	; 4
     7b8:	51 50       	subi	r21, 0x01	; 1
     7ba:	80 40       	sbci	r24, 0x00	; 0
     7bc:	90 40       	sbci	r25, 0x00	; 0
     7be:	e1 f7       	brne	.-8      	; 0x7b8 <AddWeight+0x13c>
     7c0:	00 c0       	rjmp	.+0      	; 0x7c2 <AddWeight+0x146>
     7c2:	00 00       	nop
     7c4:	ac cf       	rjmp	.-168    	; 0x71e <AddWeight+0xa2>
     7c6:	8e 30       	cpi	r24, 0x0E	; 14
     7c8:	09 f0       	breq	.+2      	; 0x7cc <AddWeight+0x150>
     7ca:	a9 cf       	rjmp	.-174    	; 0x71e <AddWeight+0xa2>
     7cc:	81 e0       	ldi	r24, 0x01	; 1
     7ce:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     7d2:	8c e0       	ldi	r24, 0x0C	; 12
     7d4:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     7d8:	4c e0       	ldi	r20, 0x0C	; 12
     7da:	51 e0       	ldi	r21, 0x01	; 1
     7dc:	60 e0       	ldi	r22, 0x00	; 0
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     7e4:	29 81       	ldd	r18, Y+1	; 0x01
     7e6:	88 ee       	ldi	r24, 0xE8	; 232
     7e8:	93 e0       	ldi	r25, 0x03	; 3
     7ea:	28 9f       	mul	r18, r24
     7ec:	b0 01       	movw	r22, r0
     7ee:	29 9f       	mul	r18, r25
     7f0:	70 0d       	add	r23, r0
     7f2:	11 24       	eor	r1, r1
     7f4:	8a 81       	ldd	r24, Y+2	; 0x02
     7f6:	24 e6       	ldi	r18, 0x64	; 100
     7f8:	82 9f       	mul	r24, r18
     7fa:	60 0d       	add	r22, r0
     7fc:	71 1d       	adc	r23, r1
     7fe:	11 24       	eor	r1, r1
     800:	8b 81       	ldd	r24, Y+3	; 0x03
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	9c 01       	movw	r18, r24
     806:	22 0f       	add	r18, r18
     808:	33 1f       	adc	r19, r19
     80a:	88 0f       	add	r24, r24
     80c:	99 1f       	adc	r25, r25
     80e:	88 0f       	add	r24, r24
     810:	99 1f       	adc	r25, r25
     812:	88 0f       	add	r24, r24
     814:	99 1f       	adc	r25, r25
     816:	82 0f       	add	r24, r18
     818:	93 1f       	adc	r25, r19
     81a:	68 0f       	add	r22, r24
     81c:	79 1f       	adc	r23, r25
     81e:	8c 81       	ldd	r24, Y+4	; 0x04
     820:	68 0f       	add	r22, r24
     822:	71 1d       	adc	r23, r1
     824:	70 93 99 02 	sts	0x0299, r23	; 0x800299 <feedingWeight+0x1>
     828:	60 93 98 02 	sts	0x0298, r22	; 0x800298 <feedingWeight>
     82c:	86 e0       	ldi	r24, 0x06	; 6
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	0e 94 29 12 	call	0x2452	; 0x2452 <eeprom_write_word>
     834:	4f ef       	ldi	r20, 0xFF	; 255
     836:	54 e3       	ldi	r21, 0x34	; 52
     838:	8c e0       	ldi	r24, 0x0C	; 12
     83a:	41 50       	subi	r20, 0x01	; 1
     83c:	50 40       	sbci	r21, 0x00	; 0
     83e:	80 40       	sbci	r24, 0x00	; 0
     840:	e1 f7       	brne	.-8      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     842:	00 c0       	rjmp	.+0      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
     844:	00 00       	nop
     846:	2c 96       	adiw	r28, 0x0c	; 12
     848:	0f b6       	in	r0, 0x3f	; 63
     84a:	f8 94       	cli
     84c:	de bf       	out	0x3e, r29	; 62
     84e:	0f be       	out	0x3f, r0	; 63
     850:	cd bf       	out	0x3d, r28	; 61
     852:	df 91       	pop	r29
     854:	cf 91       	pop	r28
     856:	1f 91       	pop	r17
     858:	08 95       	ret

0000085a <setTime>:
     85a:	0f 93       	push	r16
     85c:	1f 93       	push	r17
     85e:	cf 93       	push	r28
     860:	df 93       	push	r29
     862:	08 2f       	mov	r16, r24
     864:	16 2f       	mov	r17, r22
     866:	d4 2f       	mov	r29, r20
     868:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     86c:	60 e0       	ldi	r22, 0x00	; 0
     86e:	88 e6       	ldi	r24, 0x68	; 104
     870:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     874:	82 e0       	ldi	r24, 0x02	; 2
     876:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     87a:	cd ec       	ldi	r28, 0xCD	; 205
     87c:	0c 9f       	mul	r16, r28
     87e:	91 2d       	mov	r25, r1
     880:	11 24       	eor	r1, r1
     882:	96 95       	lsr	r25
     884:	96 95       	lsr	r25
     886:	96 95       	lsr	r25
     888:	20 e1       	ldi	r18, 0x10	; 16
     88a:	92 9f       	mul	r25, r18
     88c:	a0 01       	movw	r20, r0
     88e:	11 24       	eor	r1, r1
     890:	99 0f       	add	r25, r25
     892:	29 2f       	mov	r18, r25
     894:	22 0f       	add	r18, r18
     896:	22 0f       	add	r18, r18
     898:	92 0f       	add	r25, r18
     89a:	80 2f       	mov	r24, r16
     89c:	89 1b       	sub	r24, r25
     89e:	84 2b       	or	r24, r20
     8a0:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     8a4:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     8a8:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     8ac:	60 e0       	ldi	r22, 0x00	; 0
     8ae:	88 e6       	ldi	r24, 0x68	; 104
     8b0:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     8b4:	81 e0       	ldi	r24, 0x01	; 1
     8b6:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     8ba:	1c 9f       	mul	r17, r28
     8bc:	91 2d       	mov	r25, r1
     8be:	11 24       	eor	r1, r1
     8c0:	96 95       	lsr	r25
     8c2:	96 95       	lsr	r25
     8c4:	96 95       	lsr	r25
     8c6:	80 e1       	ldi	r24, 0x10	; 16
     8c8:	98 9f       	mul	r25, r24
     8ca:	a0 01       	movw	r20, r0
     8cc:	11 24       	eor	r1, r1
     8ce:	99 0f       	add	r25, r25
     8d0:	29 2f       	mov	r18, r25
     8d2:	22 0f       	add	r18, r18
     8d4:	22 0f       	add	r18, r18
     8d6:	92 0f       	add	r25, r18
     8d8:	81 2f       	mov	r24, r17
     8da:	89 1b       	sub	r24, r25
     8dc:	84 2b       	or	r24, r20
     8de:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     8e2:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     8e6:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     8ea:	60 e0       	ldi	r22, 0x00	; 0
     8ec:	88 e6       	ldi	r24, 0x68	; 104
     8ee:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     8f8:	dc 9f       	mul	r29, r28
     8fa:	c1 2d       	mov	r28, r1
     8fc:	11 24       	eor	r1, r1
     8fe:	c6 95       	lsr	r28
     900:	c6 95       	lsr	r28
     902:	c6 95       	lsr	r28
     904:	20 e1       	ldi	r18, 0x10	; 16
     906:	c2 9f       	mul	r28, r18
     908:	c0 01       	movw	r24, r0
     90a:	11 24       	eor	r1, r1
     90c:	cc 0f       	add	r28, r28
     90e:	9c 2f       	mov	r25, r28
     910:	99 0f       	add	r25, r25
     912:	99 0f       	add	r25, r25
     914:	c9 0f       	add	r28, r25
     916:	dc 1b       	sub	r29, r28
     918:	8d 2b       	or	r24, r29
     91a:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     91e:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     922:	df 91       	pop	r29
     924:	cf 91       	pop	r28
     926:	1f 91       	pop	r17
     928:	0f 91       	pop	r16
     92a:	08 95       	ret

0000092c <setOngoingTime>:
     92c:	1f 93       	push	r17
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	cd b7       	in	r28, 0x3d	; 61
     934:	de b7       	in	r29, 0x3e	; 62
     936:	62 97       	sbiw	r28, 0x12	; 18
     938:	0f b6       	in	r0, 0x3f	; 63
     93a:	f8 94       	cli
     93c:	de bf       	out	0x3e, r29	; 62
     93e:	0f be       	out	0x3f, r0	; 63
     940:	cd bf       	out	0x3d, r28	; 61
     942:	81 e0       	ldi	r24, 0x01	; 1
     944:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     948:	49 e1       	ldi	r20, 0x19	; 25
     94a:	51 e0       	ldi	r21, 0x01	; 1
     94c:	60 e0       	ldi	r22, 0x00	; 0
     94e:	80 e0       	ldi	r24, 0x00	; 0
     950:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     954:	2f ef       	ldi	r18, 0xFF	; 255
     956:	44 e3       	ldi	r20, 0x34	; 52
     958:	5c e0       	ldi	r21, 0x0C	; 12
     95a:	21 50       	subi	r18, 0x01	; 1
     95c:	40 40       	sbci	r20, 0x00	; 0
     95e:	50 40       	sbci	r21, 0x00	; 0
     960:	e1 f7       	brne	.-8      	; 0x95a <setOngoingTime+0x2e>
     962:	00 c0       	rjmp	.+0      	; 0x964 <setOngoingTime+0x38>
     964:	00 00       	nop
     966:	fe 01       	movw	r30, r28
     968:	31 96       	adiw	r30, 0x01	; 1
     96a:	86 e0       	ldi	r24, 0x06	; 6
     96c:	df 01       	movw	r26, r30
     96e:	1d 92       	st	X+, r1
     970:	8a 95       	dec	r24
     972:	e9 f7       	brne	.-6      	; 0x96e <setOngoingTime+0x42>
     974:	8c e0       	ldi	r24, 0x0C	; 12
     976:	e7 e9       	ldi	r30, 0x97	; 151
     978:	f0 e0       	ldi	r31, 0x00	; 0
     97a:	de 01       	movw	r26, r28
     97c:	17 96       	adiw	r26, 0x07	; 7
     97e:	01 90       	ld	r0, Z+
     980:	0d 92       	st	X+, r0
     982:	8a 95       	dec	r24
     984:	e1 f7       	brne	.-8      	; 0x97e <setOngoingTime+0x52>
     986:	1f 92       	push	r1
     988:	1f 92       	push	r1
     98a:	1f 92       	push	r1
     98c:	1f 92       	push	r1
     98e:	1f 92       	push	r1
     990:	1f 92       	push	r1
     992:	1f 92       	push	r1
     994:	1f 92       	push	r1
     996:	1f 92       	push	r1
     998:	1f 92       	push	r1
     99a:	1f 92       	push	r1
     99c:	1f 92       	push	r1
     99e:	8b e2       	ldi	r24, 0x2B	; 43
     9a0:	91 e0       	ldi	r25, 0x01	; 1
     9a2:	9f 93       	push	r25
     9a4:	8f 93       	push	r24
     9a6:	8c ea       	ldi	r24, 0xAC	; 172
     9a8:	92 e0       	ldi	r25, 0x02	; 2
     9aa:	9f 93       	push	r25
     9ac:	8f 93       	push	r24
     9ae:	0e 94 8e 11 	call	0x231c	; 0x231c <sprintf>
     9b2:	4c ea       	ldi	r20, 0xAC	; 172
     9b4:	52 e0       	ldi	r21, 0x02	; 2
     9b6:	61 e0       	ldi	r22, 0x01	; 1
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     9be:	4f e8       	ldi	r20, 0x8F	; 143
     9c0:	51 e0       	ldi	r21, 0x01	; 1
     9c2:	61 e0       	ldi	r22, 0x01	; 1
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     9ca:	8d e0       	ldi	r24, 0x0D	; 13
     9cc:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     9d0:	0f b6       	in	r0, 0x3f	; 63
     9d2:	f8 94       	cli
     9d4:	de bf       	out	0x3e, r29	; 62
     9d6:	0f be       	out	0x3f, r0	; 63
     9d8:	cd bf       	out	0x3d, r28	; 61
     9da:	10 e0       	ldi	r17, 0x00	; 0
     9dc:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
     9e0:	21 2f       	mov	r18, r17
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	f9 01       	movw	r30, r18
     9e6:	ee 0f       	add	r30, r30
     9e8:	ff 1f       	adc	r31, r31
     9ea:	a1 e0       	ldi	r26, 0x01	; 1
     9ec:	b0 e0       	ldi	r27, 0x00	; 0
     9ee:	ac 0f       	add	r26, r28
     9f0:	bd 1f       	adc	r27, r29
     9f2:	ea 0f       	add	r30, r26
     9f4:	fb 1f       	adc	r31, r27
     9f6:	97 81       	ldd	r25, Z+7	; 0x07
     9f8:	98 17       	cp	r25, r24
     9fa:	08 f4       	brcc	.+2      	; 0x9fe <setOngoingTime+0xd2>
     9fc:	49 c0       	rjmp	.+146    	; 0xa90 <setOngoingTime+0x164>
     9fe:	fd 01       	movw	r30, r26
     a00:	e2 0f       	add	r30, r18
     a02:	f3 1f       	adc	r31, r19
     a04:	80 83       	st	Z, r24
     a06:	5e 81       	ldd	r21, Y+6	; 0x06
     a08:	4d 81       	ldd	r20, Y+5	; 0x05
     a0a:	3c 81       	ldd	r19, Y+4	; 0x04
     a0c:	2b 81       	ldd	r18, Y+3	; 0x03
     a0e:	9a 81       	ldd	r25, Y+2	; 0x02
     a10:	89 81       	ldd	r24, Y+1	; 0x01
     a12:	1f 92       	push	r1
     a14:	5f 93       	push	r21
     a16:	1f 92       	push	r1
     a18:	4f 93       	push	r20
     a1a:	1f 92       	push	r1
     a1c:	3f 93       	push	r19
     a1e:	1f 92       	push	r1
     a20:	2f 93       	push	r18
     a22:	1f 92       	push	r1
     a24:	9f 93       	push	r25
     a26:	1f 92       	push	r1
     a28:	8f 93       	push	r24
     a2a:	8b e2       	ldi	r24, 0x2B	; 43
     a2c:	91 e0       	ldi	r25, 0x01	; 1
     a2e:	9f 93       	push	r25
     a30:	8f 93       	push	r24
     a32:	8c ea       	ldi	r24, 0xAC	; 172
     a34:	92 e0       	ldi	r25, 0x02	; 2
     a36:	9f 93       	push	r25
     a38:	8f 93       	push	r24
     a3a:	0e 94 8e 11 	call	0x231c	; 0x231c <sprintf>
     a3e:	4c ea       	ldi	r20, 0xAC	; 172
     a40:	52 e0       	ldi	r21, 0x02	; 2
     a42:	61 e0       	ldi	r22, 0x01	; 1
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     a4a:	1f 5f       	subi	r17, 0xFF	; 255
     a4c:	0f b6       	in	r0, 0x3f	; 63
     a4e:	f8 94       	cli
     a50:	de bf       	out	0x3e, r29	; 62
     a52:	0f be       	out	0x3f, r0	; 63
     a54:	cd bf       	out	0x3d, r28	; 61
     a56:	16 30       	cpi	r17, 0x06	; 6
     a58:	08 f0       	brcs	.+2      	; 0xa5c <setOngoingTime+0x130>
     a5a:	10 e0       	ldi	r17, 0x00	; 0
     a5c:	e1 2f       	mov	r30, r17
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	ee 0f       	add	r30, r30
     a62:	ff 1f       	adc	r31, r31
     a64:	81 e0       	ldi	r24, 0x01	; 1
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	8c 0f       	add	r24, r28
     a6a:	9d 1f       	adc	r25, r29
     a6c:	e8 0f       	add	r30, r24
     a6e:	f9 1f       	adc	r31, r25
     a70:	4f e8       	ldi	r20, 0x8F	; 143
     a72:	51 e0       	ldi	r21, 0x01	; 1
     a74:	61 e0       	ldi	r22, 0x01	; 1
     a76:	86 81       	ldd	r24, Z+6	; 0x06
     a78:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     a7c:	9f ef       	ldi	r25, 0xFF	; 255
     a7e:	a1 ee       	ldi	r26, 0xE1	; 225
     a80:	b4 e0       	ldi	r27, 0x04	; 4
     a82:	91 50       	subi	r25, 0x01	; 1
     a84:	a0 40       	sbci	r26, 0x00	; 0
     a86:	b0 40       	sbci	r27, 0x00	; 0
     a88:	e1 f7       	brne	.-8      	; 0xa82 <setOngoingTime+0x156>
     a8a:	00 c0       	rjmp	.+0      	; 0xa8c <setOngoingTime+0x160>
     a8c:	00 00       	nop
     a8e:	a6 cf       	rjmp	.-180    	; 0x9dc <setOngoingTime+0xb0>
     a90:	8d 30       	cpi	r24, 0x0D	; 13
     a92:	49 f1       	breq	.+82     	; 0xae6 <setOngoingTime+0x1ba>
     a94:	8e 30       	cpi	r24, 0x0E	; 14
     a96:	09 f0       	breq	.+2      	; 0xa9a <setOngoingTime+0x16e>
     a98:	a1 cf       	rjmp	.-190    	; 0x9dc <setOngoingTime+0xb0>
     a9a:	81 e0       	ldi	r24, 0x01	; 1
     a9c:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     aa0:	8c e0       	ldi	r24, 0x0C	; 12
     aa2:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     aa6:	4a ee       	ldi	r20, 0xEA	; 234
     aa8:	50 e0       	ldi	r21, 0x00	; 0
     aaa:	60 e0       	ldi	r22, 0x00	; 0
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     ab2:	3d 81       	ldd	r19, Y+5	; 0x05
     ab4:	6e 81       	ldd	r22, Y+6	; 0x06
     ab6:	2b 81       	ldd	r18, Y+3	; 0x03
     ab8:	5c 81       	ldd	r21, Y+4	; 0x04
     aba:	99 81       	ldd	r25, Y+1	; 0x01
     abc:	8a 81       	ldd	r24, Y+2	; 0x02
     abe:	33 0f       	add	r19, r19
     ac0:	43 2f       	mov	r20, r19
     ac2:	44 0f       	add	r20, r20
     ac4:	44 0f       	add	r20, r20
     ac6:	43 0f       	add	r20, r19
     ac8:	46 0f       	add	r20, r22
     aca:	22 0f       	add	r18, r18
     acc:	62 2f       	mov	r22, r18
     ace:	66 0f       	add	r22, r22
     ad0:	66 0f       	add	r22, r22
     ad2:	62 0f       	add	r22, r18
     ad4:	65 0f       	add	r22, r21
     ad6:	99 0f       	add	r25, r25
     ad8:	59 2f       	mov	r21, r25
     ada:	55 0f       	add	r21, r21
     adc:	55 0f       	add	r21, r21
     ade:	95 0f       	add	r25, r21
     ae0:	89 0f       	add	r24, r25
     ae2:	0e 94 2d 04 	call	0x85a	; 0x85a <setTime>
     ae6:	62 96       	adiw	r28, 0x12	; 18
     ae8:	0f b6       	in	r0, 0x3f	; 63
     aea:	f8 94       	cli
     aec:	de bf       	out	0x3e, r29	; 62
     aee:	0f be       	out	0x3f, r0	; 63
     af0:	cd bf       	out	0x3d, r28	; 61
     af2:	df 91       	pop	r29
     af4:	cf 91       	pop	r28
     af6:	1f 91       	pop	r17
     af8:	08 95       	ret

00000afa <adddata>:
     afa:	0f 93       	push	r16
     afc:	1f 93       	push	r17
     afe:	cf 93       	push	r28
     b00:	df 93       	push	r29
     b02:	cd b7       	in	r28, 0x3d	; 61
     b04:	de b7       	in	r29, 0x3e	; 62
     b06:	28 97       	sbiw	r28, 0x08	; 8
     b08:	0f b6       	in	r0, 0x3f	; 63
     b0a:	f8 94       	cli
     b0c:	de bf       	out	0x3e, r29	; 62
     b0e:	0f be       	out	0x3f, r0	; 63
     b10:	cd bf       	out	0x3d, r28	; 61
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     b18:	0e 94 96 04 	call	0x92c	; 0x92c <setOngoingTime>
     b1c:	4a e3       	ldi	r20, 0x3A	; 58
     b1e:	51 e0       	ldi	r21, 0x01	; 1
     b20:	60 e0       	ldi	r22, 0x00	; 0
     b22:	80 e0       	ldi	r24, 0x00	; 0
     b24:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     b28:	88 e0       	ldi	r24, 0x08	; 8
     b2a:	e3 ea       	ldi	r30, 0xA3	; 163
     b2c:	f0 e0       	ldi	r31, 0x00	; 0
     b2e:	de 01       	movw	r26, r28
     b30:	11 96       	adiw	r26, 0x01	; 1
     b32:	01 90       	ld	r0, Z+
     b34:	0d 92       	st	X+, r0
     b36:	8a 95       	dec	r24
     b38:	e1 f7       	brne	.-8      	; 0xb32 <adddata+0x38>
     b3a:	4a e4       	ldi	r20, 0x4A	; 74
     b3c:	51 e0       	ldi	r21, 0x01	; 1
     b3e:	61 e0       	ldi	r22, 0x01	; 1
     b40:	80 e0       	ldi	r24, 0x00	; 0
     b42:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     b46:	00 e0       	ldi	r16, 0x00	; 0
     b48:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
     b4c:	18 2f       	mov	r17, r24
     b4e:	8f 30       	cpi	r24, 0x0F	; 15
     b50:	a9 f4       	brne	.+42     	; 0xb7c <adddata+0x82>
     b52:	0f 5f       	subi	r16, 0xFF	; 255
     b54:	04 30       	cpi	r16, 0x04	; 4
     b56:	08 f0       	brcs	.+2      	; 0xb5a <adddata+0x60>
     b58:	00 e0       	ldi	r16, 0x00	; 0
     b5a:	e0 2f       	mov	r30, r16
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
     b5e:	ee 0f       	add	r30, r30
     b60:	ff 1f       	adc	r31, r31
     b62:	81 e0       	ldi	r24, 0x01	; 1
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	8c 0f       	add	r24, r28
     b68:	9d 1f       	adc	r25, r29
     b6a:	e8 0f       	add	r30, r24
     b6c:	f9 1f       	adc	r31, r25
     b6e:	40 81       	ld	r20, Z
     b70:	51 81       	ldd	r21, Z+1	; 0x01
     b72:	61 e0       	ldi	r22, 0x01	; 1
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     b7a:	02 c0       	rjmp	.+4      	; 0xb80 <adddata+0x86>
     b7c:	8d 30       	cpi	r24, 0x0D	; 13
     b7e:	a1 f0       	breq	.+40     	; 0xba8 <adddata+0xae>
     b80:	1e 30       	cpi	r17, 0x0E	; 14
     b82:	11 f7       	brne	.-60     	; 0xb48 <adddata+0x4e>
     b84:	81 e0       	ldi	r24, 0x01	; 1
     b86:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
     b8a:	49 e5       	ldi	r20, 0x59	; 89
     b8c:	51 e0       	ldi	r21, 0x01	; 1
     b8e:	60 e0       	ldi	r22, 0x00	; 0
     b90:	80 e0       	ldi	r24, 0x00	; 0
     b92:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
     b96:	9f ef       	ldi	r25, 0xFF	; 255
     b98:	29 e6       	ldi	r18, 0x69	; 105
     b9a:	88 e1       	ldi	r24, 0x18	; 24
     b9c:	91 50       	subi	r25, 0x01	; 1
     b9e:	20 40       	sbci	r18, 0x00	; 0
     ba0:	80 40       	sbci	r24, 0x00	; 0
     ba2:	e1 f7       	brne	.-8      	; 0xb9c <adddata+0xa2>
     ba4:	00 c0       	rjmp	.+0      	; 0xba6 <adddata+0xac>
     ba6:	00 00       	nop
     ba8:	03 30       	cpi	r16, 0x03	; 3
     baa:	20 f4       	brcc	.+8      	; 0xbb4 <adddata+0xba>
     bac:	80 2f       	mov	r24, r16
     bae:	0e 94 43 02 	call	0x486	; 0x486 <Addtime>
     bb2:	04 c0       	rjmp	.+8      	; 0xbbc <adddata+0xc2>
     bb4:	80 2f       	mov	r24, r16
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	0e 94 3e 03 	call	0x67c	; 0x67c <AddWeight>
     bbc:	28 96       	adiw	r28, 0x08	; 8
     bbe:	0f b6       	in	r0, 0x3f	; 63
     bc0:	f8 94       	cli
     bc2:	de bf       	out	0x3e, r29	; 62
     bc4:	0f be       	out	0x3f, r0	; 63
     bc6:	cd bf       	out	0x3d, r28	; 61
     bc8:	df 91       	pop	r29
     bca:	cf 91       	pop	r28
     bcc:	1f 91       	pop	r17
     bce:	0f 91       	pop	r16
     bd0:	08 95       	ret

00000bd2 <Readtime>:
     bd2:	1f 93       	push	r17
     bd4:	cf 93       	push	r28
     bd6:	df 93       	push	r29
     bd8:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     bdc:	60 e0       	ldi	r22, 0x00	; 0
     bde:	88 e6       	ldi	r24, 0x68	; 104
     be0:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     be4:	80 e0       	ldi	r24, 0x00	; 0
     be6:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <TWIWriteData>
     bea:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <TWIStart>
     bee:	61 e0       	ldi	r22, 0x01	; 1
     bf0:	88 e6       	ldi	r24, 0x68	; 104
     bf2:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <TWIWriteAddrs>
     bf6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <TWIReadACK>
     bfa:	18 2f       	mov	r17, r24
     bfc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <TWIReadACK>
     c00:	d8 2f       	mov	r29, r24
     c02:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <TWIReadNACK>
     c06:	c8 2f       	mov	r28, r24
     c08:	0e 94 d6 00 	call	0x1ac	; 0x1ac <TWIStop>
     c0c:	81 2f       	mov	r24, r17
     c0e:	82 95       	swap	r24
     c10:	8f 70       	andi	r24, 0x0F	; 15
     c12:	88 0f       	add	r24, r24
     c14:	98 2f       	mov	r25, r24
     c16:	99 0f       	add	r25, r25
     c18:	99 0f       	add	r25, r25
     c1a:	89 0f       	add	r24, r25
     c1c:	1f 70       	andi	r17, 0x0F	; 15
     c1e:	18 0f       	add	r17, r24
     c20:	10 93 c2 02 	sts	0x02C2, r17	; 0x8002c2 <secC>
     c24:	8d 2f       	mov	r24, r29
     c26:	82 95       	swap	r24
     c28:	8f 70       	andi	r24, 0x0F	; 15
     c2a:	88 0f       	add	r24, r24
     c2c:	98 2f       	mov	r25, r24
     c2e:	99 0f       	add	r25, r25
     c30:	99 0f       	add	r25, r25
     c32:	89 0f       	add	r24, r25
     c34:	df 70       	andi	r29, 0x0F	; 15
     c36:	d8 0f       	add	r29, r24
     c38:	d0 93 a9 02 	sts	0x02A9, r29	; 0x8002a9 <minC>
     c3c:	8c 2f       	mov	r24, r28
     c3e:	80 73       	andi	r24, 0x30	; 48
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	95 95       	asr	r25
     c44:	87 95       	ror	r24
     c46:	95 95       	asr	r25
     c48:	87 95       	ror	r24
     c4a:	95 95       	asr	r25
     c4c:	87 95       	ror	r24
     c4e:	95 95       	asr	r25
     c50:	87 95       	ror	r24
     c52:	88 0f       	add	r24, r24
     c54:	98 2f       	mov	r25, r24
     c56:	99 0f       	add	r25, r25
     c58:	99 0f       	add	r25, r25
     c5a:	89 0f       	add	r24, r25
     c5c:	cf 70       	andi	r28, 0x0F	; 15
     c5e:	8c 0f       	add	r24, r28
     c60:	80 93 aa 02 	sts	0x02AA, r24	; 0x8002aa <hourC>
     c64:	df 91       	pop	r29
     c66:	cf 91       	pop	r28
     c68:	1f 91       	pop	r17
     c6a:	08 95       	ret

00000c6c <sendSMS>:

void sendSMS(char*sms){
     c6c:	0f 93       	push	r16
     c6e:	1f 93       	push	r17
     c70:	cf 93       	push	r28
     c72:	df 93       	push	r29
     c74:	cd b7       	in	r28, 0x3d	; 61
     c76:	de b7       	in	r29, 0x3e	; 62
     c78:	e2 97       	sbiw	r28, 0x32	; 50
     c7a:	0f b6       	in	r0, 0x3f	; 63
     c7c:	f8 94       	cli
     c7e:	de bf       	out	0x3e, r29	; 62
     c80:	0f be       	out	0x3f, r0	; 63
     c82:	cd bf       	out	0x3d, r28	; 61
     c84:	8c 01       	movw	r16, r24
	char str[50];
	//char *querry = "AT+CMGS=\"%s\"",str;
	//sprintf(str,"AT+CMGS=\"%s\"\r",readPhoneNo());
	
	char *contactNo;
	contactNo[0]="+";
     c86:	e0 e0       	ldi	r30, 0x00	; 0
     c88:	f0 e0       	ldi	r31, 0x00	; 0
     c8a:	80 e9       	ldi	r24, 0x90	; 144
     c8c:	91 e0       	ldi	r25, 0x01	; 1
     c8e:	80 83       	st	Z, r24
	
/*	for (int i=0; i<11;i++)
	{
		contactNo[i+1] = eeprom_read_word((uint8_t*)phoneNoAddress[i]);
	}*/
	sprintf(str,"AT+CMGS=\"%s\"",contactNo);
     c90:	ff 93       	push	r31
     c92:	ef 93       	push	r30
     c94:	82 e9       	ldi	r24, 0x92	; 146
     c96:	91 e0       	ldi	r25, 0x01	; 1
     c98:	9f 93       	push	r25
     c9a:	8f 93       	push	r24
     c9c:	ce 01       	movw	r24, r28
     c9e:	01 96       	adiw	r24, 0x01	; 1
     ca0:	9f 93       	push	r25
     ca2:	8f 93       	push	r24
     ca4:	0e 94 8e 11 	call	0x231c	; 0x231c <sprintf>
	
	PORTA|=(1<<7);// buzzer
     ca8:	8b b3       	in	r24, 0x1b	; 27
     caa:	80 68       	ori	r24, 0x80	; 128
     cac:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cae:	2f ef       	ldi	r18, 0xFF	; 255
     cb0:	84 e3       	ldi	r24, 0x34	; 52
     cb2:	9c e0       	ldi	r25, 0x0C	; 12
     cb4:	21 50       	subi	r18, 0x01	; 1
     cb6:	80 40       	sbci	r24, 0x00	; 0
     cb8:	90 40       	sbci	r25, 0x00	; 0
     cba:	e1 f7       	brne	.-8      	; 0xcb4 <sendSMS+0x48>
     cbc:	00 c0       	rjmp	.+0      	; 0xcbe <sendSMS+0x52>
     cbe:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln("AT");
     cc0:	8f e9       	ldi	r24, 0x9F	; 159
     cc2:	91 e0       	ldi	r25, 0x01	; 1
     cc4:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <USART_TxStringln>
     cc8:	2f ef       	ldi	r18, 0xFF	; 255
     cca:	84 e3       	ldi	r24, 0x34	; 52
     ccc:	9c e0       	ldi	r25, 0x0C	; 12
     cce:	21 50       	subi	r18, 0x01	; 1
     cd0:	80 40       	sbci	r24, 0x00	; 0
     cd2:	90 40       	sbci	r25, 0x00	; 0
     cd4:	e1 f7       	brne	.-8      	; 0xcce <sendSMS+0x62>
     cd6:	00 c0       	rjmp	.+0      	; 0xcd8 <sendSMS+0x6c>
     cd8:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln("AT");
     cda:	8f e9       	ldi	r24, 0x9F	; 159
     cdc:	91 e0       	ldi	r25, 0x01	; 1
     cde:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <USART_TxStringln>
     ce2:	2f ef       	ldi	r18, 0xFF	; 255
     ce4:	84 e3       	ldi	r24, 0x34	; 52
     ce6:	9c e0       	ldi	r25, 0x0C	; 12
     ce8:	21 50       	subi	r18, 0x01	; 1
     cea:	80 40       	sbci	r24, 0x00	; 0
     cec:	90 40       	sbci	r25, 0x00	; 0
     cee:	e1 f7       	brne	.-8      	; 0xce8 <sendSMS+0x7c>
     cf0:	00 c0       	rjmp	.+0      	; 0xcf2 <sendSMS+0x86>
     cf2:	00 00       	nop
	_delay_ms(500);
	//USART_TxStringln(str);
	USART_TxStringln("AT+CMGS=\"+947672323154\"");
     cf4:	82 ea       	ldi	r24, 0xA2	; 162
     cf6:	91 e0       	ldi	r25, 0x01	; 1
     cf8:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <USART_TxStringln>
     cfc:	2f ef       	ldi	r18, 0xFF	; 255
     cfe:	84 e3       	ldi	r24, 0x34	; 52
     d00:	9c e0       	ldi	r25, 0x0C	; 12
     d02:	21 50       	subi	r18, 0x01	; 1
     d04:	80 40       	sbci	r24, 0x00	; 0
     d06:	90 40       	sbci	r25, 0x00	; 0
     d08:	e1 f7       	brne	.-8      	; 0xd02 <sendSMS+0x96>
     d0a:	00 c0       	rjmp	.+0      	; 0xd0c <sendSMS+0xa0>
     d0c:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln("AT+CMGF=1");
     d0e:	8a eb       	ldi	r24, 0xBA	; 186
     d10:	91 e0       	ldi	r25, 0x01	; 1
     d12:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <USART_TxStringln>
     d16:	2f ef       	ldi	r18, 0xFF	; 255
     d18:	84 e3       	ldi	r24, 0x34	; 52
     d1a:	9c e0       	ldi	r25, 0x0C	; 12
     d1c:	21 50       	subi	r18, 0x01	; 1
     d1e:	80 40       	sbci	r24, 0x00	; 0
     d20:	90 40       	sbci	r25, 0x00	; 0
     d22:	e1 f7       	brne	.-8      	; 0xd1c <sendSMS+0xb0>
     d24:	00 c0       	rjmp	.+0      	; 0xd26 <sendSMS+0xba>
     d26:	00 00       	nop
	_delay_ms(500);
	USART_TxStringln(sms);
     d28:	c8 01       	movw	r24, r16
     d2a:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <USART_TxStringln>
     d2e:	2f ef       	ldi	r18, 0xFF	; 255
     d30:	84 e3       	ldi	r24, 0x34	; 52
     d32:	9c e0       	ldi	r25, 0x0C	; 12
     d34:	21 50       	subi	r18, 0x01	; 1
     d36:	80 40       	sbci	r24, 0x00	; 0
     d38:	90 40       	sbci	r25, 0x00	; 0
     d3a:	e1 f7       	brne	.-8      	; 0xd34 <sendSMS+0xc8>
     d3c:	00 c0       	rjmp	.+0      	; 0xd3e <sendSMS+0xd2>
     d3e:	00 00       	nop
	_delay_ms(500);
	USART_Transmit(26);
     d40:	8a e1       	ldi	r24, 0x1A	; 26
     d42:	0e 94 cc 01 	call	0x398	; 0x398 <USART_Transmit>
	PORTA&=~(1<<7);
     d46:	8b b3       	in	r24, 0x1b	; 27
     d48:	8f 77       	andi	r24, 0x7F	; 127
     d4a:	8b bb       	out	0x1b, r24	; 27
}
     d4c:	0f 90       	pop	r0
     d4e:	0f 90       	pop	r0
     d50:	0f 90       	pop	r0
     d52:	0f 90       	pop	r0
     d54:	0f 90       	pop	r0
     d56:	0f 90       	pop	r0
     d58:	e2 96       	adiw	r28, 0x32	; 50
     d5a:	0f b6       	in	r0, 0x3f	; 63
     d5c:	f8 94       	cli
     d5e:	de bf       	out	0x3e, r29	; 62
     d60:	0f be       	out	0x3f, r0	; 63
     d62:	cd bf       	out	0x3d, r28	; 61
     d64:	df 91       	pop	r29
     d66:	cf 91       	pop	r28
     d68:	1f 91       	pop	r17
     d6a:	0f 91       	pop	r16
     d6c:	08 95       	ret

00000d6e <__vector_10>:

ISR(TIMER0_COMP_vect){//ultrasonic
     d6e:	1f 92       	push	r1
     d70:	0f 92       	push	r0
     d72:	0f b6       	in	r0, 0x3f	; 63
     d74:	0f 92       	push	r0
     d76:	11 24       	eor	r1, r1
     d78:	8f 93       	push	r24
     d7a:	9f 93       	push	r25
	TimerCal++;
     d7c:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <TimerCal>
     d80:	90 91 97 02 	lds	r25, 0x0297	; 0x800297 <TimerCal+0x1>
     d84:	01 96       	adiw	r24, 0x01	; 1
     d86:	90 93 97 02 	sts	0x0297, r25	; 0x800297 <TimerCal+0x1>
     d8a:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <TimerCal>
	TCNT0=0;
     d8e:	12 be       	out	0x32, r1	; 50
	
}
     d90:	9f 91       	pop	r25
     d92:	8f 91       	pop	r24
     d94:	0f 90       	pop	r0
     d96:	0f be       	out	0x3f, r0	; 63
     d98:	0f 90       	pop	r0
     d9a:	1f 90       	pop	r1
     d9c:	18 95       	reti

00000d9e <loadCellRead>:

float loadCellRead(){
     d9e:	cf 92       	push	r12
     da0:	df 92       	push	r13
     da2:	ef 92       	push	r14
     da4:	ff 92       	push	r15
	hx711H=0;hx711L=0;  //clear variables
     da6:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <hx711H>
     daa:	10 92 a5 02 	sts	0x02A5, r1	; 0x8002a5 <hx711L+0x1>
     dae:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <hx711L>
	for(uint8_t i=0;i<8;i++){  // Load cell data high 8 bits
     db2:	80 e0       	ldi	r24, 0x00	; 0
     db4:	33 c0       	rjmp	.+102    	; 0xe1c <loadCellRead+0x7e>
		PORTD|=(1<<Load_clk); //Clock pin high
     db6:	92 b3       	in	r25, 0x12	; 18
     db8:	90 62       	ori	r25, 0x20	; 32
     dba:	92 bb       	out	0x12, r25	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     dbc:	9a e1       	ldi	r25, 0x1A	; 26
     dbe:	9a 95       	dec	r25
     dc0:	f1 f7       	brne	.-4      	; 0xdbe <loadCellRead+0x20>
     dc2:	00 c0       	rjmp	.+0      	; 0xdc4 <loadCellRead+0x26>
		_delay_us(10);
		if ((PIND&(1<<Load_data))>>Load_data)  //read data pin
     dc4:	84 9b       	sbis	0x10, 4	; 16
     dc6:	11 c0       	rjmp	.+34     	; 0xdea <loadCellRead+0x4c>
		{hx711H|=(1<<(7-i));//set hx 711 varible
     dc8:	47 e0       	ldi	r20, 0x07	; 7
     dca:	50 e0       	ldi	r21, 0x00	; 0
     dcc:	48 1b       	sub	r20, r24
     dce:	51 09       	sbc	r21, r1
     dd0:	21 e0       	ldi	r18, 0x01	; 1
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	02 c0       	rjmp	.+4      	; 0xdda <loadCellRead+0x3c>
     dd6:	22 0f       	add	r18, r18
     dd8:	33 1f       	adc	r19, r19
     dda:	4a 95       	dec	r20
     ddc:	e2 f7       	brpl	.-8      	; 0xdd6 <loadCellRead+0x38>
     dde:	90 91 a6 02 	lds	r25, 0x02A6	; 0x8002a6 <hx711H>
     de2:	29 2b       	or	r18, r25
     de4:	20 93 a6 02 	sts	0x02A6, r18	; 0x8002a6 <hx711H>
     de8:	11 c0       	rjmp	.+34     	; 0xe0c <loadCellRead+0x6e>
		}
		else
		{hx711H&=~(1<<(7-i));
     dea:	47 e0       	ldi	r20, 0x07	; 7
     dec:	50 e0       	ldi	r21, 0x00	; 0
     dee:	48 1b       	sub	r20, r24
     df0:	51 09       	sbc	r21, r1
     df2:	21 e0       	ldi	r18, 0x01	; 1
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	02 c0       	rjmp	.+4      	; 0xdfc <loadCellRead+0x5e>
     df8:	22 0f       	add	r18, r18
     dfa:	33 1f       	adc	r19, r19
     dfc:	4a 95       	dec	r20
     dfe:	e2 f7       	brpl	.-8      	; 0xdf8 <loadCellRead+0x5a>
     e00:	20 95       	com	r18
     e02:	90 91 a6 02 	lds	r25, 0x02A6	; 0x8002a6 <hx711H>
     e06:	29 23       	and	r18, r25
     e08:	20 93 a6 02 	sts	0x02A6, r18	; 0x8002a6 <hx711H>
		}
		PORTD&=~(1<<Load_clk); //Clock pin low
     e0c:	92 b3       	in	r25, 0x12	; 18
     e0e:	9f 7d       	andi	r25, 0xDF	; 223
     e10:	92 bb       	out	0x12, r25	; 18
     e12:	9d e0       	ldi	r25, 0x0D	; 13
     e14:	9a 95       	dec	r25
     e16:	f1 f7       	brne	.-4      	; 0xe14 <loadCellRead+0x76>
     e18:	00 00       	nop
	
}

float loadCellRead(){
	hx711H=0;hx711L=0;  //clear variables
	for(uint8_t i=0;i<8;i++){  // Load cell data high 8 bits
     e1a:	8f 5f       	subi	r24, 0xFF	; 255
     e1c:	88 30       	cpi	r24, 0x08	; 8
     e1e:	58 f2       	brcs	.-106    	; 0xdb6 <loadCellRead+0x18>
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	3e c0       	rjmp	.+124    	; 0xea0 <loadCellRead+0x102>
		_delay_us(5);
	}
	
	
	for(uint8_t i=0;i<16;i++){ // Load cell data low 16 bits
		PORTD|=(1<<Load_clk); //Clock pin high
     e24:	92 b3       	in	r25, 0x12	; 18
     e26:	90 62       	ori	r25, 0x20	; 32
     e28:	92 bb       	out	0x12, r25	; 18
     e2a:	9a e1       	ldi	r25, 0x1A	; 26
     e2c:	9a 95       	dec	r25
     e2e:	f1 f7       	brne	.-4      	; 0xe2c <loadCellRead+0x8e>
     e30:	00 c0       	rjmp	.+0      	; 0xe32 <loadCellRead+0x94>
		_delay_us(10);
		if ((PIND&(1<<Load_data))>>Load_data) //read data pin
     e32:	84 9b       	sbis	0x10, 4	; 16
     e34:	16 c0       	rjmp	.+44     	; 0xe62 <loadCellRead+0xc4>
		{hx711L|=(1<<(15-i));
     e36:	4f e0       	ldi	r20, 0x0F	; 15
     e38:	50 e0       	ldi	r21, 0x00	; 0
     e3a:	48 1b       	sub	r20, r24
     e3c:	51 09       	sbc	r21, r1
     e3e:	21 e0       	ldi	r18, 0x01	; 1
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	02 c0       	rjmp	.+4      	; 0xe48 <loadCellRead+0xaa>
     e44:	22 0f       	add	r18, r18
     e46:	33 1f       	adc	r19, r19
     e48:	4a 95       	dec	r20
     e4a:	e2 f7       	brpl	.-8      	; 0xe44 <loadCellRead+0xa6>
     e4c:	40 91 a4 02 	lds	r20, 0x02A4	; 0x8002a4 <hx711L>
     e50:	50 91 a5 02 	lds	r21, 0x02A5	; 0x8002a5 <hx711L+0x1>
     e54:	24 2b       	or	r18, r20
     e56:	35 2b       	or	r19, r21
     e58:	30 93 a5 02 	sts	0x02A5, r19	; 0x8002a5 <hx711L+0x1>
     e5c:	20 93 a4 02 	sts	0x02A4, r18	; 0x8002a4 <hx711L>
     e60:	17 c0       	rjmp	.+46     	; 0xe90 <loadCellRead+0xf2>
		}
		else
		{hx711L&=~(1<<(15-i));
     e62:	4f e0       	ldi	r20, 0x0F	; 15
     e64:	50 e0       	ldi	r21, 0x00	; 0
     e66:	48 1b       	sub	r20, r24
     e68:	51 09       	sbc	r21, r1
     e6a:	21 e0       	ldi	r18, 0x01	; 1
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <loadCellRead+0xd6>
     e70:	22 0f       	add	r18, r18
     e72:	33 1f       	adc	r19, r19
     e74:	4a 95       	dec	r20
     e76:	e2 f7       	brpl	.-8      	; 0xe70 <loadCellRead+0xd2>
     e78:	20 95       	com	r18
     e7a:	30 95       	com	r19
     e7c:	40 91 a4 02 	lds	r20, 0x02A4	; 0x8002a4 <hx711L>
     e80:	50 91 a5 02 	lds	r21, 0x02A5	; 0x8002a5 <hx711L+0x1>
     e84:	24 23       	and	r18, r20
     e86:	35 23       	and	r19, r21
     e88:	30 93 a5 02 	sts	0x02A5, r19	; 0x8002a5 <hx711L+0x1>
     e8c:	20 93 a4 02 	sts	0x02A4, r18	; 0x8002a4 <hx711L>
		}
		PORTD&=~(1<<Load_clk); //Clock pin low
     e90:	92 b3       	in	r25, 0x12	; 18
     e92:	9f 7d       	andi	r25, 0xDF	; 223
     e94:	92 bb       	out	0x12, r25	; 18
     e96:	9d e0       	ldi	r25, 0x0D	; 13
     e98:	9a 95       	dec	r25
     e9a:	f1 f7       	brne	.-4      	; 0xe98 <loadCellRead+0xfa>
     e9c:	00 00       	nop
		PORTD&=~(1<<Load_clk); //Clock pin low
		_delay_us(5);
	}
	
	
	for(uint8_t i=0;i<16;i++){ // Load cell data low 16 bits
     e9e:	8f 5f       	subi	r24, 0xFF	; 255
     ea0:	80 31       	cpi	r24, 0x10	; 16
     ea2:	08 f4       	brcc	.+2      	; 0xea6 <loadCellRead+0x108>
     ea4:	bf cf       	rjmp	.-130    	; 0xe24 <loadCellRead+0x86>
		}
		PORTD&=~(1<<Load_clk); //Clock pin low
		_delay_us(5);
	}
	
	hx711L=hx711L>>1; //shift bits
     ea6:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <hx711L>
     eaa:	90 91 a5 02 	lds	r25, 0x02A5	; 0x8002a5 <hx711L+0x1>
     eae:	96 95       	lsr	r25
     eb0:	87 95       	ror	r24
     eb2:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <hx711L+0x1>
     eb6:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <hx711L>
	
	if (hx711H&1)  //bit setup
     eba:	60 91 a6 02 	lds	r22, 0x02A6	; 0x8002a6 <hx711H>
     ebe:	60 ff       	sbrs	r22, 0
     ec0:	05 c0       	rjmp	.+10     	; 0xecc <loadCellRead+0x12e>
	{hx711L|=(1<<15);
     ec2:	90 68       	ori	r25, 0x80	; 128
     ec4:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <hx711L+0x1>
     ec8:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <hx711L>
	}
	else
	{hx711L&=~(1<<15);
	}
	hx711H=hx711H>>1;
     ecc:	66 95       	lsr	r22
     ece:	60 93 a6 02 	sts	0x02A6, r22	; 0x8002a6 <hx711H>
	
	return (hx711H*(65536/18029.6))+hx711L/18029.6; //load cell calibration
     ed2:	70 e0       	ldi	r23, 0x00	; 0
     ed4:	80 e0       	ldi	r24, 0x00	; 0
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	0e 94 4d 0b 	call	0x169a	; 0x169a <__floatsisf>
     edc:	24 e6       	ldi	r18, 0x64	; 100
     ede:	32 ea       	ldi	r19, 0xA2	; 162
     ee0:	48 e6       	ldi	r20, 0x68	; 104
     ee2:	50 e4       	ldi	r21, 0x40	; 64
     ee4:	0e 94 de 0b 	call	0x17bc	; 0x17bc <__mulsf3>
     ee8:	6b 01       	movw	r12, r22
     eea:	7c 01       	movw	r14, r24
     eec:	60 91 a4 02 	lds	r22, 0x02A4	; 0x8002a4 <hx711L>
     ef0:	70 91 a5 02 	lds	r23, 0x02A5	; 0x8002a5 <hx711L+0x1>
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	0e 94 4b 0b 	call	0x1696	; 0x1696 <__floatunsisf>
     efc:	23 e3       	ldi	r18, 0x33	; 51
     efe:	3b ed       	ldi	r19, 0xDB	; 219
     f00:	4c e8       	ldi	r20, 0x8C	; 140
     f02:	56 e4       	ldi	r21, 0x46	; 70
     f04:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__divsf3>
     f08:	9b 01       	movw	r18, r22
     f0a:	ac 01       	movw	r20, r24
     f0c:	c7 01       	movw	r24, r14
     f0e:	b6 01       	movw	r22, r12
     f10:	0e 94 3e 0a 	call	0x147c	; 0x147c <__addsf3>
}
     f14:	ff 90       	pop	r15
     f16:	ef 90       	pop	r14
     f18:	df 90       	pop	r13
     f1a:	cf 90       	pop	r12
     f1c:	08 95       	ret

00000f1e <main>:
volatile uint16_t TimerCal=0;// variable for collect echo data
uint16_t ultraINT0=0;

int main(void)
{	/*ADC init part*/
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));   // prescaler 128
     f1e:	86 b1       	in	r24, 0x06	; 6
     f20:	87 60       	ori	r24, 0x07	; 7
     f22:	86 b9       	out	0x06, r24	; 6
	ADMUX |= (1<<REFS0);					//external vcc
     f24:	87 b1       	in	r24, 0x07	; 7
     f26:	80 64       	ori	r24, 0x40	; 64
     f28:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADEN);                            // Turn on ADC
     f2a:	86 b1       	in	r24, 0x06	; 6
     f2c:	80 68       	ori	r24, 0x80	; 128
     f2e:	86 b9       	out	0x06, r24	; 6
	DDRC|=(1<<7);//buzzer
     f30:	84 b3       	in	r24, 0x14	; 20
     f32:	80 68       	ori	r24, 0x80	; 128
     f34:	84 bb       	out	0x14, r24	; 20
	DDRC|=(1<<6);//lamp
     f36:	84 b3       	in	r24, 0x14	; 20
     f38:	80 64       	ori	r24, 0x40	; 64
     f3a:	84 bb       	out	0x14, r24	; 20
	DDRD|=(1<<Load_clk); //Load cell clock pin
     f3c:	81 b3       	in	r24, 0x11	; 17
     f3e:	80 62       	ori	r24, 0x20	; 32
     f40:	81 bb       	out	0x11, r24	; 17
	PORTD&=~(1<<Load_clk);//Clock pin low
     f42:	82 b3       	in	r24, 0x12	; 18
     f44:	8f 7d       	andi	r24, 0xDF	; 223
     f46:	82 bb       	out	0x12, r24	; 18
	
	LcdInit();
     f48:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <LcdInit>
	USART_Init(9600);
     f4c:	80 e8       	ldi	r24, 0x80	; 128
     f4e:	95 e2       	ldi	r25, 0x25	; 37
     f50:	0e 94 b9 01 	call	0x372	; 0x372 <USART_Init>
	
	
	LcdSetCursor(4,0,"Welcome");
     f54:	44 ec       	ldi	r20, 0xC4	; 196
     f56:	51 e0       	ldi	r21, 0x01	; 1
     f58:	60 e0       	ldi	r22, 0x00	; 0
     f5a:	84 e0       	ldi	r24, 0x04	; 4
     f5c:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f60:	2f ef       	ldi	r18, 0xFF	; 255
     f62:	39 e6       	ldi	r19, 0x69	; 105
     f64:	88 e1       	ldi	r24, 0x18	; 24
     f66:	21 50       	subi	r18, 0x01	; 1
     f68:	30 40       	sbci	r19, 0x00	; 0
     f6a:	80 40       	sbci	r24, 0x00	; 0
     f6c:	e1 f7       	brne	.-8      	; 0xf66 <main+0x48>
     f6e:	00 c0       	rjmp	.+0      	; 0xf70 <main+0x52>
     f70:	00 00       	nop
	_delay_ms(1000);
	LcdCommand(LCD_CLEARDISPLAY);
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
	feedingWeight=eeprom_read_word((uint16_t*)WeightDataAdress);
     f78:	86 e0       	ldi	r24, 0x06	; 6
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	0e 94 16 12 	call	0x242c	; 0x242c <eeprom_read_word>
     f80:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <feedingWeight+0x1>
     f84:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <feedingWeight>
	for(uint8_t i=0;i<3;i++){
     f88:	10 e0       	ldi	r17, 0x00	; 0
     f8a:	15 c0       	rjmp	.+42     	; 0xfb6 <main+0x98>
		feedingTimes[i][0]=eeprom_read_byte((uint8_t*)feedingdataAdress[i]);
     f8c:	c1 2f       	mov	r28, r17
     f8e:	d0 e0       	ldi	r29, 0x00	; 0
     f90:	fe 01       	movw	r30, r28
     f92:	e0 5a       	subi	r30, 0xA0	; 160
     f94:	ff 4f       	sbci	r31, 0xFF	; 255
     f96:	e0 80       	ld	r14, Z
     f98:	f1 2c       	mov	r15, r1
     f9a:	c7 01       	movw	r24, r14
     f9c:	0e 94 0e 12 	call	0x241c	; 0x241c <eeprom_read_byte>
     fa0:	cc 0f       	add	r28, r28
     fa2:	dd 1f       	adc	r29, r29
     fa4:	c6 56       	subi	r28, 0x66	; 102
     fa6:	dd 4f       	sbci	r29, 0xFD	; 253
     fa8:	88 83       	st	Y, r24
		feedingTimes[i][1]=eeprom_read_byte((uint8_t*)feedingdataAdress[i]+1);
     faa:	c7 01       	movw	r24, r14
     fac:	01 96       	adiw	r24, 0x01	; 1
     fae:	0e 94 0e 12 	call	0x241c	; 0x241c <eeprom_read_byte>
     fb2:	89 83       	std	Y+1, r24	; 0x01
	
	LcdSetCursor(4,0,"Welcome");
	_delay_ms(1000);
	LcdCommand(LCD_CLEARDISPLAY);
	feedingWeight=eeprom_read_word((uint16_t*)WeightDataAdress);
	for(uint8_t i=0;i<3;i++){
     fb4:	1f 5f       	subi	r17, 0xFF	; 255
     fb6:	13 30       	cpi	r17, 0x03	; 3
     fb8:	48 f3       	brcs	.-46     	; 0xf8c <main+0x6e>
	
//	sprintf(lcddata,"%u:%u %u:%u ",feedingTimes[0][0],feedingTimes[0][1],feedingTimes[1][0],feedingTimes[1][1]);
//	LcdSetCursor(0,0,lcddata);
//	_delay_ms(3000);
	
	DDRD|=(1<<3); //D4 as output
     fba:	81 b3       	in	r24, 0x11	; 17
     fbc:	88 60       	ori	r24, 0x08	; 8
     fbe:	81 bb       	out	0x11, r24	; 17
	TCCR0|=(1<<WGM01);//Enable Compare match mode
     fc0:	83 b7       	in	r24, 0x33	; 51
     fc2:	88 60       	ori	r24, 0x08	; 8
     fc4:	83 bf       	out	0x33, r24	; 51
	TCCR0|=(1<<CS11);//Start timer  prescaler =8
     fc6:	83 b7       	in	r24, 0x33	; 51
     fc8:	82 60       	ori	r24, 0x02	; 2
     fca:	83 bf       	out	0x33, r24	; 51
	TCNT0=0;
     fcc:	12 be       	out	0x32, r1	; 50
	OCR0=10;
     fce:	8a e0       	ldi	r24, 0x0A	; 10
     fd0:	8c bf       	out	0x3c, r24	; 60
	/*register value= time*(clock speed/prescale)
	register value=0.000001*(8000000/1)
	register value=10*/
	TIMSK|=(1<<OCIE0);//enable timer Compare inturrept
     fd2:	89 b7       	in	r24, 0x39	; 57
     fd4:	82 60       	ori	r24, 0x02	; 2
     fd6:	89 bf       	out	0x39, r24	; 57
	sei();	
     fd8:	78 94       	sei
	LcdSetCursor(0,0,lcddata);*/
	
	
	
	while(1){
		LcdSetCursor(0,0,"Need data Enter?");
     fda:	4c ec       	ldi	r20, 0xCC	; 204
     fdc:	51 e0       	ldi	r21, 0x01	; 1
     fde:	60 e0       	ldi	r22, 0x00	; 0
     fe0:	80 e0       	ldi	r24, 0x00	; 0
     fe2:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
		LcdSetCursor(0,1,"Yes-1 No-2");
     fe6:	4d ed       	ldi	r20, 0xDD	; 221
     fe8:	51 e0       	ldi	r21, 0x01	; 1
     fea:	61 e0       	ldi	r22, 0x01	; 1
     fec:	80 e0       	ldi	r24, 0x00	; 0
     fee:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
		
		uint8_t key=getkeyNum();
     ff2:	0e 94 ff 01 	call	0x3fe	; 0x3fe <getkeyNum>
     ff6:	c8 2f       	mov	r28, r24
		if (key==1)
     ff8:	81 30       	cpi	r24, 0x01	; 1
     ffa:	11 f4       	brne	.+4      	; 0x1000 <main+0xe2>
		{adddata();
     ffc:	0e 94 7d 05 	call	0xafa	; 0xafa <adddata>
			
		}
		
		if (key==2)
    1000:	c2 30       	cpi	r28, 0x02	; 2
    1002:	59 f7       	brne	.-42     	; 0xfda <main+0xbc>
		{	LcdCommand(LCD_CLEARDISPLAY);
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
			setTime(11,20,59);
    100a:	4b e3       	ldi	r20, 0x3B	; 59
    100c:	64 e1       	ldi	r22, 0x14	; 20
    100e:	8b e0       	ldi	r24, 0x0B	; 11
    1010:	0e 94 2d 04 	call	0x85a	; 0x85a <setTime>
			break;
		}
	}
	DDRD|=(1<<6);
    1014:	81 b3       	in	r24, 0x11	; 17
    1016:	80 64       	ori	r24, 0x40	; 64
    1018:	81 bb       	out	0x11, r24	; 17
	PORTD|=(1<<6);
    101a:	82 b3       	in	r24, 0x12	; 18
    101c:	80 64       	ori	r24, 0x40	; 64
    101e:	82 bb       	out	0x12, r24	; 18
	
	
//#######################################################################################	
	while (1)
	{	
		Readtime();
    1020:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <Readtime>
		sprintf(lcddata,"%02u:%02u:%02u",hourC,minC,secC);
    1024:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <secC>
    1028:	1f 92       	push	r1
    102a:	8f 93       	push	r24
    102c:	80 91 a9 02 	lds	r24, 0x02A9	; 0x8002a9 <minC>
    1030:	1f 92       	push	r1
    1032:	8f 93       	push	r24
    1034:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <hourC>
    1038:	1f 92       	push	r1
    103a:	8f 93       	push	r24
    103c:	88 ee       	ldi	r24, 0xE8	; 232
    103e:	91 e0       	ldi	r25, 0x01	; 1
    1040:	9f 93       	push	r25
    1042:	8f 93       	push	r24
    1044:	8c ea       	ldi	r24, 0xAC	; 172
    1046:	92 e0       	ldi	r25, 0x02	; 2
    1048:	9f 93       	push	r25
    104a:	8f 93       	push	r24
    104c:	0e 94 8e 11 	call	0x231c	; 0x231c <sprintf>
		LcdSetCursor(4,0,lcddata);
    1050:	4c ea       	ldi	r20, 0xAC	; 172
    1052:	52 e0       	ldi	r21, 0x02	; 2
    1054:	60 e0       	ldi	r22, 0x00	; 0
    1056:	84 e0       	ldi	r24, 0x04	; 4
    1058:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
		
		ADMUX = (1<<REFS0);			//external vcc
    105c:	80 e4       	ldi	r24, 0x40	; 64
    105e:	87 b9       	out	0x07, r24	; 7
		ph=ReadADC(0)*5.0/1024;
    1060:	80 e0       	ldi	r24, 0x00	; 0
    1062:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <ReadADC>
    1066:	bc 01       	movw	r22, r24
    1068:	80 e0       	ldi	r24, 0x00	; 0
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	0e 94 4b 0b 	call	0x1696	; 0x1696 <__floatunsisf>
    1070:	20 e0       	ldi	r18, 0x00	; 0
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	40 ea       	ldi	r20, 0xA0	; 160
    1076:	50 e4       	ldi	r21, 0x40	; 64
    1078:	0e 94 de 0b 	call	0x17bc	; 0x17bc <__mulsf3>
    107c:	20 e0       	ldi	r18, 0x00	; 0
    107e:	30 e0       	ldi	r19, 0x00	; 0
    1080:	40 e8       	ldi	r20, 0x80	; 128
    1082:	5a e3       	ldi	r21, 0x3A	; 58
    1084:	0e 94 de 0b 	call	0x17bc	; 0x17bc <__mulsf3>
		ph=ph*3.5;
    1088:	20 e0       	ldi	r18, 0x00	; 0
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	40 e6       	ldi	r20, 0x60	; 96
    108e:	50 e4       	ldi	r21, 0x40	; 64
    1090:	0e 94 de 0b 	call	0x17bc	; 0x17bc <__mulsf3>
    1094:	60 93 a0 02 	sts	0x02A0, r22	; 0x8002a0 <ph>
    1098:	70 93 a1 02 	sts	0x02A1, r23	; 0x8002a1 <ph+0x1>
    109c:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <ph+0x2>
    10a0:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <ph+0x3>
		
		ADMUX = (1<<REFS0)|(1<<REFS1);					//internal 2.56 v ref
    10a4:	80 ec       	ldi	r24, 0xC0	; 192
    10a6:	87 b9       	out	0x07, r24	; 7
		uint16_t TempReading=(ReadADC(1)*0.25024438); //calibrated number
    10a8:	81 e0       	ldi	r24, 0x01	; 1
    10aa:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <ReadADC>
    10ae:	bc 01       	movw	r22, r24
    10b0:	80 e0       	ldi	r24, 0x00	; 0
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	0e 94 4b 0b 	call	0x1696	; 0x1696 <__floatunsisf>
    10b8:	28 e0       	ldi	r18, 0x08	; 8
    10ba:	30 e2       	ldi	r19, 0x20	; 32
    10bc:	40 e8       	ldi	r20, 0x80	; 128
    10be:	5e e3       	ldi	r21, 0x3E	; 62
    10c0:	0e 94 de 0b 	call	0x17bc	; 0x17bc <__mulsf3>
    10c4:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__fixunssfsi>
    10c8:	16 2f       	mov	r17, r22
    10ca:	07 2f       	mov	r16, r23
    10cc:	c6 2f       	mov	r28, r22
    10ce:	d0 2f       	mov	r29, r16
		
		
		
		PORTD&=~(1<<3);//TRIG pin low
    10d0:	82 b3       	in	r24, 0x12	; 18
    10d2:	87 7f       	andi	r24, 0xF7	; 247
    10d4:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10d6:	f5 e8       	ldi	r31, 0x85	; 133
    10d8:	fa 95       	dec	r31
    10da:	f1 f7       	brne	.-4      	; 0x10d8 <main+0x1ba>
    10dc:	00 00       	nop
		_delay_us(50);//wait 50 micro sec
		PORTD|=(1<<3);//TRIG pin high
    10de:	82 b3       	in	r24, 0x12	; 18
    10e0:	88 60       	ori	r24, 0x08	; 8
    10e2:	82 bb       	out	0x12, r24	; 18
    10e4:	25 e8       	ldi	r18, 0x85	; 133
    10e6:	2a 95       	dec	r18
    10e8:	f1 f7       	brne	.-4      	; 0x10e6 <main+0x1c8>
    10ea:	00 00       	nop
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
    10ec:	82 b3       	in	r24, 0x12	; 18
    10ee:	87 7f       	andi	r24, 0xF7	; 247
    10f0:	82 bb       	out	0x12, r24	; 18
		while(!(PIND&(1<<2)))//wait for pulse
    10f2:	8d b7       	in	r24, 0x3d	; 61
    10f4:	9e b7       	in	r25, 0x3e	; 62
    10f6:	0a 96       	adiw	r24, 0x0a	; 10
    10f8:	0f b6       	in	r0, 0x3f	; 63
    10fa:	f8 94       	cli
    10fc:	9e bf       	out	0x3e, r25	; 62
    10fe:	0f be       	out	0x3f, r0	; 63
    1100:	8d bf       	out	0x3d, r24	; 61
    1102:	04 c0       	rjmp	.+8      	; 0x110c <main+0x1ee>
		TimerCal=0;//rest timer
    1104:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <TimerCal+0x1>
    1108:	10 92 96 02 	sts	0x0296, r1	; 0x800296 <TimerCal>
		PORTD&=~(1<<3);//TRIG pin low
		_delay_us(50);//wait 50 micro sec
		PORTD|=(1<<3);//TRIG pin high
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
		while(!(PIND&(1<<2)))//wait for pulse
    110c:	82 9b       	sbis	0x10, 2	; 16
    110e:	fa cf       	rjmp	.-12     	; 0x1104 <main+0x1e6>
    1110:	14 c0       	rjmp	.+40     	; 0x113a <main+0x21c>
		TimerCal=0;//rest timer
		while((PIND&(1<<2)))////wait for pulse down
		ultraINT0=TimerCal/4.148148148148148;//copy timer value
    1112:	60 91 96 02 	lds	r22, 0x0296	; 0x800296 <TimerCal>
    1116:	70 91 97 02 	lds	r23, 0x0297	; 0x800297 <TimerCal+0x1>
    111a:	80 e0       	ldi	r24, 0x00	; 0
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	0e 94 4b 0b 	call	0x1696	; 0x1696 <__floatunsisf>
    1122:	21 ea       	ldi	r18, 0xA1	; 161
    1124:	3d eb       	ldi	r19, 0xBD	; 189
    1126:	44 e8       	ldi	r20, 0x84	; 132
    1128:	50 e4       	ldi	r21, 0x40	; 64
    112a:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__divsf3>
    112e:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__fixunssfsi>
    1132:	70 93 95 02 	sts	0x0295, r23	; 0x800295 <__data_end+0x1>
    1136:	60 93 94 02 	sts	0x0294, r22	; 0x800294 <__data_end>
		PORTD|=(1<<3);//TRIG pin high
		_delay_us(50);//wait 50 micro sec
		PORTD&=~(1<<3);////TRIG pin low
		while(!(PIND&(1<<2)))//wait for pulse
		TimerCal=0;//rest timer
		while((PIND&(1<<2)))////wait for pulse down
    113a:	82 99       	sbic	0x10, 2	; 16
    113c:	ea cf       	rjmp	.-44     	; 0x1112 <main+0x1f4>
		ultraINT0=TimerCal/4.148148148148148;//copy timer value
		
		
		float hx=loadCellRead();
    113e:	0e 94 cf 06 	call	0xd9e	; 0xd9e <loadCellRead>
		uint16_t weight=hx*1000;
    1142:	20 e0       	ldi	r18, 0x00	; 0
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	4a e7       	ldi	r20, 0x7A	; 122
    1148:	54 e4       	ldi	r21, 0x44	; 68
    114a:	0e 94 de 0b 	call	0x17bc	; 0x17bc <__mulsf3>
    114e:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__fixunssfsi>
    1152:	86 2f       	mov	r24, r22
    1154:	97 2f       	mov	r25, r23
    1156:	7c 01       	movw	r14, r24
		
		sprintf(lcddata,"%0.1f %02u %02u %05u",ph,TempReading,ultraINT0,weight);
    1158:	7f 93       	push	r23
    115a:	6f 93       	push	r22
    115c:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <__data_end+0x1>
    1160:	8f 93       	push	r24
    1162:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <__data_end>
    1166:	8f 93       	push	r24
    1168:	0f 93       	push	r16
    116a:	1f 93       	push	r17
    116c:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <ph+0x3>
    1170:	8f 93       	push	r24
    1172:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <ph+0x2>
    1176:	8f 93       	push	r24
    1178:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <ph+0x1>
    117c:	8f 93       	push	r24
    117e:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <ph>
    1182:	8f 93       	push	r24
    1184:	87 ef       	ldi	r24, 0xF7	; 247
    1186:	91 e0       	ldi	r25, 0x01	; 1
    1188:	9f 93       	push	r25
    118a:	8f 93       	push	r24
    118c:	8c ea       	ldi	r24, 0xAC	; 172
    118e:	92 e0       	ldi	r25, 0x02	; 2
    1190:	9f 93       	push	r25
    1192:	8f 93       	push	r24
    1194:	0e 94 8e 11 	call	0x231c	; 0x231c <sprintf>
		LcdSetCursor(0,1,lcddata);
    1198:	4c ea       	ldi	r20, 0xAC	; 172
    119a:	52 e0       	ldi	r21, 0x02	; 2
    119c:	61 e0       	ldi	r22, 0x01	; 1
    119e:	80 e0       	ldi	r24, 0x00	; 0
    11a0:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
		
		if ((TempReading<tempuratureLimit[0])||(TempReading>tempuratureLimit[1]))
    11a4:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <tempuratureLimit>
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	ed b7       	in	r30, 0x3d	; 61
    11ac:	fe b7       	in	r31, 0x3e	; 62
    11ae:	3e 96       	adiw	r30, 0x0e	; 14
    11b0:	0f b6       	in	r0, 0x3f	; 63
    11b2:	f8 94       	cli
    11b4:	fe bf       	out	0x3e, r31	; 62
    11b6:	0f be       	out	0x3f, r0	; 63
    11b8:	ed bf       	out	0x3d, r30	; 61
    11ba:	c8 17       	cp	r28, r24
    11bc:	d9 07       	cpc	r29, r25
    11be:	30 f0       	brcs	.+12     	; 0x11cc <main+0x2ae>
    11c0:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <tempuratureLimit+0x1>
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	8c 17       	cp	r24, r28
    11c8:	9d 07       	cpc	r25, r29
    11ca:	20 f4       	brcc	.+8      	; 0x11d4 <main+0x2b6>
		{
			sendSMS("Temperature's Limit Exceeded");
    11cc:	8c e0       	ldi	r24, 0x0C	; 12
    11ce:	92 e0       	ldi	r25, 0x02	; 2
    11d0:	0e 94 36 06 	call	0xc6c	; 0xc6c <sendSMS>
		}
		
		if ((ph<phLimit[0])||(ph>phLimit[1]))
    11d4:	60 91 65 00 	lds	r22, 0x0065	; 0x800065 <phLimit>
    11d8:	70 91 66 00 	lds	r23, 0x0066	; 0x800066 <phLimit+0x1>
    11dc:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <phLimit+0x2>
    11e0:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <phLimit+0x3>
    11e4:	80 90 a0 02 	lds	r8, 0x02A0	; 0x8002a0 <ph>
    11e8:	90 90 a1 02 	lds	r9, 0x02A1	; 0x8002a1 <ph+0x1>
    11ec:	a0 90 a2 02 	lds	r10, 0x02A2	; 0x8002a2 <ph+0x2>
    11f0:	b0 90 a3 02 	lds	r11, 0x02A3	; 0x8002a3 <ph+0x3>
    11f4:	a5 01       	movw	r20, r10
    11f6:	94 01       	movw	r18, r8
    11f8:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__gesf2>
    11fc:	18 16       	cp	r1, r24
    11fe:	74 f0       	brlt	.+28     	; 0x121c <main+0x2fe>
    1200:	20 91 69 00 	lds	r18, 0x0069	; 0x800069 <phLimit+0x4>
    1204:	30 91 6a 00 	lds	r19, 0x006A	; 0x80006a <phLimit+0x5>
    1208:	40 91 6b 00 	lds	r20, 0x006B	; 0x80006b <phLimit+0x6>
    120c:	50 91 6c 00 	lds	r21, 0x006C	; 0x80006c <phLimit+0x7>
    1210:	c5 01       	movw	r24, r10
    1212:	b4 01       	movw	r22, r8
    1214:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__gesf2>
    1218:	18 16       	cp	r1, r24
    121a:	24 f4       	brge	.+8      	; 0x1224 <main+0x306>
		{
			sendSMS("Ph Limit Exceeded");
    121c:	89 e2       	ldi	r24, 0x29	; 41
    121e:	92 e0       	ldi	r25, 0x02	; 2
    1220:	0e 94 36 06 	call	0xc6c	; 0xc6c <sendSMS>
		}
		if (weight<foodLimit)
    1224:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <foodLimit>
    1228:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <foodLimit+0x1>
    122c:	e8 16       	cp	r14, r24
    122e:	f9 06       	cpc	r15, r25
    1230:	20 f4       	brcc	.+8      	; 0x123a <main+0x31c>
		{
			sendSMS("Fill the foods");
    1232:	8b e3       	ldi	r24, 0x3B	; 59
    1234:	92 e0       	ldi	r25, 0x02	; 2
    1236:	0e 94 36 06 	call	0xc6c	; 0xc6c <sendSMS>
		}
		if (PINA&(0b11100))
    123a:	89 b3       	in	r24, 0x19	; 25
    123c:	8c 71       	andi	r24, 0x1C	; 28
    123e:	21 f0       	breq	.+8      	; 0x1248 <main+0x32a>
		{
			sendSMS("Motion detected");
    1240:	8a e4       	ldi	r24, 0x4A	; 74
    1242:	92 e0       	ldi	r25, 0x02	; 2
    1244:	0e 94 36 06 	call	0xc6c	; 0xc6c <sendSMS>
		}
		
		if (ultraINT0<50)
    1248:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <__data_end>
    124c:	90 91 95 02 	lds	r25, 0x0295	; 0x800295 <__data_end+0x1>
    1250:	c2 97       	sbiw	r24, 0x32	; 50
    1252:	20 f4       	brcc	.+8      	; 0x125c <main+0x33e>
		{
			sendSMS("Water level low");
    1254:	8a e5       	ldi	r24, 0x5A	; 90
    1256:	92 e0       	ldi	r25, 0x02	; 2
    1258:	0e 94 36 06 	call	0xc6c	; 0xc6c <sendSMS>
		}
		if (ultraINT0>80)
    125c:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <__data_end>
    1260:	90 91 95 02 	lds	r25, 0x0295	; 0x800295 <__data_end+0x1>
    1264:	81 35       	cpi	r24, 0x51	; 81
    1266:	91 05       	cpc	r25, r1
    1268:	20 f0       	brcs	.+8      	; 0x1272 <main+0x354>
		{
			sendSMS("Water level High");
    126a:	8a e6       	ldi	r24, 0x6A	; 106
    126c:	92 e0       	ldi	r25, 0x02	; 2
    126e:	0e 94 36 06 	call	0xc6c	; 0xc6c <sendSMS>
		}
		
		//sprintf(lcddata,"%02u:%02u:%02u:%02u:%02u:%02u",hourC,feedingTimes[0][0],minC,feedingTimes[0][1]);
		//LcdSetCursor(0,0,lcddata);
		
		if ((lampTimes[0]==hourC)&&(lampTimes[1]==minC))
    1272:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <lampTimes>
    1276:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <hourC>
    127a:	98 13       	cpse	r25, r24
    127c:	09 c0       	rjmp	.+18     	; 0x1290 <main+0x372>
    127e:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <lampTimes+0x1>
    1282:	80 91 a9 02 	lds	r24, 0x02A9	; 0x8002a9 <minC>
    1286:	98 13       	cpse	r25, r24
    1288:	03 c0       	rjmp	.+6      	; 0x1290 <main+0x372>
		{PORTC|=(1<<6);//lamp on
    128a:	85 b3       	in	r24, 0x15	; 21
    128c:	80 64       	ori	r24, 0x40	; 64
    128e:	85 bb       	out	0x15, r24	; 21
		}
		
		if ((lampTimes[3]==hourC)&&(lampTimes[4]==minC))
    1290:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <lampTimes+0x3>
    1294:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <hourC>
    1298:	98 13       	cpse	r25, r24
    129a:	09 c0       	rjmp	.+18     	; 0x12ae <main+0x390>
    129c:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <lampTimes+0x4>
    12a0:	80 91 a9 02 	lds	r24, 0x02A9	; 0x8002a9 <minC>
    12a4:	98 13       	cpse	r25, r24
    12a6:	03 c0       	rjmp	.+6      	; 0x12ae <main+0x390>
		{PORTC&=~(1<<6);//lamp off
    12a8:	85 b3       	in	r24, 0x15	; 21
    12aa:	8f 7b       	andi	r24, 0xBF	; 191
    12ac:	85 bb       	out	0x15, r24	; 21
		}
		
		
		//Feeding
		if (((hourC==feedingTimes[0][0]&&minC==feedingTimes[0][1])||(hourC==feedingTimes[1][0]&&minC==feedingTimes[1][1])||(hourC==feedingTimes[2][0]&&minC==feedingTimes[2][1])) && (secC<2))
    12ae:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <feedingTimes>
    12b2:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <hourC>
    12b6:	98 13       	cpse	r25, r24
    12b8:	06 c0       	rjmp	.+12     	; 0x12c6 <main+0x3a8>
    12ba:	20 91 9b 02 	lds	r18, 0x029B	; 0x80029b <feedingTimes+0x1>
    12be:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <minC>
    12c2:	29 17       	cp	r18, r25
    12c4:	a1 f0       	breq	.+40     	; 0x12ee <main+0x3d0>
    12c6:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <feedingTimes+0x2>
    12ca:	89 13       	cpse	r24, r25
    12cc:	06 c0       	rjmp	.+12     	; 0x12da <main+0x3bc>
    12ce:	20 91 9d 02 	lds	r18, 0x029D	; 0x80029d <feedingTimes+0x3>
    12d2:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <minC>
    12d6:	29 17       	cp	r18, r25
    12d8:	51 f0       	breq	.+20     	; 0x12ee <main+0x3d0>
    12da:	90 91 9e 02 	lds	r25, 0x029E	; 0x80029e <feedingTimes+0x4>
    12de:	89 13       	cpse	r24, r25
    12e0:	bc c0       	rjmp	.+376    	; 0x145a <main+0x53c>
    12e2:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <feedingTimes+0x5>
    12e6:	80 91 a9 02 	lds	r24, 0x02A9	; 0x8002a9 <minC>
    12ea:	98 13       	cpse	r25, r24
    12ec:	b6 c0       	rjmp	.+364    	; 0x145a <main+0x53c>
    12ee:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <secC>
    12f2:	82 30       	cpi	r24, 0x02	; 2
    12f4:	08 f0       	brcs	.+2      	; 0x12f8 <main+0x3da>
    12f6:	b1 c0       	rjmp	.+354    	; 0x145a <main+0x53c>
		{PORTD&=~(1<<6);
    12f8:	82 b3       	in	r24, 0x12	; 18
    12fa:	8f 7b       	andi	r24, 0xBF	; 191
    12fc:	82 bb       	out	0x12, r24	; 18
			LcdCommand(LCD_CLEARDISPLAY);
    12fe:	81 e0       	ldi	r24, 0x01	; 1
    1300:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
			LcdSetCursor(0,0,"Feeding");
    1304:	4b e7       	ldi	r20, 0x7B	; 123
    1306:	52 e0       	ldi	r21, 0x02	; 2
    1308:	60 e0       	ldi	r22, 0x00	; 0
    130a:	80 e0       	ldi	r24, 0x00	; 0
    130c:	0e 94 9d 01 	call	0x33a	; 0x33a <LcdSetCursor>
			PORTC|=(1<<7);
    1310:	85 b3       	in	r24, 0x15	; 21
    1312:	80 68       	ori	r24, 0x80	; 128
    1314:	85 bb       	out	0x15, r24	; 21
			DDRD|=(1<<7);
    1316:	81 b3       	in	r24, 0x11	; 17
    1318:	80 68       	ori	r24, 0x80	; 128
    131a:	81 bb       	out	0x11, r24	; 17
			
			for(uint8_t j=0;j<100;j++){
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	1d c0       	rjmp	.+58     	; 0x135a <main+0x43c>
				PORTD|=(1<<7);
    1320:	82 b3       	in	r24, 0x12	; 18
    1322:	80 68       	ori	r24, 0x80	; 128
    1324:	82 bb       	out	0x12, r24	; 18
				for(uint8_t i=0;i<9;i++){
    1326:	80 e0       	ldi	r24, 0x00	; 0
    1328:	07 c0       	rjmp	.+14     	; 0x1338 <main+0x41a>
    132a:	e7 ec       	ldi	r30, 0xC7	; 199
    132c:	f0 e0       	ldi	r31, 0x00	; 0
    132e:	31 97       	sbiw	r30, 0x01	; 1
    1330:	f1 f7       	brne	.-4      	; 0x132e <main+0x410>
    1332:	00 c0       	rjmp	.+0      	; 0x1334 <main+0x416>
    1334:	00 00       	nop
    1336:	8f 5f       	subi	r24, 0xFF	; 255
    1338:	89 30       	cpi	r24, 0x09	; 9
    133a:	b8 f3       	brcs	.-18     	; 0x132a <main+0x40c>
					_delay_us(100);
				}
				PORTD&=~(1<<7);
    133c:	82 b3       	in	r24, 0x12	; 18
    133e:	8f 77       	andi	r24, 0x7F	; 127
    1340:	82 bb       	out	0x12, r24	; 18
				
				
				for(uint8_t i=0;i<9;i++){
    1342:	80 e0       	ldi	r24, 0x00	; 0
    1344:	07 c0       	rjmp	.+14     	; 0x1354 <main+0x436>
    1346:	e7 ec       	ldi	r30, 0xC7	; 199
    1348:	f0 e0       	ldi	r31, 0x00	; 0
    134a:	31 97       	sbiw	r30, 0x01	; 1
    134c:	f1 f7       	brne	.-4      	; 0x134a <main+0x42c>
    134e:	00 c0       	rjmp	.+0      	; 0x1350 <main+0x432>
    1350:	00 00       	nop
    1352:	8f 5f       	subi	r24, 0xFF	; 255
    1354:	89 30       	cpi	r24, 0x09	; 9
    1356:	b8 f3       	brcs	.-18     	; 0x1346 <main+0x428>
			LcdCommand(LCD_CLEARDISPLAY);
			LcdSetCursor(0,0,"Feeding");
			PORTC|=(1<<7);
			DDRD|=(1<<7);
			
			for(uint8_t j=0;j<100;j++){
    1358:	9f 5f       	subi	r25, 0xFF	; 255
    135a:	94 36       	cpi	r25, 0x64	; 100
    135c:	08 f3       	brcs	.-62     	; 0x1320 <main+0x402>
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	1d c0       	rjmp	.+58     	; 0x139c <main+0x47e>
					_delay_us(100);
				}
			}
			
			for(uint8_t j=0;j<100;j++){
				PORTD|=(1<<7);
    1362:	82 b3       	in	r24, 0x12	; 18
    1364:	80 68       	ori	r24, 0x80	; 128
    1366:	82 bb       	out	0x12, r24	; 18
				for(uint8_t i=0;i<20;i++){
    1368:	80 e0       	ldi	r24, 0x00	; 0
    136a:	07 c0       	rjmp	.+14     	; 0x137a <main+0x45c>
    136c:	e7 ec       	ldi	r30, 0xC7	; 199
    136e:	f0 e0       	ldi	r31, 0x00	; 0
    1370:	31 97       	sbiw	r30, 0x01	; 1
    1372:	f1 f7       	brne	.-4      	; 0x1370 <main+0x452>
    1374:	00 c0       	rjmp	.+0      	; 0x1376 <main+0x458>
    1376:	00 00       	nop
    1378:	8f 5f       	subi	r24, 0xFF	; 255
    137a:	84 31       	cpi	r24, 0x14	; 20
    137c:	b8 f3       	brcs	.-18     	; 0x136c <main+0x44e>
					_delay_us(100);
				}
				PORTD&=~(1<<7);
    137e:	82 b3       	in	r24, 0x12	; 18
    1380:	8f 77       	andi	r24, 0x7F	; 127
    1382:	82 bb       	out	0x12, r24	; 18
				
				
				for(uint8_t i=0;i<20;i++){
    1384:	80 e0       	ldi	r24, 0x00	; 0
    1386:	07 c0       	rjmp	.+14     	; 0x1396 <main+0x478>
    1388:	e7 ec       	ldi	r30, 0xC7	; 199
    138a:	f0 e0       	ldi	r31, 0x00	; 0
    138c:	31 97       	sbiw	r30, 0x01	; 1
    138e:	f1 f7       	brne	.-4      	; 0x138c <main+0x46e>
    1390:	00 c0       	rjmp	.+0      	; 0x1392 <main+0x474>
    1392:	00 00       	nop
    1394:	8f 5f       	subi	r24, 0xFF	; 255
    1396:	84 31       	cpi	r24, 0x14	; 20
    1398:	b8 f3       	brcs	.-18     	; 0x1388 <main+0x46a>
				for(uint8_t i=0;i<9;i++){
					_delay_us(100);
				}
			}
			
			for(uint8_t j=0;j<100;j++){
    139a:	9f 5f       	subi	r25, 0xFF	; 255
    139c:	94 36       	cpi	r25, 0x64	; 100
    139e:	08 f3       	brcs	.-62     	; 0x1362 <main+0x444>
					_delay_us(100);
				}
			}
			
			
			hx=loadCellRead();
    13a0:	0e 94 cf 06 	call	0xd9e	; 0xd9e <loadCellRead>
			uint16_t weight=hx*1000;
    13a4:	20 e0       	ldi	r18, 0x00	; 0
    13a6:	30 e0       	ldi	r19, 0x00	; 0
    13a8:	4a e7       	ldi	r20, 0x7A	; 122
    13aa:	54 e4       	ldi	r21, 0x44	; 68
    13ac:	0e 94 de 0b 	call	0x17bc	; 0x17bc <__mulsf3>
    13b0:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__fixunssfsi>
    13b4:	eb 01       	movw	r28, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    13b6:	ff ef       	ldi	r31, 0xFF	; 255
    13b8:	20 e7       	ldi	r18, 0x70	; 112
    13ba:	32 e0       	ldi	r19, 0x02	; 2
    13bc:	f1 50       	subi	r31, 0x01	; 1
    13be:	20 40       	sbci	r18, 0x00	; 0
    13c0:	30 40       	sbci	r19, 0x00	; 0
    13c2:	e1 f7       	brne	.-8      	; 0x13bc <main+0x49e>
    13c4:	00 c0       	rjmp	.+0      	; 0x13c6 <main+0x4a8>
    13c6:	00 00       	nop
			_delay_ms(100);
			while(1){
				hx=loadCellRead();
    13c8:	0e 94 cf 06 	call	0xd9e	; 0xd9e <loadCellRead>
				uint16_t weightNow=hx*1000;
    13cc:	20 e0       	ldi	r18, 0x00	; 0
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	4a e7       	ldi	r20, 0x7A	; 122
    13d2:	54 e4       	ldi	r21, 0x44	; 68
    13d4:	0e 94 de 0b 	call	0x17bc	; 0x17bc <__mulsf3>
    13d8:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__fixunssfsi>
				weightNow+=feedingWeight;
    13dc:	20 91 98 02 	lds	r18, 0x0298	; 0x800298 <feedingWeight>
    13e0:	30 91 99 02 	lds	r19, 0x0299	; 0x800299 <feedingWeight+0x1>
    13e4:	62 0f       	add	r22, r18
    13e6:	73 1f       	adc	r23, r19
    13e8:	8f ef       	ldi	r24, 0xFF	; 255
    13ea:	90 e7       	ldi	r25, 0x70	; 112
    13ec:	e2 e0       	ldi	r30, 0x02	; 2
    13ee:	81 50       	subi	r24, 0x01	; 1
    13f0:	90 40       	sbci	r25, 0x00	; 0
    13f2:	e0 40       	sbci	r30, 0x00	; 0
    13f4:	e1 f7       	brne	.-8      	; 0x13ee <main+0x4d0>
    13f6:	00 c0       	rjmp	.+0      	; 0x13f8 <main+0x4da>
    13f8:	00 00       	nop
				//LcdSetCursor(0,1,lcddata);
				//sprintf(lcddata,"%04u %04u",weightNow,weight);
				_delay_ms(100);
				if (weightNow<=weight)
    13fa:	c6 17       	cp	r28, r22
    13fc:	d7 07       	cpc	r29, r23
    13fe:	20 f3       	brcs	.-56     	; 0x13c8 <main+0x4aa>
				{break;
				}

			}
			LcdCommand(LCD_CLEARDISPLAY);
    1400:	81 e0       	ldi	r24, 0x01	; 1
    1402:	0e 94 4d 01 	call	0x29a	; 0x29a <LcdCommand>
    1406:	ff ef       	ldi	r31, 0xFF	; 255
    1408:	29 e6       	ldi	r18, 0x69	; 105
    140a:	38 e1       	ldi	r19, 0x18	; 24
    140c:	f1 50       	subi	r31, 0x01	; 1
    140e:	20 40       	sbci	r18, 0x00	; 0
    1410:	30 40       	sbci	r19, 0x00	; 0
    1412:	e1 f7       	brne	.-8      	; 0x140c <main+0x4ee>
    1414:	00 c0       	rjmp	.+0      	; 0x1416 <main+0x4f8>
    1416:	00 00       	nop
			
			_delay_ms(1000);
			for(uint8_t j=0;j<100;j++){
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	1d c0       	rjmp	.+58     	; 0x1456 <main+0x538>
				PORTD|=(1<<7);
    141c:	82 b3       	in	r24, 0x12	; 18
    141e:	80 68       	ori	r24, 0x80	; 128
    1420:	82 bb       	out	0x12, r24	; 18
				for(uint8_t i=0;i<9;i++){
    1422:	80 e0       	ldi	r24, 0x00	; 0
    1424:	07 c0       	rjmp	.+14     	; 0x1434 <main+0x516>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1426:	e7 ec       	ldi	r30, 0xC7	; 199
    1428:	f0 e0       	ldi	r31, 0x00	; 0
    142a:	31 97       	sbiw	r30, 0x01	; 1
    142c:	f1 f7       	brne	.-4      	; 0x142a <main+0x50c>
    142e:	00 c0       	rjmp	.+0      	; 0x1430 <main+0x512>
    1430:	00 00       	nop
    1432:	8f 5f       	subi	r24, 0xFF	; 255
    1434:	89 30       	cpi	r24, 0x09	; 9
    1436:	b8 f3       	brcs	.-18     	; 0x1426 <main+0x508>
					_delay_us(100);
				}
				PORTD&=~(1<<7);
    1438:	82 b3       	in	r24, 0x12	; 18
    143a:	8f 77       	andi	r24, 0x7F	; 127
    143c:	82 bb       	out	0x12, r24	; 18
				
				
				for(uint8_t i=0;i<9;i++){
    143e:	80 e0       	ldi	r24, 0x00	; 0
    1440:	07 c0       	rjmp	.+14     	; 0x1450 <main+0x532>
    1442:	e7 ec       	ldi	r30, 0xC7	; 199
    1444:	f0 e0       	ldi	r31, 0x00	; 0
    1446:	31 97       	sbiw	r30, 0x01	; 1
    1448:	f1 f7       	brne	.-4      	; 0x1446 <main+0x528>
    144a:	00 c0       	rjmp	.+0      	; 0x144c <main+0x52e>
    144c:	00 00       	nop
    144e:	8f 5f       	subi	r24, 0xFF	; 255
    1450:	89 30       	cpi	r24, 0x09	; 9
    1452:	b8 f3       	brcs	.-18     	; 0x1442 <main+0x524>

			}
			LcdCommand(LCD_CLEARDISPLAY);
			
			_delay_ms(1000);
			for(uint8_t j=0;j<100;j++){
    1454:	9f 5f       	subi	r25, 0xFF	; 255
    1456:	94 36       	cpi	r25, 0x64	; 100
    1458:	08 f3       	brcs	.-62     	; 0x141c <main+0x4fe>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    145a:	ff ef       	ldi	r31, 0xFF	; 255
    145c:	24 e3       	ldi	r18, 0x34	; 52
    145e:	3c e0       	ldi	r19, 0x0C	; 12
    1460:	f1 50       	subi	r31, 0x01	; 1
    1462:	20 40       	sbci	r18, 0x00	; 0
    1464:	30 40       	sbci	r19, 0x00	; 0
    1466:	e1 f7       	brne	.-8      	; 0x1460 <main+0x542>
    1468:	00 c0       	rjmp	.+0      	; 0x146a <main+0x54c>
    146a:	00 00       	nop
					_delay_us(100);
				}
			}
			}_delay_ms(500);
			
			PORTC&=~(1<<7);
    146c:	85 b3       	in	r24, 0x15	; 21
    146e:	8f 77       	andi	r24, 0x7F	; 127
    1470:	85 bb       	out	0x15, r24	; 21
			PORTD|=(1<<6);
    1472:	82 b3       	in	r24, 0x12	; 18
    1474:	80 64       	ori	r24, 0x40	; 64
    1476:	82 bb       	out	0x12, r24	; 18
		}
    1478:	d3 cd       	rjmp	.-1114   	; 0x1020 <main+0x102>

0000147a <__subsf3>:
    147a:	50 58       	subi	r21, 0x80	; 128

0000147c <__addsf3>:
    147c:	bb 27       	eor	r27, r27
    147e:	aa 27       	eor	r26, r26
    1480:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__addsf3x>
    1484:	0c 94 9f 0b 	jmp	0x173e	; 0x173e <__fp_round>
    1488:	0e 94 91 0b 	call	0x1722	; 0x1722 <__fp_pscA>
    148c:	38 f0       	brcs	.+14     	; 0x149c <__addsf3+0x20>
    148e:	0e 94 98 0b 	call	0x1730	; 0x1730 <__fp_pscB>
    1492:	20 f0       	brcs	.+8      	; 0x149c <__addsf3+0x20>
    1494:	39 f4       	brne	.+14     	; 0x14a4 <__addsf3+0x28>
    1496:	9f 3f       	cpi	r25, 0xFF	; 255
    1498:	19 f4       	brne	.+6      	; 0x14a0 <__addsf3+0x24>
    149a:	26 f4       	brtc	.+8      	; 0x14a4 <__addsf3+0x28>
    149c:	0c 94 8e 0b 	jmp	0x171c	; 0x171c <__fp_nan>
    14a0:	0e f4       	brtc	.+2      	; 0x14a4 <__addsf3+0x28>
    14a2:	e0 95       	com	r30
    14a4:	e7 fb       	bst	r30, 7
    14a6:	0c 94 88 0b 	jmp	0x1710	; 0x1710 <__fp_inf>

000014aa <__addsf3x>:
    14aa:	e9 2f       	mov	r30, r25
    14ac:	0e 94 b0 0b 	call	0x1760	; 0x1760 <__fp_split3>
    14b0:	58 f3       	brcs	.-42     	; 0x1488 <__addsf3+0xc>
    14b2:	ba 17       	cp	r27, r26
    14b4:	62 07       	cpc	r22, r18
    14b6:	73 07       	cpc	r23, r19
    14b8:	84 07       	cpc	r24, r20
    14ba:	95 07       	cpc	r25, r21
    14bc:	20 f0       	brcs	.+8      	; 0x14c6 <__addsf3x+0x1c>
    14be:	79 f4       	brne	.+30     	; 0x14de <__addsf3x+0x34>
    14c0:	a6 f5       	brtc	.+104    	; 0x152a <__addsf3x+0x80>
    14c2:	0c 94 d2 0b 	jmp	0x17a4	; 0x17a4 <__fp_zero>
    14c6:	0e f4       	brtc	.+2      	; 0x14ca <__addsf3x+0x20>
    14c8:	e0 95       	com	r30
    14ca:	0b 2e       	mov	r0, r27
    14cc:	ba 2f       	mov	r27, r26
    14ce:	a0 2d       	mov	r26, r0
    14d0:	0b 01       	movw	r0, r22
    14d2:	b9 01       	movw	r22, r18
    14d4:	90 01       	movw	r18, r0
    14d6:	0c 01       	movw	r0, r24
    14d8:	ca 01       	movw	r24, r20
    14da:	a0 01       	movw	r20, r0
    14dc:	11 24       	eor	r1, r1
    14de:	ff 27       	eor	r31, r31
    14e0:	59 1b       	sub	r21, r25
    14e2:	99 f0       	breq	.+38     	; 0x150a <__addsf3x+0x60>
    14e4:	59 3f       	cpi	r21, 0xF9	; 249
    14e6:	50 f4       	brcc	.+20     	; 0x14fc <__addsf3x+0x52>
    14e8:	50 3e       	cpi	r21, 0xE0	; 224
    14ea:	68 f1       	brcs	.+90     	; 0x1546 <__addsf3x+0x9c>
    14ec:	1a 16       	cp	r1, r26
    14ee:	f0 40       	sbci	r31, 0x00	; 0
    14f0:	a2 2f       	mov	r26, r18
    14f2:	23 2f       	mov	r18, r19
    14f4:	34 2f       	mov	r19, r20
    14f6:	44 27       	eor	r20, r20
    14f8:	58 5f       	subi	r21, 0xF8	; 248
    14fa:	f3 cf       	rjmp	.-26     	; 0x14e2 <__addsf3x+0x38>
    14fc:	46 95       	lsr	r20
    14fe:	37 95       	ror	r19
    1500:	27 95       	ror	r18
    1502:	a7 95       	ror	r26
    1504:	f0 40       	sbci	r31, 0x00	; 0
    1506:	53 95       	inc	r21
    1508:	c9 f7       	brne	.-14     	; 0x14fc <__addsf3x+0x52>
    150a:	7e f4       	brtc	.+30     	; 0x152a <__addsf3x+0x80>
    150c:	1f 16       	cp	r1, r31
    150e:	ba 0b       	sbc	r27, r26
    1510:	62 0b       	sbc	r22, r18
    1512:	73 0b       	sbc	r23, r19
    1514:	84 0b       	sbc	r24, r20
    1516:	ba f0       	brmi	.+46     	; 0x1546 <__addsf3x+0x9c>
    1518:	91 50       	subi	r25, 0x01	; 1
    151a:	a1 f0       	breq	.+40     	; 0x1544 <__addsf3x+0x9a>
    151c:	ff 0f       	add	r31, r31
    151e:	bb 1f       	adc	r27, r27
    1520:	66 1f       	adc	r22, r22
    1522:	77 1f       	adc	r23, r23
    1524:	88 1f       	adc	r24, r24
    1526:	c2 f7       	brpl	.-16     	; 0x1518 <__addsf3x+0x6e>
    1528:	0e c0       	rjmp	.+28     	; 0x1546 <__addsf3x+0x9c>
    152a:	ba 0f       	add	r27, r26
    152c:	62 1f       	adc	r22, r18
    152e:	73 1f       	adc	r23, r19
    1530:	84 1f       	adc	r24, r20
    1532:	48 f4       	brcc	.+18     	; 0x1546 <__addsf3x+0x9c>
    1534:	87 95       	ror	r24
    1536:	77 95       	ror	r23
    1538:	67 95       	ror	r22
    153a:	b7 95       	ror	r27
    153c:	f7 95       	ror	r31
    153e:	9e 3f       	cpi	r25, 0xFE	; 254
    1540:	08 f0       	brcs	.+2      	; 0x1544 <__addsf3x+0x9a>
    1542:	b0 cf       	rjmp	.-160    	; 0x14a4 <__addsf3+0x28>
    1544:	93 95       	inc	r25
    1546:	88 0f       	add	r24, r24
    1548:	08 f0       	brcs	.+2      	; 0x154c <__addsf3x+0xa2>
    154a:	99 27       	eor	r25, r25
    154c:	ee 0f       	add	r30, r30
    154e:	97 95       	ror	r25
    1550:	87 95       	ror	r24
    1552:	08 95       	ret

00001554 <__divsf3>:
    1554:	0e 94 be 0a 	call	0x157c	; 0x157c <__divsf3x>
    1558:	0c 94 9f 0b 	jmp	0x173e	; 0x173e <__fp_round>
    155c:	0e 94 98 0b 	call	0x1730	; 0x1730 <__fp_pscB>
    1560:	58 f0       	brcs	.+22     	; 0x1578 <__divsf3+0x24>
    1562:	0e 94 91 0b 	call	0x1722	; 0x1722 <__fp_pscA>
    1566:	40 f0       	brcs	.+16     	; 0x1578 <__divsf3+0x24>
    1568:	29 f4       	brne	.+10     	; 0x1574 <__divsf3+0x20>
    156a:	5f 3f       	cpi	r21, 0xFF	; 255
    156c:	29 f0       	breq	.+10     	; 0x1578 <__divsf3+0x24>
    156e:	0c 94 88 0b 	jmp	0x1710	; 0x1710 <__fp_inf>
    1572:	51 11       	cpse	r21, r1
    1574:	0c 94 d3 0b 	jmp	0x17a6	; 0x17a6 <__fp_szero>
    1578:	0c 94 8e 0b 	jmp	0x171c	; 0x171c <__fp_nan>

0000157c <__divsf3x>:
    157c:	0e 94 b0 0b 	call	0x1760	; 0x1760 <__fp_split3>
    1580:	68 f3       	brcs	.-38     	; 0x155c <__divsf3+0x8>

00001582 <__divsf3_pse>:
    1582:	99 23       	and	r25, r25
    1584:	b1 f3       	breq	.-20     	; 0x1572 <__divsf3+0x1e>
    1586:	55 23       	and	r21, r21
    1588:	91 f3       	breq	.-28     	; 0x156e <__divsf3+0x1a>
    158a:	95 1b       	sub	r25, r21
    158c:	55 0b       	sbc	r21, r21
    158e:	bb 27       	eor	r27, r27
    1590:	aa 27       	eor	r26, r26
    1592:	62 17       	cp	r22, r18
    1594:	73 07       	cpc	r23, r19
    1596:	84 07       	cpc	r24, r20
    1598:	38 f0       	brcs	.+14     	; 0x15a8 <__divsf3_pse+0x26>
    159a:	9f 5f       	subi	r25, 0xFF	; 255
    159c:	5f 4f       	sbci	r21, 0xFF	; 255
    159e:	22 0f       	add	r18, r18
    15a0:	33 1f       	adc	r19, r19
    15a2:	44 1f       	adc	r20, r20
    15a4:	aa 1f       	adc	r26, r26
    15a6:	a9 f3       	breq	.-22     	; 0x1592 <__divsf3_pse+0x10>
    15a8:	35 d0       	rcall	.+106    	; 0x1614 <__divsf3_pse+0x92>
    15aa:	0e 2e       	mov	r0, r30
    15ac:	3a f0       	brmi	.+14     	; 0x15bc <__divsf3_pse+0x3a>
    15ae:	e0 e8       	ldi	r30, 0x80	; 128
    15b0:	32 d0       	rcall	.+100    	; 0x1616 <__divsf3_pse+0x94>
    15b2:	91 50       	subi	r25, 0x01	; 1
    15b4:	50 40       	sbci	r21, 0x00	; 0
    15b6:	e6 95       	lsr	r30
    15b8:	00 1c       	adc	r0, r0
    15ba:	ca f7       	brpl	.-14     	; 0x15ae <__divsf3_pse+0x2c>
    15bc:	2b d0       	rcall	.+86     	; 0x1614 <__divsf3_pse+0x92>
    15be:	fe 2f       	mov	r31, r30
    15c0:	29 d0       	rcall	.+82     	; 0x1614 <__divsf3_pse+0x92>
    15c2:	66 0f       	add	r22, r22
    15c4:	77 1f       	adc	r23, r23
    15c6:	88 1f       	adc	r24, r24
    15c8:	bb 1f       	adc	r27, r27
    15ca:	26 17       	cp	r18, r22
    15cc:	37 07       	cpc	r19, r23
    15ce:	48 07       	cpc	r20, r24
    15d0:	ab 07       	cpc	r26, r27
    15d2:	b0 e8       	ldi	r27, 0x80	; 128
    15d4:	09 f0       	breq	.+2      	; 0x15d8 <__divsf3_pse+0x56>
    15d6:	bb 0b       	sbc	r27, r27
    15d8:	80 2d       	mov	r24, r0
    15da:	bf 01       	movw	r22, r30
    15dc:	ff 27       	eor	r31, r31
    15de:	93 58       	subi	r25, 0x83	; 131
    15e0:	5f 4f       	sbci	r21, 0xFF	; 255
    15e2:	3a f0       	brmi	.+14     	; 0x15f2 <__divsf3_pse+0x70>
    15e4:	9e 3f       	cpi	r25, 0xFE	; 254
    15e6:	51 05       	cpc	r21, r1
    15e8:	78 f0       	brcs	.+30     	; 0x1608 <__divsf3_pse+0x86>
    15ea:	0c 94 88 0b 	jmp	0x1710	; 0x1710 <__fp_inf>
    15ee:	0c 94 d3 0b 	jmp	0x17a6	; 0x17a6 <__fp_szero>
    15f2:	5f 3f       	cpi	r21, 0xFF	; 255
    15f4:	e4 f3       	brlt	.-8      	; 0x15ee <__divsf3_pse+0x6c>
    15f6:	98 3e       	cpi	r25, 0xE8	; 232
    15f8:	d4 f3       	brlt	.-12     	; 0x15ee <__divsf3_pse+0x6c>
    15fa:	86 95       	lsr	r24
    15fc:	77 95       	ror	r23
    15fe:	67 95       	ror	r22
    1600:	b7 95       	ror	r27
    1602:	f7 95       	ror	r31
    1604:	9f 5f       	subi	r25, 0xFF	; 255
    1606:	c9 f7       	brne	.-14     	; 0x15fa <__divsf3_pse+0x78>
    1608:	88 0f       	add	r24, r24
    160a:	91 1d       	adc	r25, r1
    160c:	96 95       	lsr	r25
    160e:	87 95       	ror	r24
    1610:	97 f9       	bld	r25, 7
    1612:	08 95       	ret
    1614:	e1 e0       	ldi	r30, 0x01	; 1
    1616:	66 0f       	add	r22, r22
    1618:	77 1f       	adc	r23, r23
    161a:	88 1f       	adc	r24, r24
    161c:	bb 1f       	adc	r27, r27
    161e:	62 17       	cp	r22, r18
    1620:	73 07       	cpc	r23, r19
    1622:	84 07       	cpc	r24, r20
    1624:	ba 07       	cpc	r27, r26
    1626:	20 f0       	brcs	.+8      	; 0x1630 <__divsf3_pse+0xae>
    1628:	62 1b       	sub	r22, r18
    162a:	73 0b       	sbc	r23, r19
    162c:	84 0b       	sbc	r24, r20
    162e:	ba 0b       	sbc	r27, r26
    1630:	ee 1f       	adc	r30, r30
    1632:	88 f7       	brcc	.-30     	; 0x1616 <__divsf3_pse+0x94>
    1634:	e0 95       	com	r30
    1636:	08 95       	ret

00001638 <__fixunssfsi>:
    1638:	0e 94 b8 0b 	call	0x1770	; 0x1770 <__fp_splitA>
    163c:	88 f0       	brcs	.+34     	; 0x1660 <__fixunssfsi+0x28>
    163e:	9f 57       	subi	r25, 0x7F	; 127
    1640:	98 f0       	brcs	.+38     	; 0x1668 <__fixunssfsi+0x30>
    1642:	b9 2f       	mov	r27, r25
    1644:	99 27       	eor	r25, r25
    1646:	b7 51       	subi	r27, 0x17	; 23
    1648:	b0 f0       	brcs	.+44     	; 0x1676 <__fixunssfsi+0x3e>
    164a:	e1 f0       	breq	.+56     	; 0x1684 <__fixunssfsi+0x4c>
    164c:	66 0f       	add	r22, r22
    164e:	77 1f       	adc	r23, r23
    1650:	88 1f       	adc	r24, r24
    1652:	99 1f       	adc	r25, r25
    1654:	1a f0       	brmi	.+6      	; 0x165c <__fixunssfsi+0x24>
    1656:	ba 95       	dec	r27
    1658:	c9 f7       	brne	.-14     	; 0x164c <__fixunssfsi+0x14>
    165a:	14 c0       	rjmp	.+40     	; 0x1684 <__fixunssfsi+0x4c>
    165c:	b1 30       	cpi	r27, 0x01	; 1
    165e:	91 f0       	breq	.+36     	; 0x1684 <__fixunssfsi+0x4c>
    1660:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <__fp_zero>
    1664:	b1 e0       	ldi	r27, 0x01	; 1
    1666:	08 95       	ret
    1668:	0c 94 d2 0b 	jmp	0x17a4	; 0x17a4 <__fp_zero>
    166c:	67 2f       	mov	r22, r23
    166e:	78 2f       	mov	r23, r24
    1670:	88 27       	eor	r24, r24
    1672:	b8 5f       	subi	r27, 0xF8	; 248
    1674:	39 f0       	breq	.+14     	; 0x1684 <__fixunssfsi+0x4c>
    1676:	b9 3f       	cpi	r27, 0xF9	; 249
    1678:	cc f3       	brlt	.-14     	; 0x166c <__fixunssfsi+0x34>
    167a:	86 95       	lsr	r24
    167c:	77 95       	ror	r23
    167e:	67 95       	ror	r22
    1680:	b3 95       	inc	r27
    1682:	d9 f7       	brne	.-10     	; 0x167a <__fixunssfsi+0x42>
    1684:	3e f4       	brtc	.+14     	; 0x1694 <__fixunssfsi+0x5c>
    1686:	90 95       	com	r25
    1688:	80 95       	com	r24
    168a:	70 95       	com	r23
    168c:	61 95       	neg	r22
    168e:	7f 4f       	sbci	r23, 0xFF	; 255
    1690:	8f 4f       	sbci	r24, 0xFF	; 255
    1692:	9f 4f       	sbci	r25, 0xFF	; 255
    1694:	08 95       	ret

00001696 <__floatunsisf>:
    1696:	e8 94       	clt
    1698:	09 c0       	rjmp	.+18     	; 0x16ac <__floatsisf+0x12>

0000169a <__floatsisf>:
    169a:	97 fb       	bst	r25, 7
    169c:	3e f4       	brtc	.+14     	; 0x16ac <__floatsisf+0x12>
    169e:	90 95       	com	r25
    16a0:	80 95       	com	r24
    16a2:	70 95       	com	r23
    16a4:	61 95       	neg	r22
    16a6:	7f 4f       	sbci	r23, 0xFF	; 255
    16a8:	8f 4f       	sbci	r24, 0xFF	; 255
    16aa:	9f 4f       	sbci	r25, 0xFF	; 255
    16ac:	99 23       	and	r25, r25
    16ae:	a9 f0       	breq	.+42     	; 0x16da <__floatsisf+0x40>
    16b0:	f9 2f       	mov	r31, r25
    16b2:	96 e9       	ldi	r25, 0x96	; 150
    16b4:	bb 27       	eor	r27, r27
    16b6:	93 95       	inc	r25
    16b8:	f6 95       	lsr	r31
    16ba:	87 95       	ror	r24
    16bc:	77 95       	ror	r23
    16be:	67 95       	ror	r22
    16c0:	b7 95       	ror	r27
    16c2:	f1 11       	cpse	r31, r1
    16c4:	f8 cf       	rjmp	.-16     	; 0x16b6 <__floatsisf+0x1c>
    16c6:	fa f4       	brpl	.+62     	; 0x1706 <__floatsisf+0x6c>
    16c8:	bb 0f       	add	r27, r27
    16ca:	11 f4       	brne	.+4      	; 0x16d0 <__floatsisf+0x36>
    16cc:	60 ff       	sbrs	r22, 0
    16ce:	1b c0       	rjmp	.+54     	; 0x1706 <__floatsisf+0x6c>
    16d0:	6f 5f       	subi	r22, 0xFF	; 255
    16d2:	7f 4f       	sbci	r23, 0xFF	; 255
    16d4:	8f 4f       	sbci	r24, 0xFF	; 255
    16d6:	9f 4f       	sbci	r25, 0xFF	; 255
    16d8:	16 c0       	rjmp	.+44     	; 0x1706 <__floatsisf+0x6c>
    16da:	88 23       	and	r24, r24
    16dc:	11 f0       	breq	.+4      	; 0x16e2 <__floatsisf+0x48>
    16de:	96 e9       	ldi	r25, 0x96	; 150
    16e0:	11 c0       	rjmp	.+34     	; 0x1704 <__floatsisf+0x6a>
    16e2:	77 23       	and	r23, r23
    16e4:	21 f0       	breq	.+8      	; 0x16ee <__floatsisf+0x54>
    16e6:	9e e8       	ldi	r25, 0x8E	; 142
    16e8:	87 2f       	mov	r24, r23
    16ea:	76 2f       	mov	r23, r22
    16ec:	05 c0       	rjmp	.+10     	; 0x16f8 <__floatsisf+0x5e>
    16ee:	66 23       	and	r22, r22
    16f0:	71 f0       	breq	.+28     	; 0x170e <__floatsisf+0x74>
    16f2:	96 e8       	ldi	r25, 0x86	; 134
    16f4:	86 2f       	mov	r24, r22
    16f6:	70 e0       	ldi	r23, 0x00	; 0
    16f8:	60 e0       	ldi	r22, 0x00	; 0
    16fa:	2a f0       	brmi	.+10     	; 0x1706 <__floatsisf+0x6c>
    16fc:	9a 95       	dec	r25
    16fe:	66 0f       	add	r22, r22
    1700:	77 1f       	adc	r23, r23
    1702:	88 1f       	adc	r24, r24
    1704:	da f7       	brpl	.-10     	; 0x16fc <__floatsisf+0x62>
    1706:	88 0f       	add	r24, r24
    1708:	96 95       	lsr	r25
    170a:	87 95       	ror	r24
    170c:	97 f9       	bld	r25, 7
    170e:	08 95       	ret

00001710 <__fp_inf>:
    1710:	97 f9       	bld	r25, 7
    1712:	9f 67       	ori	r25, 0x7F	; 127
    1714:	80 e8       	ldi	r24, 0x80	; 128
    1716:	70 e0       	ldi	r23, 0x00	; 0
    1718:	60 e0       	ldi	r22, 0x00	; 0
    171a:	08 95       	ret

0000171c <__fp_nan>:
    171c:	9f ef       	ldi	r25, 0xFF	; 255
    171e:	80 ec       	ldi	r24, 0xC0	; 192
    1720:	08 95       	ret

00001722 <__fp_pscA>:
    1722:	00 24       	eor	r0, r0
    1724:	0a 94       	dec	r0
    1726:	16 16       	cp	r1, r22
    1728:	17 06       	cpc	r1, r23
    172a:	18 06       	cpc	r1, r24
    172c:	09 06       	cpc	r0, r25
    172e:	08 95       	ret

00001730 <__fp_pscB>:
    1730:	00 24       	eor	r0, r0
    1732:	0a 94       	dec	r0
    1734:	12 16       	cp	r1, r18
    1736:	13 06       	cpc	r1, r19
    1738:	14 06       	cpc	r1, r20
    173a:	05 06       	cpc	r0, r21
    173c:	08 95       	ret

0000173e <__fp_round>:
    173e:	09 2e       	mov	r0, r25
    1740:	03 94       	inc	r0
    1742:	00 0c       	add	r0, r0
    1744:	11 f4       	brne	.+4      	; 0x174a <__fp_round+0xc>
    1746:	88 23       	and	r24, r24
    1748:	52 f0       	brmi	.+20     	; 0x175e <__fp_round+0x20>
    174a:	bb 0f       	add	r27, r27
    174c:	40 f4       	brcc	.+16     	; 0x175e <__fp_round+0x20>
    174e:	bf 2b       	or	r27, r31
    1750:	11 f4       	brne	.+4      	; 0x1756 <__fp_round+0x18>
    1752:	60 ff       	sbrs	r22, 0
    1754:	04 c0       	rjmp	.+8      	; 0x175e <__fp_round+0x20>
    1756:	6f 5f       	subi	r22, 0xFF	; 255
    1758:	7f 4f       	sbci	r23, 0xFF	; 255
    175a:	8f 4f       	sbci	r24, 0xFF	; 255
    175c:	9f 4f       	sbci	r25, 0xFF	; 255
    175e:	08 95       	ret

00001760 <__fp_split3>:
    1760:	57 fd       	sbrc	r21, 7
    1762:	90 58       	subi	r25, 0x80	; 128
    1764:	44 0f       	add	r20, r20
    1766:	55 1f       	adc	r21, r21
    1768:	59 f0       	breq	.+22     	; 0x1780 <__fp_splitA+0x10>
    176a:	5f 3f       	cpi	r21, 0xFF	; 255
    176c:	71 f0       	breq	.+28     	; 0x178a <__fp_splitA+0x1a>
    176e:	47 95       	ror	r20

00001770 <__fp_splitA>:
    1770:	88 0f       	add	r24, r24
    1772:	97 fb       	bst	r25, 7
    1774:	99 1f       	adc	r25, r25
    1776:	61 f0       	breq	.+24     	; 0x1790 <__fp_splitA+0x20>
    1778:	9f 3f       	cpi	r25, 0xFF	; 255
    177a:	79 f0       	breq	.+30     	; 0x179a <__fp_splitA+0x2a>
    177c:	87 95       	ror	r24
    177e:	08 95       	ret
    1780:	12 16       	cp	r1, r18
    1782:	13 06       	cpc	r1, r19
    1784:	14 06       	cpc	r1, r20
    1786:	55 1f       	adc	r21, r21
    1788:	f2 cf       	rjmp	.-28     	; 0x176e <__fp_split3+0xe>
    178a:	46 95       	lsr	r20
    178c:	f1 df       	rcall	.-30     	; 0x1770 <__fp_splitA>
    178e:	08 c0       	rjmp	.+16     	; 0x17a0 <__fp_splitA+0x30>
    1790:	16 16       	cp	r1, r22
    1792:	17 06       	cpc	r1, r23
    1794:	18 06       	cpc	r1, r24
    1796:	99 1f       	adc	r25, r25
    1798:	f1 cf       	rjmp	.-30     	; 0x177c <__fp_splitA+0xc>
    179a:	86 95       	lsr	r24
    179c:	71 05       	cpc	r23, r1
    179e:	61 05       	cpc	r22, r1
    17a0:	08 94       	sec
    17a2:	08 95       	ret

000017a4 <__fp_zero>:
    17a4:	e8 94       	clt

000017a6 <__fp_szero>:
    17a6:	bb 27       	eor	r27, r27
    17a8:	66 27       	eor	r22, r22
    17aa:	77 27       	eor	r23, r23
    17ac:	cb 01       	movw	r24, r22
    17ae:	97 f9       	bld	r25, 7
    17b0:	08 95       	ret

000017b2 <__gesf2>:
    17b2:	0e 94 4b 0c 	call	0x1896	; 0x1896 <__fp_cmp>
    17b6:	08 f4       	brcc	.+2      	; 0x17ba <__gesf2+0x8>
    17b8:	8f ef       	ldi	r24, 0xFF	; 255
    17ba:	08 95       	ret

000017bc <__mulsf3>:
    17bc:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__mulsf3x>
    17c0:	0c 94 9f 0b 	jmp	0x173e	; 0x173e <__fp_round>
    17c4:	0e 94 91 0b 	call	0x1722	; 0x1722 <__fp_pscA>
    17c8:	38 f0       	brcs	.+14     	; 0x17d8 <__mulsf3+0x1c>
    17ca:	0e 94 98 0b 	call	0x1730	; 0x1730 <__fp_pscB>
    17ce:	20 f0       	brcs	.+8      	; 0x17d8 <__mulsf3+0x1c>
    17d0:	95 23       	and	r25, r21
    17d2:	11 f0       	breq	.+4      	; 0x17d8 <__mulsf3+0x1c>
    17d4:	0c 94 88 0b 	jmp	0x1710	; 0x1710 <__fp_inf>
    17d8:	0c 94 8e 0b 	jmp	0x171c	; 0x171c <__fp_nan>
    17dc:	11 24       	eor	r1, r1
    17de:	0c 94 d3 0b 	jmp	0x17a6	; 0x17a6 <__fp_szero>

000017e2 <__mulsf3x>:
    17e2:	0e 94 b0 0b 	call	0x1760	; 0x1760 <__fp_split3>
    17e6:	70 f3       	brcs	.-36     	; 0x17c4 <__mulsf3+0x8>

000017e8 <__mulsf3_pse>:
    17e8:	95 9f       	mul	r25, r21
    17ea:	c1 f3       	breq	.-16     	; 0x17dc <__mulsf3+0x20>
    17ec:	95 0f       	add	r25, r21
    17ee:	50 e0       	ldi	r21, 0x00	; 0
    17f0:	55 1f       	adc	r21, r21
    17f2:	62 9f       	mul	r22, r18
    17f4:	f0 01       	movw	r30, r0
    17f6:	72 9f       	mul	r23, r18
    17f8:	bb 27       	eor	r27, r27
    17fa:	f0 0d       	add	r31, r0
    17fc:	b1 1d       	adc	r27, r1
    17fe:	63 9f       	mul	r22, r19
    1800:	aa 27       	eor	r26, r26
    1802:	f0 0d       	add	r31, r0
    1804:	b1 1d       	adc	r27, r1
    1806:	aa 1f       	adc	r26, r26
    1808:	64 9f       	mul	r22, r20
    180a:	66 27       	eor	r22, r22
    180c:	b0 0d       	add	r27, r0
    180e:	a1 1d       	adc	r26, r1
    1810:	66 1f       	adc	r22, r22
    1812:	82 9f       	mul	r24, r18
    1814:	22 27       	eor	r18, r18
    1816:	b0 0d       	add	r27, r0
    1818:	a1 1d       	adc	r26, r1
    181a:	62 1f       	adc	r22, r18
    181c:	73 9f       	mul	r23, r19
    181e:	b0 0d       	add	r27, r0
    1820:	a1 1d       	adc	r26, r1
    1822:	62 1f       	adc	r22, r18
    1824:	83 9f       	mul	r24, r19
    1826:	a0 0d       	add	r26, r0
    1828:	61 1d       	adc	r22, r1
    182a:	22 1f       	adc	r18, r18
    182c:	74 9f       	mul	r23, r20
    182e:	33 27       	eor	r19, r19
    1830:	a0 0d       	add	r26, r0
    1832:	61 1d       	adc	r22, r1
    1834:	23 1f       	adc	r18, r19
    1836:	84 9f       	mul	r24, r20
    1838:	60 0d       	add	r22, r0
    183a:	21 1d       	adc	r18, r1
    183c:	82 2f       	mov	r24, r18
    183e:	76 2f       	mov	r23, r22
    1840:	6a 2f       	mov	r22, r26
    1842:	11 24       	eor	r1, r1
    1844:	9f 57       	subi	r25, 0x7F	; 127
    1846:	50 40       	sbci	r21, 0x00	; 0
    1848:	9a f0       	brmi	.+38     	; 0x1870 <__mulsf3_pse+0x88>
    184a:	f1 f0       	breq	.+60     	; 0x1888 <__mulsf3_pse+0xa0>
    184c:	88 23       	and	r24, r24
    184e:	4a f0       	brmi	.+18     	; 0x1862 <__mulsf3_pse+0x7a>
    1850:	ee 0f       	add	r30, r30
    1852:	ff 1f       	adc	r31, r31
    1854:	bb 1f       	adc	r27, r27
    1856:	66 1f       	adc	r22, r22
    1858:	77 1f       	adc	r23, r23
    185a:	88 1f       	adc	r24, r24
    185c:	91 50       	subi	r25, 0x01	; 1
    185e:	50 40       	sbci	r21, 0x00	; 0
    1860:	a9 f7       	brne	.-22     	; 0x184c <__mulsf3_pse+0x64>
    1862:	9e 3f       	cpi	r25, 0xFE	; 254
    1864:	51 05       	cpc	r21, r1
    1866:	80 f0       	brcs	.+32     	; 0x1888 <__mulsf3_pse+0xa0>
    1868:	0c 94 88 0b 	jmp	0x1710	; 0x1710 <__fp_inf>
    186c:	0c 94 d3 0b 	jmp	0x17a6	; 0x17a6 <__fp_szero>
    1870:	5f 3f       	cpi	r21, 0xFF	; 255
    1872:	e4 f3       	brlt	.-8      	; 0x186c <__mulsf3_pse+0x84>
    1874:	98 3e       	cpi	r25, 0xE8	; 232
    1876:	d4 f3       	brlt	.-12     	; 0x186c <__mulsf3_pse+0x84>
    1878:	86 95       	lsr	r24
    187a:	77 95       	ror	r23
    187c:	67 95       	ror	r22
    187e:	b7 95       	ror	r27
    1880:	f7 95       	ror	r31
    1882:	e7 95       	ror	r30
    1884:	9f 5f       	subi	r25, 0xFF	; 255
    1886:	c1 f7       	brne	.-16     	; 0x1878 <__mulsf3_pse+0x90>
    1888:	fe 2b       	or	r31, r30
    188a:	88 0f       	add	r24, r24
    188c:	91 1d       	adc	r25, r1
    188e:	96 95       	lsr	r25
    1890:	87 95       	ror	r24
    1892:	97 f9       	bld	r25, 7
    1894:	08 95       	ret

00001896 <__fp_cmp>:
    1896:	99 0f       	add	r25, r25
    1898:	00 08       	sbc	r0, r0
    189a:	55 0f       	add	r21, r21
    189c:	aa 0b       	sbc	r26, r26
    189e:	e0 e8       	ldi	r30, 0x80	; 128
    18a0:	fe ef       	ldi	r31, 0xFE	; 254
    18a2:	16 16       	cp	r1, r22
    18a4:	17 06       	cpc	r1, r23
    18a6:	e8 07       	cpc	r30, r24
    18a8:	f9 07       	cpc	r31, r25
    18aa:	c0 f0       	brcs	.+48     	; 0x18dc <__fp_cmp+0x46>
    18ac:	12 16       	cp	r1, r18
    18ae:	13 06       	cpc	r1, r19
    18b0:	e4 07       	cpc	r30, r20
    18b2:	f5 07       	cpc	r31, r21
    18b4:	98 f0       	brcs	.+38     	; 0x18dc <__fp_cmp+0x46>
    18b6:	62 1b       	sub	r22, r18
    18b8:	73 0b       	sbc	r23, r19
    18ba:	84 0b       	sbc	r24, r20
    18bc:	95 0b       	sbc	r25, r21
    18be:	39 f4       	brne	.+14     	; 0x18ce <__fp_cmp+0x38>
    18c0:	0a 26       	eor	r0, r26
    18c2:	61 f0       	breq	.+24     	; 0x18dc <__fp_cmp+0x46>
    18c4:	23 2b       	or	r18, r19
    18c6:	24 2b       	or	r18, r20
    18c8:	25 2b       	or	r18, r21
    18ca:	21 f4       	brne	.+8      	; 0x18d4 <__fp_cmp+0x3e>
    18cc:	08 95       	ret
    18ce:	0a 26       	eor	r0, r26
    18d0:	09 f4       	brne	.+2      	; 0x18d4 <__fp_cmp+0x3e>
    18d2:	a1 40       	sbci	r26, 0x01	; 1
    18d4:	a6 95       	lsr	r26
    18d6:	8f ef       	ldi	r24, 0xFF	; 255
    18d8:	81 1d       	adc	r24, r1
    18da:	81 1d       	adc	r24, r1
    18dc:	08 95       	ret

000018de <vfprintf>:
    18de:	a0 e1       	ldi	r26, 0x10	; 16
    18e0:	b0 e0       	ldi	r27, 0x00	; 0
    18e2:	e5 e7       	ldi	r30, 0x75	; 117
    18e4:	fc e0       	ldi	r31, 0x0C	; 12
    18e6:	0c 94 0b 10 	jmp	0x2016	; 0x2016 <__prologue_saves__>
    18ea:	7c 01       	movw	r14, r24
    18ec:	1b 01       	movw	r2, r22
    18ee:	6a 01       	movw	r12, r20
    18f0:	fc 01       	movw	r30, r24
    18f2:	17 82       	std	Z+7, r1	; 0x07
    18f4:	16 82       	std	Z+6, r1	; 0x06
    18f6:	83 81       	ldd	r24, Z+3	; 0x03
    18f8:	81 ff       	sbrs	r24, 1
    18fa:	44 c3       	rjmp	.+1672   	; 0x1f84 <vfprintf+0x6a6>
    18fc:	9e 01       	movw	r18, r28
    18fe:	2f 5f       	subi	r18, 0xFF	; 255
    1900:	3f 4f       	sbci	r19, 0xFF	; 255
    1902:	39 01       	movw	r6, r18
    1904:	f7 01       	movw	r30, r14
    1906:	93 81       	ldd	r25, Z+3	; 0x03
    1908:	f1 01       	movw	r30, r2
    190a:	93 fd       	sbrc	r25, 3
    190c:	85 91       	lpm	r24, Z+
    190e:	93 ff       	sbrs	r25, 3
    1910:	81 91       	ld	r24, Z+
    1912:	1f 01       	movw	r2, r30
    1914:	88 23       	and	r24, r24
    1916:	09 f4       	brne	.+2      	; 0x191a <vfprintf+0x3c>
    1918:	31 c3       	rjmp	.+1634   	; 0x1f7c <vfprintf+0x69e>
    191a:	85 32       	cpi	r24, 0x25	; 37
    191c:	39 f4       	brne	.+14     	; 0x192c <vfprintf+0x4e>
    191e:	93 fd       	sbrc	r25, 3
    1920:	85 91       	lpm	r24, Z+
    1922:	93 ff       	sbrs	r25, 3
    1924:	81 91       	ld	r24, Z+
    1926:	1f 01       	movw	r2, r30
    1928:	85 32       	cpi	r24, 0x25	; 37
    192a:	39 f4       	brne	.+14     	; 0x193a <vfprintf+0x5c>
    192c:	b7 01       	movw	r22, r14
    192e:	90 e0       	ldi	r25, 0x00	; 0
    1930:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1934:	56 01       	movw	r10, r12
    1936:	65 01       	movw	r12, r10
    1938:	e5 cf       	rjmp	.-54     	; 0x1904 <vfprintf+0x26>
    193a:	10 e0       	ldi	r17, 0x00	; 0
    193c:	51 2c       	mov	r5, r1
    193e:	91 2c       	mov	r9, r1
    1940:	ff e1       	ldi	r31, 0x1F	; 31
    1942:	f9 15       	cp	r31, r9
    1944:	d8 f0       	brcs	.+54     	; 0x197c <vfprintf+0x9e>
    1946:	8b 32       	cpi	r24, 0x2B	; 43
    1948:	79 f0       	breq	.+30     	; 0x1968 <vfprintf+0x8a>
    194a:	38 f4       	brcc	.+14     	; 0x195a <vfprintf+0x7c>
    194c:	80 32       	cpi	r24, 0x20	; 32
    194e:	79 f0       	breq	.+30     	; 0x196e <vfprintf+0x90>
    1950:	83 32       	cpi	r24, 0x23	; 35
    1952:	a1 f4       	brne	.+40     	; 0x197c <vfprintf+0x9e>
    1954:	f9 2d       	mov	r31, r9
    1956:	f0 61       	ori	r31, 0x10	; 16
    1958:	2e c0       	rjmp	.+92     	; 0x19b6 <vfprintf+0xd8>
    195a:	8d 32       	cpi	r24, 0x2D	; 45
    195c:	61 f0       	breq	.+24     	; 0x1976 <vfprintf+0x98>
    195e:	80 33       	cpi	r24, 0x30	; 48
    1960:	69 f4       	brne	.+26     	; 0x197c <vfprintf+0x9e>
    1962:	29 2d       	mov	r18, r9
    1964:	21 60       	ori	r18, 0x01	; 1
    1966:	2d c0       	rjmp	.+90     	; 0x19c2 <vfprintf+0xe4>
    1968:	39 2d       	mov	r19, r9
    196a:	32 60       	ori	r19, 0x02	; 2
    196c:	93 2e       	mov	r9, r19
    196e:	89 2d       	mov	r24, r9
    1970:	84 60       	ori	r24, 0x04	; 4
    1972:	98 2e       	mov	r9, r24
    1974:	2a c0       	rjmp	.+84     	; 0x19ca <vfprintf+0xec>
    1976:	e9 2d       	mov	r30, r9
    1978:	e8 60       	ori	r30, 0x08	; 8
    197a:	15 c0       	rjmp	.+42     	; 0x19a6 <vfprintf+0xc8>
    197c:	97 fc       	sbrc	r9, 7
    197e:	2d c0       	rjmp	.+90     	; 0x19da <vfprintf+0xfc>
    1980:	20 ed       	ldi	r18, 0xD0	; 208
    1982:	28 0f       	add	r18, r24
    1984:	2a 30       	cpi	r18, 0x0A	; 10
    1986:	88 f4       	brcc	.+34     	; 0x19aa <vfprintf+0xcc>
    1988:	96 fe       	sbrs	r9, 6
    198a:	06 c0       	rjmp	.+12     	; 0x1998 <vfprintf+0xba>
    198c:	3a e0       	ldi	r19, 0x0A	; 10
    198e:	13 9f       	mul	r17, r19
    1990:	20 0d       	add	r18, r0
    1992:	11 24       	eor	r1, r1
    1994:	12 2f       	mov	r17, r18
    1996:	19 c0       	rjmp	.+50     	; 0x19ca <vfprintf+0xec>
    1998:	8a e0       	ldi	r24, 0x0A	; 10
    199a:	58 9e       	mul	r5, r24
    199c:	20 0d       	add	r18, r0
    199e:	11 24       	eor	r1, r1
    19a0:	52 2e       	mov	r5, r18
    19a2:	e9 2d       	mov	r30, r9
    19a4:	e0 62       	ori	r30, 0x20	; 32
    19a6:	9e 2e       	mov	r9, r30
    19a8:	10 c0       	rjmp	.+32     	; 0x19ca <vfprintf+0xec>
    19aa:	8e 32       	cpi	r24, 0x2E	; 46
    19ac:	31 f4       	brne	.+12     	; 0x19ba <vfprintf+0xdc>
    19ae:	96 fc       	sbrc	r9, 6
    19b0:	e5 c2       	rjmp	.+1482   	; 0x1f7c <vfprintf+0x69e>
    19b2:	f9 2d       	mov	r31, r9
    19b4:	f0 64       	ori	r31, 0x40	; 64
    19b6:	9f 2e       	mov	r9, r31
    19b8:	08 c0       	rjmp	.+16     	; 0x19ca <vfprintf+0xec>
    19ba:	8c 36       	cpi	r24, 0x6C	; 108
    19bc:	21 f4       	brne	.+8      	; 0x19c6 <vfprintf+0xe8>
    19be:	29 2d       	mov	r18, r9
    19c0:	20 68       	ori	r18, 0x80	; 128
    19c2:	92 2e       	mov	r9, r18
    19c4:	02 c0       	rjmp	.+4      	; 0x19ca <vfprintf+0xec>
    19c6:	88 36       	cpi	r24, 0x68	; 104
    19c8:	41 f4       	brne	.+16     	; 0x19da <vfprintf+0xfc>
    19ca:	f1 01       	movw	r30, r2
    19cc:	93 fd       	sbrc	r25, 3
    19ce:	85 91       	lpm	r24, Z+
    19d0:	93 ff       	sbrs	r25, 3
    19d2:	81 91       	ld	r24, Z+
    19d4:	1f 01       	movw	r2, r30
    19d6:	81 11       	cpse	r24, r1
    19d8:	b3 cf       	rjmp	.-154    	; 0x1940 <vfprintf+0x62>
    19da:	9b eb       	ldi	r25, 0xBB	; 187
    19dc:	98 0f       	add	r25, r24
    19de:	93 30       	cpi	r25, 0x03	; 3
    19e0:	20 f4       	brcc	.+8      	; 0x19ea <vfprintf+0x10c>
    19e2:	99 2d       	mov	r25, r9
    19e4:	90 61       	ori	r25, 0x10	; 16
    19e6:	80 5e       	subi	r24, 0xE0	; 224
    19e8:	07 c0       	rjmp	.+14     	; 0x19f8 <vfprintf+0x11a>
    19ea:	9b e9       	ldi	r25, 0x9B	; 155
    19ec:	98 0f       	add	r25, r24
    19ee:	93 30       	cpi	r25, 0x03	; 3
    19f0:	08 f0       	brcs	.+2      	; 0x19f4 <vfprintf+0x116>
    19f2:	66 c1       	rjmp	.+716    	; 0x1cc0 <vfprintf+0x3e2>
    19f4:	99 2d       	mov	r25, r9
    19f6:	9f 7e       	andi	r25, 0xEF	; 239
    19f8:	96 ff       	sbrs	r25, 6
    19fa:	16 e0       	ldi	r17, 0x06	; 6
    19fc:	9f 73       	andi	r25, 0x3F	; 63
    19fe:	99 2e       	mov	r9, r25
    1a00:	85 36       	cpi	r24, 0x65	; 101
    1a02:	19 f4       	brne	.+6      	; 0x1a0a <vfprintf+0x12c>
    1a04:	90 64       	ori	r25, 0x40	; 64
    1a06:	99 2e       	mov	r9, r25
    1a08:	08 c0       	rjmp	.+16     	; 0x1a1a <vfprintf+0x13c>
    1a0a:	86 36       	cpi	r24, 0x66	; 102
    1a0c:	21 f4       	brne	.+8      	; 0x1a16 <vfprintf+0x138>
    1a0e:	39 2f       	mov	r19, r25
    1a10:	30 68       	ori	r19, 0x80	; 128
    1a12:	93 2e       	mov	r9, r19
    1a14:	02 c0       	rjmp	.+4      	; 0x1a1a <vfprintf+0x13c>
    1a16:	11 11       	cpse	r17, r1
    1a18:	11 50       	subi	r17, 0x01	; 1
    1a1a:	97 fe       	sbrs	r9, 7
    1a1c:	07 c0       	rjmp	.+14     	; 0x1a2c <vfprintf+0x14e>
    1a1e:	1c 33       	cpi	r17, 0x3C	; 60
    1a20:	50 f4       	brcc	.+20     	; 0x1a36 <vfprintf+0x158>
    1a22:	44 24       	eor	r4, r4
    1a24:	43 94       	inc	r4
    1a26:	41 0e       	add	r4, r17
    1a28:	27 e0       	ldi	r18, 0x07	; 7
    1a2a:	0b c0       	rjmp	.+22     	; 0x1a42 <vfprintf+0x164>
    1a2c:	18 30       	cpi	r17, 0x08	; 8
    1a2e:	38 f0       	brcs	.+14     	; 0x1a3e <vfprintf+0x160>
    1a30:	27 e0       	ldi	r18, 0x07	; 7
    1a32:	17 e0       	ldi	r17, 0x07	; 7
    1a34:	05 c0       	rjmp	.+10     	; 0x1a40 <vfprintf+0x162>
    1a36:	27 e0       	ldi	r18, 0x07	; 7
    1a38:	9c e3       	ldi	r25, 0x3C	; 60
    1a3a:	49 2e       	mov	r4, r25
    1a3c:	02 c0       	rjmp	.+4      	; 0x1a42 <vfprintf+0x164>
    1a3e:	21 2f       	mov	r18, r17
    1a40:	41 2c       	mov	r4, r1
    1a42:	56 01       	movw	r10, r12
    1a44:	84 e0       	ldi	r24, 0x04	; 4
    1a46:	a8 0e       	add	r10, r24
    1a48:	b1 1c       	adc	r11, r1
    1a4a:	f6 01       	movw	r30, r12
    1a4c:	60 81       	ld	r22, Z
    1a4e:	71 81       	ldd	r23, Z+1	; 0x01
    1a50:	82 81       	ldd	r24, Z+2	; 0x02
    1a52:	93 81       	ldd	r25, Z+3	; 0x03
    1a54:	04 2d       	mov	r16, r4
    1a56:	a3 01       	movw	r20, r6
    1a58:	0e 94 64 10 	call	0x20c8	; 0x20c8 <__ftoa_engine>
    1a5c:	6c 01       	movw	r12, r24
    1a5e:	f9 81       	ldd	r31, Y+1	; 0x01
    1a60:	fc 87       	std	Y+12, r31	; 0x0c
    1a62:	f0 ff       	sbrs	r31, 0
    1a64:	02 c0       	rjmp	.+4      	; 0x1a6a <vfprintf+0x18c>
    1a66:	f3 ff       	sbrs	r31, 3
    1a68:	06 c0       	rjmp	.+12     	; 0x1a76 <vfprintf+0x198>
    1a6a:	91 fc       	sbrc	r9, 1
    1a6c:	06 c0       	rjmp	.+12     	; 0x1a7a <vfprintf+0x19c>
    1a6e:	92 fe       	sbrs	r9, 2
    1a70:	06 c0       	rjmp	.+12     	; 0x1a7e <vfprintf+0x1a0>
    1a72:	00 e2       	ldi	r16, 0x20	; 32
    1a74:	05 c0       	rjmp	.+10     	; 0x1a80 <vfprintf+0x1a2>
    1a76:	0d e2       	ldi	r16, 0x2D	; 45
    1a78:	03 c0       	rjmp	.+6      	; 0x1a80 <vfprintf+0x1a2>
    1a7a:	0b e2       	ldi	r16, 0x2B	; 43
    1a7c:	01 c0       	rjmp	.+2      	; 0x1a80 <vfprintf+0x1a2>
    1a7e:	00 e0       	ldi	r16, 0x00	; 0
    1a80:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a82:	8c 70       	andi	r24, 0x0C	; 12
    1a84:	19 f0       	breq	.+6      	; 0x1a8c <vfprintf+0x1ae>
    1a86:	01 11       	cpse	r16, r1
    1a88:	5a c2       	rjmp	.+1204   	; 0x1f3e <vfprintf+0x660>
    1a8a:	9b c2       	rjmp	.+1334   	; 0x1fc2 <vfprintf+0x6e4>
    1a8c:	97 fe       	sbrs	r9, 7
    1a8e:	10 c0       	rjmp	.+32     	; 0x1ab0 <vfprintf+0x1d2>
    1a90:	4c 0c       	add	r4, r12
    1a92:	fc 85       	ldd	r31, Y+12	; 0x0c
    1a94:	f4 ff       	sbrs	r31, 4
    1a96:	04 c0       	rjmp	.+8      	; 0x1aa0 <vfprintf+0x1c2>
    1a98:	8a 81       	ldd	r24, Y+2	; 0x02
    1a9a:	81 33       	cpi	r24, 0x31	; 49
    1a9c:	09 f4       	brne	.+2      	; 0x1aa0 <vfprintf+0x1c2>
    1a9e:	4a 94       	dec	r4
    1aa0:	14 14       	cp	r1, r4
    1aa2:	74 f5       	brge	.+92     	; 0x1b00 <vfprintf+0x222>
    1aa4:	28 e0       	ldi	r18, 0x08	; 8
    1aa6:	24 15       	cp	r18, r4
    1aa8:	78 f5       	brcc	.+94     	; 0x1b08 <vfprintf+0x22a>
    1aaa:	88 e0       	ldi	r24, 0x08	; 8
    1aac:	48 2e       	mov	r4, r24
    1aae:	2c c0       	rjmp	.+88     	; 0x1b08 <vfprintf+0x22a>
    1ab0:	96 fc       	sbrc	r9, 6
    1ab2:	2a c0       	rjmp	.+84     	; 0x1b08 <vfprintf+0x22a>
    1ab4:	81 2f       	mov	r24, r17
    1ab6:	90 e0       	ldi	r25, 0x00	; 0
    1ab8:	8c 15       	cp	r24, r12
    1aba:	9d 05       	cpc	r25, r13
    1abc:	9c f0       	brlt	.+38     	; 0x1ae4 <vfprintf+0x206>
    1abe:	3c ef       	ldi	r19, 0xFC	; 252
    1ac0:	c3 16       	cp	r12, r19
    1ac2:	3f ef       	ldi	r19, 0xFF	; 255
    1ac4:	d3 06       	cpc	r13, r19
    1ac6:	74 f0       	brlt	.+28     	; 0x1ae4 <vfprintf+0x206>
    1ac8:	89 2d       	mov	r24, r9
    1aca:	80 68       	ori	r24, 0x80	; 128
    1acc:	98 2e       	mov	r9, r24
    1ace:	0a c0       	rjmp	.+20     	; 0x1ae4 <vfprintf+0x206>
    1ad0:	e2 e0       	ldi	r30, 0x02	; 2
    1ad2:	f0 e0       	ldi	r31, 0x00	; 0
    1ad4:	ec 0f       	add	r30, r28
    1ad6:	fd 1f       	adc	r31, r29
    1ad8:	e1 0f       	add	r30, r17
    1ada:	f1 1d       	adc	r31, r1
    1adc:	80 81       	ld	r24, Z
    1ade:	80 33       	cpi	r24, 0x30	; 48
    1ae0:	19 f4       	brne	.+6      	; 0x1ae8 <vfprintf+0x20a>
    1ae2:	11 50       	subi	r17, 0x01	; 1
    1ae4:	11 11       	cpse	r17, r1
    1ae6:	f4 cf       	rjmp	.-24     	; 0x1ad0 <vfprintf+0x1f2>
    1ae8:	97 fe       	sbrs	r9, 7
    1aea:	0e c0       	rjmp	.+28     	; 0x1b08 <vfprintf+0x22a>
    1aec:	44 24       	eor	r4, r4
    1aee:	43 94       	inc	r4
    1af0:	41 0e       	add	r4, r17
    1af2:	81 2f       	mov	r24, r17
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	c8 16       	cp	r12, r24
    1af8:	d9 06       	cpc	r13, r25
    1afa:	2c f4       	brge	.+10     	; 0x1b06 <vfprintf+0x228>
    1afc:	1c 19       	sub	r17, r12
    1afe:	04 c0       	rjmp	.+8      	; 0x1b08 <vfprintf+0x22a>
    1b00:	44 24       	eor	r4, r4
    1b02:	43 94       	inc	r4
    1b04:	01 c0       	rjmp	.+2      	; 0x1b08 <vfprintf+0x22a>
    1b06:	10 e0       	ldi	r17, 0x00	; 0
    1b08:	97 fe       	sbrs	r9, 7
    1b0a:	06 c0       	rjmp	.+12     	; 0x1b18 <vfprintf+0x23a>
    1b0c:	1c 14       	cp	r1, r12
    1b0e:	1d 04       	cpc	r1, r13
    1b10:	34 f4       	brge	.+12     	; 0x1b1e <vfprintf+0x240>
    1b12:	c6 01       	movw	r24, r12
    1b14:	01 96       	adiw	r24, 0x01	; 1
    1b16:	05 c0       	rjmp	.+10     	; 0x1b22 <vfprintf+0x244>
    1b18:	85 e0       	ldi	r24, 0x05	; 5
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	02 c0       	rjmp	.+4      	; 0x1b22 <vfprintf+0x244>
    1b1e:	81 e0       	ldi	r24, 0x01	; 1
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	01 11       	cpse	r16, r1
    1b24:	01 96       	adiw	r24, 0x01	; 1
    1b26:	11 23       	and	r17, r17
    1b28:	31 f0       	breq	.+12     	; 0x1b36 <vfprintf+0x258>
    1b2a:	21 2f       	mov	r18, r17
    1b2c:	30 e0       	ldi	r19, 0x00	; 0
    1b2e:	2f 5f       	subi	r18, 0xFF	; 255
    1b30:	3f 4f       	sbci	r19, 0xFF	; 255
    1b32:	82 0f       	add	r24, r18
    1b34:	93 1f       	adc	r25, r19
    1b36:	25 2d       	mov	r18, r5
    1b38:	30 e0       	ldi	r19, 0x00	; 0
    1b3a:	82 17       	cp	r24, r18
    1b3c:	93 07       	cpc	r25, r19
    1b3e:	14 f4       	brge	.+4      	; 0x1b44 <vfprintf+0x266>
    1b40:	58 1a       	sub	r5, r24
    1b42:	01 c0       	rjmp	.+2      	; 0x1b46 <vfprintf+0x268>
    1b44:	51 2c       	mov	r5, r1
    1b46:	89 2d       	mov	r24, r9
    1b48:	89 70       	andi	r24, 0x09	; 9
    1b4a:	49 f4       	brne	.+18     	; 0x1b5e <vfprintf+0x280>
    1b4c:	55 20       	and	r5, r5
    1b4e:	39 f0       	breq	.+14     	; 0x1b5e <vfprintf+0x280>
    1b50:	b7 01       	movw	r22, r14
    1b52:	80 e2       	ldi	r24, 0x20	; 32
    1b54:	90 e0       	ldi	r25, 0x00	; 0
    1b56:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1b5a:	5a 94       	dec	r5
    1b5c:	f7 cf       	rjmp	.-18     	; 0x1b4c <vfprintf+0x26e>
    1b5e:	00 23       	and	r16, r16
    1b60:	29 f0       	breq	.+10     	; 0x1b6c <vfprintf+0x28e>
    1b62:	b7 01       	movw	r22, r14
    1b64:	80 2f       	mov	r24, r16
    1b66:	90 e0       	ldi	r25, 0x00	; 0
    1b68:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1b6c:	93 fc       	sbrc	r9, 3
    1b6e:	09 c0       	rjmp	.+18     	; 0x1b82 <vfprintf+0x2a4>
    1b70:	55 20       	and	r5, r5
    1b72:	39 f0       	breq	.+14     	; 0x1b82 <vfprintf+0x2a4>
    1b74:	b7 01       	movw	r22, r14
    1b76:	80 e3       	ldi	r24, 0x30	; 48
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1b7e:	5a 94       	dec	r5
    1b80:	f7 cf       	rjmp	.-18     	; 0x1b70 <vfprintf+0x292>
    1b82:	97 fe       	sbrs	r9, 7
    1b84:	4c c0       	rjmp	.+152    	; 0x1c1e <vfprintf+0x340>
    1b86:	46 01       	movw	r8, r12
    1b88:	d7 fe       	sbrs	r13, 7
    1b8a:	02 c0       	rjmp	.+4      	; 0x1b90 <vfprintf+0x2b2>
    1b8c:	81 2c       	mov	r8, r1
    1b8e:	91 2c       	mov	r9, r1
    1b90:	c6 01       	movw	r24, r12
    1b92:	88 19       	sub	r24, r8
    1b94:	99 09       	sbc	r25, r9
    1b96:	f3 01       	movw	r30, r6
    1b98:	e8 0f       	add	r30, r24
    1b9a:	f9 1f       	adc	r31, r25
    1b9c:	fe 87       	std	Y+14, r31	; 0x0e
    1b9e:	ed 87       	std	Y+13, r30	; 0x0d
    1ba0:	96 01       	movw	r18, r12
    1ba2:	24 19       	sub	r18, r4
    1ba4:	31 09       	sbc	r19, r1
    1ba6:	38 8b       	std	Y+16, r19	; 0x10
    1ba8:	2f 87       	std	Y+15, r18	; 0x0f
    1baa:	01 2f       	mov	r16, r17
    1bac:	10 e0       	ldi	r17, 0x00	; 0
    1bae:	11 95       	neg	r17
    1bb0:	01 95       	neg	r16
    1bb2:	11 09       	sbc	r17, r1
    1bb4:	3f ef       	ldi	r19, 0xFF	; 255
    1bb6:	83 16       	cp	r8, r19
    1bb8:	93 06       	cpc	r9, r19
    1bba:	29 f4       	brne	.+10     	; 0x1bc6 <vfprintf+0x2e8>
    1bbc:	b7 01       	movw	r22, r14
    1bbe:	8e e2       	ldi	r24, 0x2E	; 46
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1bc6:	c8 14       	cp	r12, r8
    1bc8:	d9 04       	cpc	r13, r9
    1bca:	4c f0       	brlt	.+18     	; 0x1bde <vfprintf+0x300>
    1bcc:	8f 85       	ldd	r24, Y+15	; 0x0f
    1bce:	98 89       	ldd	r25, Y+16	; 0x10
    1bd0:	88 15       	cp	r24, r8
    1bd2:	99 05       	cpc	r25, r9
    1bd4:	24 f4       	brge	.+8      	; 0x1bde <vfprintf+0x300>
    1bd6:	ed 85       	ldd	r30, Y+13	; 0x0d
    1bd8:	fe 85       	ldd	r31, Y+14	; 0x0e
    1bda:	81 81       	ldd	r24, Z+1	; 0x01
    1bdc:	01 c0       	rjmp	.+2      	; 0x1be0 <vfprintf+0x302>
    1bde:	80 e3       	ldi	r24, 0x30	; 48
    1be0:	f1 e0       	ldi	r31, 0x01	; 1
    1be2:	8f 1a       	sub	r8, r31
    1be4:	91 08       	sbc	r9, r1
    1be6:	2d 85       	ldd	r18, Y+13	; 0x0d
    1be8:	3e 85       	ldd	r19, Y+14	; 0x0e
    1bea:	2f 5f       	subi	r18, 0xFF	; 255
    1bec:	3f 4f       	sbci	r19, 0xFF	; 255
    1bee:	3e 87       	std	Y+14, r19	; 0x0e
    1bf0:	2d 87       	std	Y+13, r18	; 0x0d
    1bf2:	80 16       	cp	r8, r16
    1bf4:	91 06       	cpc	r9, r17
    1bf6:	2c f0       	brlt	.+10     	; 0x1c02 <vfprintf+0x324>
    1bf8:	b7 01       	movw	r22, r14
    1bfa:	90 e0       	ldi	r25, 0x00	; 0
    1bfc:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1c00:	d9 cf       	rjmp	.-78     	; 0x1bb4 <vfprintf+0x2d6>
    1c02:	c8 14       	cp	r12, r8
    1c04:	d9 04       	cpc	r13, r9
    1c06:	41 f4       	brne	.+16     	; 0x1c18 <vfprintf+0x33a>
    1c08:	9a 81       	ldd	r25, Y+2	; 0x02
    1c0a:	96 33       	cpi	r25, 0x36	; 54
    1c0c:	20 f4       	brcc	.+8      	; 0x1c16 <vfprintf+0x338>
    1c0e:	95 33       	cpi	r25, 0x35	; 53
    1c10:	19 f4       	brne	.+6      	; 0x1c18 <vfprintf+0x33a>
    1c12:	3c 85       	ldd	r19, Y+12	; 0x0c
    1c14:	34 ff       	sbrs	r19, 4
    1c16:	81 e3       	ldi	r24, 0x31	; 49
    1c18:	b7 01       	movw	r22, r14
    1c1a:	90 e0       	ldi	r25, 0x00	; 0
    1c1c:	4e c0       	rjmp	.+156    	; 0x1cba <vfprintf+0x3dc>
    1c1e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c20:	81 33       	cpi	r24, 0x31	; 49
    1c22:	19 f0       	breq	.+6      	; 0x1c2a <vfprintf+0x34c>
    1c24:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c26:	9f 7e       	andi	r25, 0xEF	; 239
    1c28:	9c 87       	std	Y+12, r25	; 0x0c
    1c2a:	b7 01       	movw	r22, r14
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1c32:	11 11       	cpse	r17, r1
    1c34:	05 c0       	rjmp	.+10     	; 0x1c40 <vfprintf+0x362>
    1c36:	94 fc       	sbrc	r9, 4
    1c38:	18 c0       	rjmp	.+48     	; 0x1c6a <vfprintf+0x38c>
    1c3a:	85 e6       	ldi	r24, 0x65	; 101
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	17 c0       	rjmp	.+46     	; 0x1c6e <vfprintf+0x390>
    1c40:	b7 01       	movw	r22, r14
    1c42:	8e e2       	ldi	r24, 0x2E	; 46
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1c4a:	1e 5f       	subi	r17, 0xFE	; 254
    1c4c:	82 e0       	ldi	r24, 0x02	; 2
    1c4e:	01 e0       	ldi	r16, 0x01	; 1
    1c50:	08 0f       	add	r16, r24
    1c52:	f3 01       	movw	r30, r6
    1c54:	e8 0f       	add	r30, r24
    1c56:	f1 1d       	adc	r31, r1
    1c58:	80 81       	ld	r24, Z
    1c5a:	b7 01       	movw	r22, r14
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1c62:	80 2f       	mov	r24, r16
    1c64:	01 13       	cpse	r16, r17
    1c66:	f3 cf       	rjmp	.-26     	; 0x1c4e <vfprintf+0x370>
    1c68:	e6 cf       	rjmp	.-52     	; 0x1c36 <vfprintf+0x358>
    1c6a:	85 e4       	ldi	r24, 0x45	; 69
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	b7 01       	movw	r22, r14
    1c70:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1c74:	d7 fc       	sbrc	r13, 7
    1c76:	06 c0       	rjmp	.+12     	; 0x1c84 <vfprintf+0x3a6>
    1c78:	c1 14       	cp	r12, r1
    1c7a:	d1 04       	cpc	r13, r1
    1c7c:	41 f4       	brne	.+16     	; 0x1c8e <vfprintf+0x3b0>
    1c7e:	ec 85       	ldd	r30, Y+12	; 0x0c
    1c80:	e4 ff       	sbrs	r30, 4
    1c82:	05 c0       	rjmp	.+10     	; 0x1c8e <vfprintf+0x3b0>
    1c84:	d1 94       	neg	r13
    1c86:	c1 94       	neg	r12
    1c88:	d1 08       	sbc	r13, r1
    1c8a:	8d e2       	ldi	r24, 0x2D	; 45
    1c8c:	01 c0       	rjmp	.+2      	; 0x1c90 <vfprintf+0x3b2>
    1c8e:	8b e2       	ldi	r24, 0x2B	; 43
    1c90:	b7 01       	movw	r22, r14
    1c92:	90 e0       	ldi	r25, 0x00	; 0
    1c94:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1c98:	80 e3       	ldi	r24, 0x30	; 48
    1c9a:	2a e0       	ldi	r18, 0x0A	; 10
    1c9c:	c2 16       	cp	r12, r18
    1c9e:	d1 04       	cpc	r13, r1
    1ca0:	2c f0       	brlt	.+10     	; 0x1cac <vfprintf+0x3ce>
    1ca2:	8f 5f       	subi	r24, 0xFF	; 255
    1ca4:	fa e0       	ldi	r31, 0x0A	; 10
    1ca6:	cf 1a       	sub	r12, r31
    1ca8:	d1 08       	sbc	r13, r1
    1caa:	f7 cf       	rjmp	.-18     	; 0x1c9a <vfprintf+0x3bc>
    1cac:	b7 01       	movw	r22, r14
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1cb4:	b7 01       	movw	r22, r14
    1cb6:	c6 01       	movw	r24, r12
    1cb8:	c0 96       	adiw	r24, 0x30	; 48
    1cba:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1cbe:	54 c1       	rjmp	.+680    	; 0x1f68 <vfprintf+0x68a>
    1cc0:	83 36       	cpi	r24, 0x63	; 99
    1cc2:	31 f0       	breq	.+12     	; 0x1cd0 <vfprintf+0x3f2>
    1cc4:	83 37       	cpi	r24, 0x73	; 115
    1cc6:	79 f0       	breq	.+30     	; 0x1ce6 <vfprintf+0x408>
    1cc8:	83 35       	cpi	r24, 0x53	; 83
    1cca:	09 f0       	breq	.+2      	; 0x1cce <vfprintf+0x3f0>
    1ccc:	56 c0       	rjmp	.+172    	; 0x1d7a <vfprintf+0x49c>
    1cce:	20 c0       	rjmp	.+64     	; 0x1d10 <vfprintf+0x432>
    1cd0:	56 01       	movw	r10, r12
    1cd2:	32 e0       	ldi	r19, 0x02	; 2
    1cd4:	a3 0e       	add	r10, r19
    1cd6:	b1 1c       	adc	r11, r1
    1cd8:	f6 01       	movw	r30, r12
    1cda:	80 81       	ld	r24, Z
    1cdc:	89 83       	std	Y+1, r24	; 0x01
    1cde:	01 e0       	ldi	r16, 0x01	; 1
    1ce0:	10 e0       	ldi	r17, 0x00	; 0
    1ce2:	63 01       	movw	r12, r6
    1ce4:	12 c0       	rjmp	.+36     	; 0x1d0a <vfprintf+0x42c>
    1ce6:	56 01       	movw	r10, r12
    1ce8:	f2 e0       	ldi	r31, 0x02	; 2
    1cea:	af 0e       	add	r10, r31
    1cec:	b1 1c       	adc	r11, r1
    1cee:	f6 01       	movw	r30, r12
    1cf0:	c0 80       	ld	r12, Z
    1cf2:	d1 80       	ldd	r13, Z+1	; 0x01
    1cf4:	96 fe       	sbrs	r9, 6
    1cf6:	03 c0       	rjmp	.+6      	; 0x1cfe <vfprintf+0x420>
    1cf8:	61 2f       	mov	r22, r17
    1cfa:	70 e0       	ldi	r23, 0x00	; 0
    1cfc:	02 c0       	rjmp	.+4      	; 0x1d02 <vfprintf+0x424>
    1cfe:	6f ef       	ldi	r22, 0xFF	; 255
    1d00:	7f ef       	ldi	r23, 0xFF	; 255
    1d02:	c6 01       	movw	r24, r12
    1d04:	0e 94 47 11 	call	0x228e	; 0x228e <strnlen>
    1d08:	8c 01       	movw	r16, r24
    1d0a:	f9 2d       	mov	r31, r9
    1d0c:	ff 77       	andi	r31, 0x7F	; 127
    1d0e:	14 c0       	rjmp	.+40     	; 0x1d38 <vfprintf+0x45a>
    1d10:	56 01       	movw	r10, r12
    1d12:	22 e0       	ldi	r18, 0x02	; 2
    1d14:	a2 0e       	add	r10, r18
    1d16:	b1 1c       	adc	r11, r1
    1d18:	f6 01       	movw	r30, r12
    1d1a:	c0 80       	ld	r12, Z
    1d1c:	d1 80       	ldd	r13, Z+1	; 0x01
    1d1e:	96 fe       	sbrs	r9, 6
    1d20:	03 c0       	rjmp	.+6      	; 0x1d28 <vfprintf+0x44a>
    1d22:	61 2f       	mov	r22, r17
    1d24:	70 e0       	ldi	r23, 0x00	; 0
    1d26:	02 c0       	rjmp	.+4      	; 0x1d2c <vfprintf+0x44e>
    1d28:	6f ef       	ldi	r22, 0xFF	; 255
    1d2a:	7f ef       	ldi	r23, 0xFF	; 255
    1d2c:	c6 01       	movw	r24, r12
    1d2e:	0e 94 3c 11 	call	0x2278	; 0x2278 <strnlen_P>
    1d32:	8c 01       	movw	r16, r24
    1d34:	f9 2d       	mov	r31, r9
    1d36:	f0 68       	ori	r31, 0x80	; 128
    1d38:	9f 2e       	mov	r9, r31
    1d3a:	f3 fd       	sbrc	r31, 3
    1d3c:	1a c0       	rjmp	.+52     	; 0x1d72 <vfprintf+0x494>
    1d3e:	85 2d       	mov	r24, r5
    1d40:	90 e0       	ldi	r25, 0x00	; 0
    1d42:	08 17       	cp	r16, r24
    1d44:	19 07       	cpc	r17, r25
    1d46:	a8 f4       	brcc	.+42     	; 0x1d72 <vfprintf+0x494>
    1d48:	b7 01       	movw	r22, r14
    1d4a:	80 e2       	ldi	r24, 0x20	; 32
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1d52:	5a 94       	dec	r5
    1d54:	f4 cf       	rjmp	.-24     	; 0x1d3e <vfprintf+0x460>
    1d56:	f6 01       	movw	r30, r12
    1d58:	97 fc       	sbrc	r9, 7
    1d5a:	85 91       	lpm	r24, Z+
    1d5c:	97 fe       	sbrs	r9, 7
    1d5e:	81 91       	ld	r24, Z+
    1d60:	6f 01       	movw	r12, r30
    1d62:	b7 01       	movw	r22, r14
    1d64:	90 e0       	ldi	r25, 0x00	; 0
    1d66:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1d6a:	51 10       	cpse	r5, r1
    1d6c:	5a 94       	dec	r5
    1d6e:	01 50       	subi	r16, 0x01	; 1
    1d70:	11 09       	sbc	r17, r1
    1d72:	01 15       	cp	r16, r1
    1d74:	11 05       	cpc	r17, r1
    1d76:	79 f7       	brne	.-34     	; 0x1d56 <vfprintf+0x478>
    1d78:	f7 c0       	rjmp	.+494    	; 0x1f68 <vfprintf+0x68a>
    1d7a:	84 36       	cpi	r24, 0x64	; 100
    1d7c:	11 f0       	breq	.+4      	; 0x1d82 <vfprintf+0x4a4>
    1d7e:	89 36       	cpi	r24, 0x69	; 105
    1d80:	61 f5       	brne	.+88     	; 0x1dda <vfprintf+0x4fc>
    1d82:	56 01       	movw	r10, r12
    1d84:	97 fe       	sbrs	r9, 7
    1d86:	09 c0       	rjmp	.+18     	; 0x1d9a <vfprintf+0x4bc>
    1d88:	24 e0       	ldi	r18, 0x04	; 4
    1d8a:	a2 0e       	add	r10, r18
    1d8c:	b1 1c       	adc	r11, r1
    1d8e:	f6 01       	movw	r30, r12
    1d90:	60 81       	ld	r22, Z
    1d92:	71 81       	ldd	r23, Z+1	; 0x01
    1d94:	82 81       	ldd	r24, Z+2	; 0x02
    1d96:	93 81       	ldd	r25, Z+3	; 0x03
    1d98:	0a c0       	rjmp	.+20     	; 0x1dae <vfprintf+0x4d0>
    1d9a:	f2 e0       	ldi	r31, 0x02	; 2
    1d9c:	af 0e       	add	r10, r31
    1d9e:	b1 1c       	adc	r11, r1
    1da0:	f6 01       	movw	r30, r12
    1da2:	60 81       	ld	r22, Z
    1da4:	71 81       	ldd	r23, Z+1	; 0x01
    1da6:	07 2e       	mov	r0, r23
    1da8:	00 0c       	add	r0, r0
    1daa:	88 0b       	sbc	r24, r24
    1dac:	99 0b       	sbc	r25, r25
    1dae:	f9 2d       	mov	r31, r9
    1db0:	ff 76       	andi	r31, 0x6F	; 111
    1db2:	9f 2e       	mov	r9, r31
    1db4:	97 ff       	sbrs	r25, 7
    1db6:	09 c0       	rjmp	.+18     	; 0x1dca <vfprintf+0x4ec>
    1db8:	90 95       	com	r25
    1dba:	80 95       	com	r24
    1dbc:	70 95       	com	r23
    1dbe:	61 95       	neg	r22
    1dc0:	7f 4f       	sbci	r23, 0xFF	; 255
    1dc2:	8f 4f       	sbci	r24, 0xFF	; 255
    1dc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc6:	f0 68       	ori	r31, 0x80	; 128
    1dc8:	9f 2e       	mov	r9, r31
    1dca:	2a e0       	ldi	r18, 0x0A	; 10
    1dcc:	30 e0       	ldi	r19, 0x00	; 0
    1dce:	a3 01       	movw	r20, r6
    1dd0:	0e 94 b0 11 	call	0x2360	; 0x2360 <__ultoa_invert>
    1dd4:	c8 2e       	mov	r12, r24
    1dd6:	c6 18       	sub	r12, r6
    1dd8:	3f c0       	rjmp	.+126    	; 0x1e58 <vfprintf+0x57a>
    1dda:	09 2d       	mov	r16, r9
    1ddc:	85 37       	cpi	r24, 0x75	; 117
    1dde:	21 f4       	brne	.+8      	; 0x1de8 <vfprintf+0x50a>
    1de0:	0f 7e       	andi	r16, 0xEF	; 239
    1de2:	2a e0       	ldi	r18, 0x0A	; 10
    1de4:	30 e0       	ldi	r19, 0x00	; 0
    1de6:	1d c0       	rjmp	.+58     	; 0x1e22 <vfprintf+0x544>
    1de8:	09 7f       	andi	r16, 0xF9	; 249
    1dea:	8f 36       	cpi	r24, 0x6F	; 111
    1dec:	91 f0       	breq	.+36     	; 0x1e12 <vfprintf+0x534>
    1dee:	18 f4       	brcc	.+6      	; 0x1df6 <vfprintf+0x518>
    1df0:	88 35       	cpi	r24, 0x58	; 88
    1df2:	59 f0       	breq	.+22     	; 0x1e0a <vfprintf+0x52c>
    1df4:	c3 c0       	rjmp	.+390    	; 0x1f7c <vfprintf+0x69e>
    1df6:	80 37       	cpi	r24, 0x70	; 112
    1df8:	19 f0       	breq	.+6      	; 0x1e00 <vfprintf+0x522>
    1dfa:	88 37       	cpi	r24, 0x78	; 120
    1dfc:	11 f0       	breq	.+4      	; 0x1e02 <vfprintf+0x524>
    1dfe:	be c0       	rjmp	.+380    	; 0x1f7c <vfprintf+0x69e>
    1e00:	00 61       	ori	r16, 0x10	; 16
    1e02:	04 ff       	sbrs	r16, 4
    1e04:	09 c0       	rjmp	.+18     	; 0x1e18 <vfprintf+0x53a>
    1e06:	04 60       	ori	r16, 0x04	; 4
    1e08:	07 c0       	rjmp	.+14     	; 0x1e18 <vfprintf+0x53a>
    1e0a:	94 fe       	sbrs	r9, 4
    1e0c:	08 c0       	rjmp	.+16     	; 0x1e1e <vfprintf+0x540>
    1e0e:	06 60       	ori	r16, 0x06	; 6
    1e10:	06 c0       	rjmp	.+12     	; 0x1e1e <vfprintf+0x540>
    1e12:	28 e0       	ldi	r18, 0x08	; 8
    1e14:	30 e0       	ldi	r19, 0x00	; 0
    1e16:	05 c0       	rjmp	.+10     	; 0x1e22 <vfprintf+0x544>
    1e18:	20 e1       	ldi	r18, 0x10	; 16
    1e1a:	30 e0       	ldi	r19, 0x00	; 0
    1e1c:	02 c0       	rjmp	.+4      	; 0x1e22 <vfprintf+0x544>
    1e1e:	20 e1       	ldi	r18, 0x10	; 16
    1e20:	32 e0       	ldi	r19, 0x02	; 2
    1e22:	56 01       	movw	r10, r12
    1e24:	07 ff       	sbrs	r16, 7
    1e26:	09 c0       	rjmp	.+18     	; 0x1e3a <vfprintf+0x55c>
    1e28:	84 e0       	ldi	r24, 0x04	; 4
    1e2a:	a8 0e       	add	r10, r24
    1e2c:	b1 1c       	adc	r11, r1
    1e2e:	f6 01       	movw	r30, r12
    1e30:	60 81       	ld	r22, Z
    1e32:	71 81       	ldd	r23, Z+1	; 0x01
    1e34:	82 81       	ldd	r24, Z+2	; 0x02
    1e36:	93 81       	ldd	r25, Z+3	; 0x03
    1e38:	08 c0       	rjmp	.+16     	; 0x1e4a <vfprintf+0x56c>
    1e3a:	f2 e0       	ldi	r31, 0x02	; 2
    1e3c:	af 0e       	add	r10, r31
    1e3e:	b1 1c       	adc	r11, r1
    1e40:	f6 01       	movw	r30, r12
    1e42:	60 81       	ld	r22, Z
    1e44:	71 81       	ldd	r23, Z+1	; 0x01
    1e46:	80 e0       	ldi	r24, 0x00	; 0
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	a3 01       	movw	r20, r6
    1e4c:	0e 94 b0 11 	call	0x2360	; 0x2360 <__ultoa_invert>
    1e50:	c8 2e       	mov	r12, r24
    1e52:	c6 18       	sub	r12, r6
    1e54:	0f 77       	andi	r16, 0x7F	; 127
    1e56:	90 2e       	mov	r9, r16
    1e58:	96 fe       	sbrs	r9, 6
    1e5a:	0b c0       	rjmp	.+22     	; 0x1e72 <vfprintf+0x594>
    1e5c:	09 2d       	mov	r16, r9
    1e5e:	0e 7f       	andi	r16, 0xFE	; 254
    1e60:	c1 16       	cp	r12, r17
    1e62:	50 f4       	brcc	.+20     	; 0x1e78 <vfprintf+0x59a>
    1e64:	94 fe       	sbrs	r9, 4
    1e66:	0a c0       	rjmp	.+20     	; 0x1e7c <vfprintf+0x59e>
    1e68:	92 fc       	sbrc	r9, 2
    1e6a:	08 c0       	rjmp	.+16     	; 0x1e7c <vfprintf+0x59e>
    1e6c:	09 2d       	mov	r16, r9
    1e6e:	0e 7e       	andi	r16, 0xEE	; 238
    1e70:	05 c0       	rjmp	.+10     	; 0x1e7c <vfprintf+0x59e>
    1e72:	dc 2c       	mov	r13, r12
    1e74:	09 2d       	mov	r16, r9
    1e76:	03 c0       	rjmp	.+6      	; 0x1e7e <vfprintf+0x5a0>
    1e78:	dc 2c       	mov	r13, r12
    1e7a:	01 c0       	rjmp	.+2      	; 0x1e7e <vfprintf+0x5a0>
    1e7c:	d1 2e       	mov	r13, r17
    1e7e:	04 ff       	sbrs	r16, 4
    1e80:	0d c0       	rjmp	.+26     	; 0x1e9c <vfprintf+0x5be>
    1e82:	fe 01       	movw	r30, r28
    1e84:	ec 0d       	add	r30, r12
    1e86:	f1 1d       	adc	r31, r1
    1e88:	80 81       	ld	r24, Z
    1e8a:	80 33       	cpi	r24, 0x30	; 48
    1e8c:	11 f4       	brne	.+4      	; 0x1e92 <vfprintf+0x5b4>
    1e8e:	09 7e       	andi	r16, 0xE9	; 233
    1e90:	09 c0       	rjmp	.+18     	; 0x1ea4 <vfprintf+0x5c6>
    1e92:	02 ff       	sbrs	r16, 2
    1e94:	06 c0       	rjmp	.+12     	; 0x1ea2 <vfprintf+0x5c4>
    1e96:	d3 94       	inc	r13
    1e98:	d3 94       	inc	r13
    1e9a:	04 c0       	rjmp	.+8      	; 0x1ea4 <vfprintf+0x5c6>
    1e9c:	80 2f       	mov	r24, r16
    1e9e:	86 78       	andi	r24, 0x86	; 134
    1ea0:	09 f0       	breq	.+2      	; 0x1ea4 <vfprintf+0x5c6>
    1ea2:	d3 94       	inc	r13
    1ea4:	03 fd       	sbrc	r16, 3
    1ea6:	11 c0       	rjmp	.+34     	; 0x1eca <vfprintf+0x5ec>
    1ea8:	00 ff       	sbrs	r16, 0
    1eaa:	06 c0       	rjmp	.+12     	; 0x1eb8 <vfprintf+0x5da>
    1eac:	1c 2d       	mov	r17, r12
    1eae:	d5 14       	cp	r13, r5
    1eb0:	80 f4       	brcc	.+32     	; 0x1ed2 <vfprintf+0x5f4>
    1eb2:	15 0d       	add	r17, r5
    1eb4:	1d 19       	sub	r17, r13
    1eb6:	0d c0       	rjmp	.+26     	; 0x1ed2 <vfprintf+0x5f4>
    1eb8:	d5 14       	cp	r13, r5
    1eba:	58 f4       	brcc	.+22     	; 0x1ed2 <vfprintf+0x5f4>
    1ebc:	b7 01       	movw	r22, r14
    1ebe:	80 e2       	ldi	r24, 0x20	; 32
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1ec6:	d3 94       	inc	r13
    1ec8:	f7 cf       	rjmp	.-18     	; 0x1eb8 <vfprintf+0x5da>
    1eca:	d5 14       	cp	r13, r5
    1ecc:	10 f4       	brcc	.+4      	; 0x1ed2 <vfprintf+0x5f4>
    1ece:	5d 18       	sub	r5, r13
    1ed0:	01 c0       	rjmp	.+2      	; 0x1ed4 <vfprintf+0x5f6>
    1ed2:	51 2c       	mov	r5, r1
    1ed4:	04 ff       	sbrs	r16, 4
    1ed6:	10 c0       	rjmp	.+32     	; 0x1ef8 <vfprintf+0x61a>
    1ed8:	b7 01       	movw	r22, r14
    1eda:	80 e3       	ldi	r24, 0x30	; 48
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1ee2:	02 ff       	sbrs	r16, 2
    1ee4:	17 c0       	rjmp	.+46     	; 0x1f14 <vfprintf+0x636>
    1ee6:	01 fd       	sbrc	r16, 1
    1ee8:	03 c0       	rjmp	.+6      	; 0x1ef0 <vfprintf+0x612>
    1eea:	88 e7       	ldi	r24, 0x78	; 120
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	02 c0       	rjmp	.+4      	; 0x1ef4 <vfprintf+0x616>
    1ef0:	88 e5       	ldi	r24, 0x58	; 88
    1ef2:	90 e0       	ldi	r25, 0x00	; 0
    1ef4:	b7 01       	movw	r22, r14
    1ef6:	0c c0       	rjmp	.+24     	; 0x1f10 <vfprintf+0x632>
    1ef8:	80 2f       	mov	r24, r16
    1efa:	86 78       	andi	r24, 0x86	; 134
    1efc:	59 f0       	breq	.+22     	; 0x1f14 <vfprintf+0x636>
    1efe:	01 ff       	sbrs	r16, 1
    1f00:	02 c0       	rjmp	.+4      	; 0x1f06 <vfprintf+0x628>
    1f02:	8b e2       	ldi	r24, 0x2B	; 43
    1f04:	01 c0       	rjmp	.+2      	; 0x1f08 <vfprintf+0x62a>
    1f06:	80 e2       	ldi	r24, 0x20	; 32
    1f08:	07 fd       	sbrc	r16, 7
    1f0a:	8d e2       	ldi	r24, 0x2D	; 45
    1f0c:	b7 01       	movw	r22, r14
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1f14:	c1 16       	cp	r12, r17
    1f16:	38 f4       	brcc	.+14     	; 0x1f26 <vfprintf+0x648>
    1f18:	b7 01       	movw	r22, r14
    1f1a:	80 e3       	ldi	r24, 0x30	; 48
    1f1c:	90 e0       	ldi	r25, 0x00	; 0
    1f1e:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1f22:	11 50       	subi	r17, 0x01	; 1
    1f24:	f7 cf       	rjmp	.-18     	; 0x1f14 <vfprintf+0x636>
    1f26:	ca 94       	dec	r12
    1f28:	f3 01       	movw	r30, r6
    1f2a:	ec 0d       	add	r30, r12
    1f2c:	f1 1d       	adc	r31, r1
    1f2e:	80 81       	ld	r24, Z
    1f30:	b7 01       	movw	r22, r14
    1f32:	90 e0       	ldi	r25, 0x00	; 0
    1f34:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1f38:	c1 10       	cpse	r12, r1
    1f3a:	f5 cf       	rjmp	.-22     	; 0x1f26 <vfprintf+0x648>
    1f3c:	15 c0       	rjmp	.+42     	; 0x1f68 <vfprintf+0x68a>
    1f3e:	f4 e0       	ldi	r31, 0x04	; 4
    1f40:	f5 15       	cp	r31, r5
    1f42:	60 f5       	brcc	.+88     	; 0x1f9c <vfprintf+0x6be>
    1f44:	84 e0       	ldi	r24, 0x04	; 4
    1f46:	58 1a       	sub	r5, r24
    1f48:	93 fe       	sbrs	r9, 3
    1f4a:	1f c0       	rjmp	.+62     	; 0x1f8a <vfprintf+0x6ac>
    1f4c:	01 11       	cpse	r16, r1
    1f4e:	27 c0       	rjmp	.+78     	; 0x1f9e <vfprintf+0x6c0>
    1f50:	2c 85       	ldd	r18, Y+12	; 0x0c
    1f52:	23 ff       	sbrs	r18, 3
    1f54:	2a c0       	rjmp	.+84     	; 0x1faa <vfprintf+0x6cc>
    1f56:	04 e5       	ldi	r16, 0x54	; 84
    1f58:	10 e0       	ldi	r17, 0x00	; 0
    1f5a:	39 2d       	mov	r19, r9
    1f5c:	30 71       	andi	r19, 0x10	; 16
    1f5e:	93 2e       	mov	r9, r19
    1f60:	f8 01       	movw	r30, r16
    1f62:	84 91       	lpm	r24, Z
    1f64:	81 11       	cpse	r24, r1
    1f66:	24 c0       	rjmp	.+72     	; 0x1fb0 <vfprintf+0x6d2>
    1f68:	55 20       	and	r5, r5
    1f6a:	09 f4       	brne	.+2      	; 0x1f6e <vfprintf+0x690>
    1f6c:	e4 cc       	rjmp	.-1592   	; 0x1936 <vfprintf+0x58>
    1f6e:	b7 01       	movw	r22, r14
    1f70:	80 e2       	ldi	r24, 0x20	; 32
    1f72:	90 e0       	ldi	r25, 0x00	; 0
    1f74:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1f78:	5a 94       	dec	r5
    1f7a:	f6 cf       	rjmp	.-20     	; 0x1f68 <vfprintf+0x68a>
    1f7c:	f7 01       	movw	r30, r14
    1f7e:	86 81       	ldd	r24, Z+6	; 0x06
    1f80:	97 81       	ldd	r25, Z+7	; 0x07
    1f82:	26 c0       	rjmp	.+76     	; 0x1fd0 <vfprintf+0x6f2>
    1f84:	8f ef       	ldi	r24, 0xFF	; 255
    1f86:	9f ef       	ldi	r25, 0xFF	; 255
    1f88:	23 c0       	rjmp	.+70     	; 0x1fd0 <vfprintf+0x6f2>
    1f8a:	b7 01       	movw	r22, r14
    1f8c:	80 e2       	ldi	r24, 0x20	; 32
    1f8e:	90 e0       	ldi	r25, 0x00	; 0
    1f90:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1f94:	5a 94       	dec	r5
    1f96:	51 10       	cpse	r5, r1
    1f98:	f8 cf       	rjmp	.-16     	; 0x1f8a <vfprintf+0x6ac>
    1f9a:	d8 cf       	rjmp	.-80     	; 0x1f4c <vfprintf+0x66e>
    1f9c:	51 2c       	mov	r5, r1
    1f9e:	b7 01       	movw	r22, r14
    1fa0:	80 2f       	mov	r24, r16
    1fa2:	90 e0       	ldi	r25, 0x00	; 0
    1fa4:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1fa8:	d3 cf       	rjmp	.-90     	; 0x1f50 <vfprintf+0x672>
    1faa:	08 e5       	ldi	r16, 0x58	; 88
    1fac:	10 e0       	ldi	r17, 0x00	; 0
    1fae:	d5 cf       	rjmp	.-86     	; 0x1f5a <vfprintf+0x67c>
    1fb0:	91 10       	cpse	r9, r1
    1fb2:	80 52       	subi	r24, 0x20	; 32
    1fb4:	b7 01       	movw	r22, r14
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	0e 94 52 11 	call	0x22a4	; 0x22a4 <fputc>
    1fbc:	0f 5f       	subi	r16, 0xFF	; 255
    1fbe:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc0:	cf cf       	rjmp	.-98     	; 0x1f60 <vfprintf+0x682>
    1fc2:	23 e0       	ldi	r18, 0x03	; 3
    1fc4:	25 15       	cp	r18, r5
    1fc6:	10 f4       	brcc	.+4      	; 0x1fcc <vfprintf+0x6ee>
    1fc8:	83 e0       	ldi	r24, 0x03	; 3
    1fca:	bd cf       	rjmp	.-134    	; 0x1f46 <vfprintf+0x668>
    1fcc:	51 2c       	mov	r5, r1
    1fce:	c0 cf       	rjmp	.-128    	; 0x1f50 <vfprintf+0x672>
    1fd0:	60 96       	adiw	r28, 0x10	; 16
    1fd2:	e2 e1       	ldi	r30, 0x12	; 18
    1fd4:	0c 94 27 10 	jmp	0x204e	; 0x204e <__epilogue_restores__>

00001fd8 <__divmodsi4>:
    1fd8:	05 2e       	mov	r0, r21
    1fda:	97 fb       	bst	r25, 7
    1fdc:	1e f4       	brtc	.+6      	; 0x1fe4 <__divmodsi4+0xc>
    1fde:	00 94       	com	r0
    1fe0:	0e 94 03 10 	call	0x2006	; 0x2006 <__negsi2>
    1fe4:	57 fd       	sbrc	r21, 7
    1fe6:	07 d0       	rcall	.+14     	; 0x1ff6 <__divmodsi4_neg2>
    1fe8:	0e 94 42 10 	call	0x2084	; 0x2084 <__udivmodsi4>
    1fec:	07 fc       	sbrc	r0, 7
    1fee:	03 d0       	rcall	.+6      	; 0x1ff6 <__divmodsi4_neg2>
    1ff0:	4e f4       	brtc	.+18     	; 0x2004 <__divmodsi4_exit>
    1ff2:	0c 94 03 10 	jmp	0x2006	; 0x2006 <__negsi2>

00001ff6 <__divmodsi4_neg2>:
    1ff6:	50 95       	com	r21
    1ff8:	40 95       	com	r20
    1ffa:	30 95       	com	r19
    1ffc:	21 95       	neg	r18
    1ffe:	3f 4f       	sbci	r19, 0xFF	; 255
    2000:	4f 4f       	sbci	r20, 0xFF	; 255
    2002:	5f 4f       	sbci	r21, 0xFF	; 255

00002004 <__divmodsi4_exit>:
    2004:	08 95       	ret

00002006 <__negsi2>:
    2006:	90 95       	com	r25
    2008:	80 95       	com	r24
    200a:	70 95       	com	r23
    200c:	61 95       	neg	r22
    200e:	7f 4f       	sbci	r23, 0xFF	; 255
    2010:	8f 4f       	sbci	r24, 0xFF	; 255
    2012:	9f 4f       	sbci	r25, 0xFF	; 255
    2014:	08 95       	ret

00002016 <__prologue_saves__>:
    2016:	2f 92       	push	r2
    2018:	3f 92       	push	r3
    201a:	4f 92       	push	r4
    201c:	5f 92       	push	r5
    201e:	6f 92       	push	r6
    2020:	7f 92       	push	r7
    2022:	8f 92       	push	r8
    2024:	9f 92       	push	r9
    2026:	af 92       	push	r10
    2028:	bf 92       	push	r11
    202a:	cf 92       	push	r12
    202c:	df 92       	push	r13
    202e:	ef 92       	push	r14
    2030:	ff 92       	push	r15
    2032:	0f 93       	push	r16
    2034:	1f 93       	push	r17
    2036:	cf 93       	push	r28
    2038:	df 93       	push	r29
    203a:	cd b7       	in	r28, 0x3d	; 61
    203c:	de b7       	in	r29, 0x3e	; 62
    203e:	ca 1b       	sub	r28, r26
    2040:	db 0b       	sbc	r29, r27
    2042:	0f b6       	in	r0, 0x3f	; 63
    2044:	f8 94       	cli
    2046:	de bf       	out	0x3e, r29	; 62
    2048:	0f be       	out	0x3f, r0	; 63
    204a:	cd bf       	out	0x3d, r28	; 61
    204c:	09 94       	ijmp

0000204e <__epilogue_restores__>:
    204e:	2a 88       	ldd	r2, Y+18	; 0x12
    2050:	39 88       	ldd	r3, Y+17	; 0x11
    2052:	48 88       	ldd	r4, Y+16	; 0x10
    2054:	5f 84       	ldd	r5, Y+15	; 0x0f
    2056:	6e 84       	ldd	r6, Y+14	; 0x0e
    2058:	7d 84       	ldd	r7, Y+13	; 0x0d
    205a:	8c 84       	ldd	r8, Y+12	; 0x0c
    205c:	9b 84       	ldd	r9, Y+11	; 0x0b
    205e:	aa 84       	ldd	r10, Y+10	; 0x0a
    2060:	b9 84       	ldd	r11, Y+9	; 0x09
    2062:	c8 84       	ldd	r12, Y+8	; 0x08
    2064:	df 80       	ldd	r13, Y+7	; 0x07
    2066:	ee 80       	ldd	r14, Y+6	; 0x06
    2068:	fd 80       	ldd	r15, Y+5	; 0x05
    206a:	0c 81       	ldd	r16, Y+4	; 0x04
    206c:	1b 81       	ldd	r17, Y+3	; 0x03
    206e:	aa 81       	ldd	r26, Y+2	; 0x02
    2070:	b9 81       	ldd	r27, Y+1	; 0x01
    2072:	ce 0f       	add	r28, r30
    2074:	d1 1d       	adc	r29, r1
    2076:	0f b6       	in	r0, 0x3f	; 63
    2078:	f8 94       	cli
    207a:	de bf       	out	0x3e, r29	; 62
    207c:	0f be       	out	0x3f, r0	; 63
    207e:	cd bf       	out	0x3d, r28	; 61
    2080:	ed 01       	movw	r28, r26
    2082:	08 95       	ret

00002084 <__udivmodsi4>:
    2084:	a1 e2       	ldi	r26, 0x21	; 33
    2086:	1a 2e       	mov	r1, r26
    2088:	aa 1b       	sub	r26, r26
    208a:	bb 1b       	sub	r27, r27
    208c:	fd 01       	movw	r30, r26
    208e:	0d c0       	rjmp	.+26     	; 0x20aa <__udivmodsi4_ep>

00002090 <__udivmodsi4_loop>:
    2090:	aa 1f       	adc	r26, r26
    2092:	bb 1f       	adc	r27, r27
    2094:	ee 1f       	adc	r30, r30
    2096:	ff 1f       	adc	r31, r31
    2098:	a2 17       	cp	r26, r18
    209a:	b3 07       	cpc	r27, r19
    209c:	e4 07       	cpc	r30, r20
    209e:	f5 07       	cpc	r31, r21
    20a0:	20 f0       	brcs	.+8      	; 0x20aa <__udivmodsi4_ep>
    20a2:	a2 1b       	sub	r26, r18
    20a4:	b3 0b       	sbc	r27, r19
    20a6:	e4 0b       	sbc	r30, r20
    20a8:	f5 0b       	sbc	r31, r21

000020aa <__udivmodsi4_ep>:
    20aa:	66 1f       	adc	r22, r22
    20ac:	77 1f       	adc	r23, r23
    20ae:	88 1f       	adc	r24, r24
    20b0:	99 1f       	adc	r25, r25
    20b2:	1a 94       	dec	r1
    20b4:	69 f7       	brne	.-38     	; 0x2090 <__udivmodsi4_loop>
    20b6:	60 95       	com	r22
    20b8:	70 95       	com	r23
    20ba:	80 95       	com	r24
    20bc:	90 95       	com	r25
    20be:	9b 01       	movw	r18, r22
    20c0:	ac 01       	movw	r20, r24
    20c2:	bd 01       	movw	r22, r26
    20c4:	cf 01       	movw	r24, r30
    20c6:	08 95       	ret

000020c8 <__ftoa_engine>:
    20c8:	28 30       	cpi	r18, 0x08	; 8
    20ca:	08 f0       	brcs	.+2      	; 0x20ce <__ftoa_engine+0x6>
    20cc:	27 e0       	ldi	r18, 0x07	; 7
    20ce:	33 27       	eor	r19, r19
    20d0:	da 01       	movw	r26, r20
    20d2:	99 0f       	add	r25, r25
    20d4:	31 1d       	adc	r19, r1
    20d6:	87 fd       	sbrc	r24, 7
    20d8:	91 60       	ori	r25, 0x01	; 1
    20da:	00 96       	adiw	r24, 0x00	; 0
    20dc:	61 05       	cpc	r22, r1
    20de:	71 05       	cpc	r23, r1
    20e0:	39 f4       	brne	.+14     	; 0x20f0 <__ftoa_engine+0x28>
    20e2:	32 60       	ori	r19, 0x02	; 2
    20e4:	2e 5f       	subi	r18, 0xFE	; 254
    20e6:	3d 93       	st	X+, r19
    20e8:	30 e3       	ldi	r19, 0x30	; 48
    20ea:	2a 95       	dec	r18
    20ec:	e1 f7       	brne	.-8      	; 0x20e6 <__ftoa_engine+0x1e>
    20ee:	08 95       	ret
    20f0:	9f 3f       	cpi	r25, 0xFF	; 255
    20f2:	30 f0       	brcs	.+12     	; 0x2100 <__ftoa_engine+0x38>
    20f4:	80 38       	cpi	r24, 0x80	; 128
    20f6:	71 05       	cpc	r23, r1
    20f8:	61 05       	cpc	r22, r1
    20fa:	09 f0       	breq	.+2      	; 0x20fe <__ftoa_engine+0x36>
    20fc:	3c 5f       	subi	r19, 0xFC	; 252
    20fe:	3c 5f       	subi	r19, 0xFC	; 252
    2100:	3d 93       	st	X+, r19
    2102:	91 30       	cpi	r25, 0x01	; 1
    2104:	08 f0       	brcs	.+2      	; 0x2108 <__ftoa_engine+0x40>
    2106:	80 68       	ori	r24, 0x80	; 128
    2108:	91 1d       	adc	r25, r1
    210a:	df 93       	push	r29
    210c:	cf 93       	push	r28
    210e:	1f 93       	push	r17
    2110:	0f 93       	push	r16
    2112:	ff 92       	push	r15
    2114:	ef 92       	push	r14
    2116:	19 2f       	mov	r17, r25
    2118:	98 7f       	andi	r25, 0xF8	; 248
    211a:	96 95       	lsr	r25
    211c:	e9 2f       	mov	r30, r25
    211e:	96 95       	lsr	r25
    2120:	96 95       	lsr	r25
    2122:	e9 0f       	add	r30, r25
    2124:	ff 27       	eor	r31, r31
    2126:	ea 54       	subi	r30, 0x4A	; 74
    2128:	ff 4f       	sbci	r31, 0xFF	; 255
    212a:	99 27       	eor	r25, r25
    212c:	33 27       	eor	r19, r19
    212e:	ee 24       	eor	r14, r14
    2130:	ff 24       	eor	r15, r15
    2132:	a7 01       	movw	r20, r14
    2134:	e7 01       	movw	r28, r14
    2136:	05 90       	lpm	r0, Z+
    2138:	08 94       	sec
    213a:	07 94       	ror	r0
    213c:	28 f4       	brcc	.+10     	; 0x2148 <__ftoa_engine+0x80>
    213e:	36 0f       	add	r19, r22
    2140:	e7 1e       	adc	r14, r23
    2142:	f8 1e       	adc	r15, r24
    2144:	49 1f       	adc	r20, r25
    2146:	51 1d       	adc	r21, r1
    2148:	66 0f       	add	r22, r22
    214a:	77 1f       	adc	r23, r23
    214c:	88 1f       	adc	r24, r24
    214e:	99 1f       	adc	r25, r25
    2150:	06 94       	lsr	r0
    2152:	a1 f7       	brne	.-24     	; 0x213c <__ftoa_engine+0x74>
    2154:	05 90       	lpm	r0, Z+
    2156:	07 94       	ror	r0
    2158:	28 f4       	brcc	.+10     	; 0x2164 <__ftoa_engine+0x9c>
    215a:	e7 0e       	add	r14, r23
    215c:	f8 1e       	adc	r15, r24
    215e:	49 1f       	adc	r20, r25
    2160:	56 1f       	adc	r21, r22
    2162:	c1 1d       	adc	r28, r1
    2164:	77 0f       	add	r23, r23
    2166:	88 1f       	adc	r24, r24
    2168:	99 1f       	adc	r25, r25
    216a:	66 1f       	adc	r22, r22
    216c:	06 94       	lsr	r0
    216e:	a1 f7       	brne	.-24     	; 0x2158 <__ftoa_engine+0x90>
    2170:	05 90       	lpm	r0, Z+
    2172:	07 94       	ror	r0
    2174:	28 f4       	brcc	.+10     	; 0x2180 <__ftoa_engine+0xb8>
    2176:	f8 0e       	add	r15, r24
    2178:	49 1f       	adc	r20, r25
    217a:	56 1f       	adc	r21, r22
    217c:	c7 1f       	adc	r28, r23
    217e:	d1 1d       	adc	r29, r1
    2180:	88 0f       	add	r24, r24
    2182:	99 1f       	adc	r25, r25
    2184:	66 1f       	adc	r22, r22
    2186:	77 1f       	adc	r23, r23
    2188:	06 94       	lsr	r0
    218a:	a1 f7       	brne	.-24     	; 0x2174 <__ftoa_engine+0xac>
    218c:	05 90       	lpm	r0, Z+
    218e:	07 94       	ror	r0
    2190:	20 f4       	brcc	.+8      	; 0x219a <__ftoa_engine+0xd2>
    2192:	49 0f       	add	r20, r25
    2194:	56 1f       	adc	r21, r22
    2196:	c7 1f       	adc	r28, r23
    2198:	d8 1f       	adc	r29, r24
    219a:	99 0f       	add	r25, r25
    219c:	66 1f       	adc	r22, r22
    219e:	77 1f       	adc	r23, r23
    21a0:	88 1f       	adc	r24, r24
    21a2:	06 94       	lsr	r0
    21a4:	a9 f7       	brne	.-22     	; 0x2190 <__ftoa_engine+0xc8>
    21a6:	84 91       	lpm	r24, Z
    21a8:	10 95       	com	r17
    21aa:	17 70       	andi	r17, 0x07	; 7
    21ac:	41 f0       	breq	.+16     	; 0x21be <__ftoa_engine+0xf6>
    21ae:	d6 95       	lsr	r29
    21b0:	c7 95       	ror	r28
    21b2:	57 95       	ror	r21
    21b4:	47 95       	ror	r20
    21b6:	f7 94       	ror	r15
    21b8:	e7 94       	ror	r14
    21ba:	1a 95       	dec	r17
    21bc:	c1 f7       	brne	.-16     	; 0x21ae <__ftoa_engine+0xe6>
    21be:	ec e5       	ldi	r30, 0x5C	; 92
    21c0:	f0 e0       	ldi	r31, 0x00	; 0
    21c2:	68 94       	set
    21c4:	15 90       	lpm	r1, Z+
    21c6:	15 91       	lpm	r17, Z+
    21c8:	35 91       	lpm	r19, Z+
    21ca:	65 91       	lpm	r22, Z+
    21cc:	95 91       	lpm	r25, Z+
    21ce:	05 90       	lpm	r0, Z+
    21d0:	7f e2       	ldi	r23, 0x2F	; 47
    21d2:	73 95       	inc	r23
    21d4:	e1 18       	sub	r14, r1
    21d6:	f1 0a       	sbc	r15, r17
    21d8:	43 0b       	sbc	r20, r19
    21da:	56 0b       	sbc	r21, r22
    21dc:	c9 0b       	sbc	r28, r25
    21de:	d0 09       	sbc	r29, r0
    21e0:	c0 f7       	brcc	.-16     	; 0x21d2 <__ftoa_engine+0x10a>
    21e2:	e1 0c       	add	r14, r1
    21e4:	f1 1e       	adc	r15, r17
    21e6:	43 1f       	adc	r20, r19
    21e8:	56 1f       	adc	r21, r22
    21ea:	c9 1f       	adc	r28, r25
    21ec:	d0 1d       	adc	r29, r0
    21ee:	7e f4       	brtc	.+30     	; 0x220e <__ftoa_engine+0x146>
    21f0:	70 33       	cpi	r23, 0x30	; 48
    21f2:	11 f4       	brne	.+4      	; 0x21f8 <__ftoa_engine+0x130>
    21f4:	8a 95       	dec	r24
    21f6:	e6 cf       	rjmp	.-52     	; 0x21c4 <__ftoa_engine+0xfc>
    21f8:	e8 94       	clt
    21fa:	01 50       	subi	r16, 0x01	; 1
    21fc:	30 f0       	brcs	.+12     	; 0x220a <__ftoa_engine+0x142>
    21fe:	08 0f       	add	r16, r24
    2200:	0a f4       	brpl	.+2      	; 0x2204 <__ftoa_engine+0x13c>
    2202:	00 27       	eor	r16, r16
    2204:	02 17       	cp	r16, r18
    2206:	08 f4       	brcc	.+2      	; 0x220a <__ftoa_engine+0x142>
    2208:	20 2f       	mov	r18, r16
    220a:	23 95       	inc	r18
    220c:	02 2f       	mov	r16, r18
    220e:	7a 33       	cpi	r23, 0x3A	; 58
    2210:	28 f0       	brcs	.+10     	; 0x221c <__ftoa_engine+0x154>
    2212:	79 e3       	ldi	r23, 0x39	; 57
    2214:	7d 93       	st	X+, r23
    2216:	2a 95       	dec	r18
    2218:	e9 f7       	brne	.-6      	; 0x2214 <__ftoa_engine+0x14c>
    221a:	10 c0       	rjmp	.+32     	; 0x223c <__ftoa_engine+0x174>
    221c:	7d 93       	st	X+, r23
    221e:	2a 95       	dec	r18
    2220:	89 f6       	brne	.-94     	; 0x21c4 <__ftoa_engine+0xfc>
    2222:	06 94       	lsr	r0
    2224:	97 95       	ror	r25
    2226:	67 95       	ror	r22
    2228:	37 95       	ror	r19
    222a:	17 95       	ror	r17
    222c:	17 94       	ror	r1
    222e:	e1 18       	sub	r14, r1
    2230:	f1 0a       	sbc	r15, r17
    2232:	43 0b       	sbc	r20, r19
    2234:	56 0b       	sbc	r21, r22
    2236:	c9 0b       	sbc	r28, r25
    2238:	d0 09       	sbc	r29, r0
    223a:	98 f0       	brcs	.+38     	; 0x2262 <__ftoa_engine+0x19a>
    223c:	23 95       	inc	r18
    223e:	7e 91       	ld	r23, -X
    2240:	73 95       	inc	r23
    2242:	7a 33       	cpi	r23, 0x3A	; 58
    2244:	08 f0       	brcs	.+2      	; 0x2248 <__ftoa_engine+0x180>
    2246:	70 e3       	ldi	r23, 0x30	; 48
    2248:	7c 93       	st	X, r23
    224a:	20 13       	cpse	r18, r16
    224c:	b8 f7       	brcc	.-18     	; 0x223c <__ftoa_engine+0x174>
    224e:	7e 91       	ld	r23, -X
    2250:	70 61       	ori	r23, 0x10	; 16
    2252:	7d 93       	st	X+, r23
    2254:	30 f0       	brcs	.+12     	; 0x2262 <__ftoa_engine+0x19a>
    2256:	83 95       	inc	r24
    2258:	71 e3       	ldi	r23, 0x31	; 49
    225a:	7d 93       	st	X+, r23
    225c:	70 e3       	ldi	r23, 0x30	; 48
    225e:	2a 95       	dec	r18
    2260:	e1 f7       	brne	.-8      	; 0x225a <__ftoa_engine+0x192>
    2262:	11 24       	eor	r1, r1
    2264:	ef 90       	pop	r14
    2266:	ff 90       	pop	r15
    2268:	0f 91       	pop	r16
    226a:	1f 91       	pop	r17
    226c:	cf 91       	pop	r28
    226e:	df 91       	pop	r29
    2270:	99 27       	eor	r25, r25
    2272:	87 fd       	sbrc	r24, 7
    2274:	90 95       	com	r25
    2276:	08 95       	ret

00002278 <strnlen_P>:
    2278:	fc 01       	movw	r30, r24
    227a:	05 90       	lpm	r0, Z+
    227c:	61 50       	subi	r22, 0x01	; 1
    227e:	70 40       	sbci	r23, 0x00	; 0
    2280:	01 10       	cpse	r0, r1
    2282:	d8 f7       	brcc	.-10     	; 0x227a <strnlen_P+0x2>
    2284:	80 95       	com	r24
    2286:	90 95       	com	r25
    2288:	8e 0f       	add	r24, r30
    228a:	9f 1f       	adc	r25, r31
    228c:	08 95       	ret

0000228e <strnlen>:
    228e:	fc 01       	movw	r30, r24
    2290:	61 50       	subi	r22, 0x01	; 1
    2292:	70 40       	sbci	r23, 0x00	; 0
    2294:	01 90       	ld	r0, Z+
    2296:	01 10       	cpse	r0, r1
    2298:	d8 f7       	brcc	.-10     	; 0x2290 <strnlen+0x2>
    229a:	80 95       	com	r24
    229c:	90 95       	com	r25
    229e:	8e 0f       	add	r24, r30
    22a0:	9f 1f       	adc	r25, r31
    22a2:	08 95       	ret

000022a4 <fputc>:
    22a4:	0f 93       	push	r16
    22a6:	1f 93       	push	r17
    22a8:	cf 93       	push	r28
    22aa:	df 93       	push	r29
    22ac:	fb 01       	movw	r30, r22
    22ae:	23 81       	ldd	r18, Z+3	; 0x03
    22b0:	21 fd       	sbrc	r18, 1
    22b2:	03 c0       	rjmp	.+6      	; 0x22ba <fputc+0x16>
    22b4:	8f ef       	ldi	r24, 0xFF	; 255
    22b6:	9f ef       	ldi	r25, 0xFF	; 255
    22b8:	2c c0       	rjmp	.+88     	; 0x2312 <fputc+0x6e>
    22ba:	22 ff       	sbrs	r18, 2
    22bc:	16 c0       	rjmp	.+44     	; 0x22ea <fputc+0x46>
    22be:	46 81       	ldd	r20, Z+6	; 0x06
    22c0:	57 81       	ldd	r21, Z+7	; 0x07
    22c2:	24 81       	ldd	r18, Z+4	; 0x04
    22c4:	35 81       	ldd	r19, Z+5	; 0x05
    22c6:	42 17       	cp	r20, r18
    22c8:	53 07       	cpc	r21, r19
    22ca:	44 f4       	brge	.+16     	; 0x22dc <fputc+0x38>
    22cc:	a0 81       	ld	r26, Z
    22ce:	b1 81       	ldd	r27, Z+1	; 0x01
    22d0:	9d 01       	movw	r18, r26
    22d2:	2f 5f       	subi	r18, 0xFF	; 255
    22d4:	3f 4f       	sbci	r19, 0xFF	; 255
    22d6:	31 83       	std	Z+1, r19	; 0x01
    22d8:	20 83       	st	Z, r18
    22da:	8c 93       	st	X, r24
    22dc:	26 81       	ldd	r18, Z+6	; 0x06
    22de:	37 81       	ldd	r19, Z+7	; 0x07
    22e0:	2f 5f       	subi	r18, 0xFF	; 255
    22e2:	3f 4f       	sbci	r19, 0xFF	; 255
    22e4:	37 83       	std	Z+7, r19	; 0x07
    22e6:	26 83       	std	Z+6, r18	; 0x06
    22e8:	14 c0       	rjmp	.+40     	; 0x2312 <fputc+0x6e>
    22ea:	8b 01       	movw	r16, r22
    22ec:	ec 01       	movw	r28, r24
    22ee:	fb 01       	movw	r30, r22
    22f0:	00 84       	ldd	r0, Z+8	; 0x08
    22f2:	f1 85       	ldd	r31, Z+9	; 0x09
    22f4:	e0 2d       	mov	r30, r0
    22f6:	09 95       	icall
    22f8:	89 2b       	or	r24, r25
    22fa:	e1 f6       	brne	.-72     	; 0x22b4 <fputc+0x10>
    22fc:	d8 01       	movw	r26, r16
    22fe:	16 96       	adiw	r26, 0x06	; 6
    2300:	8d 91       	ld	r24, X+
    2302:	9c 91       	ld	r25, X
    2304:	17 97       	sbiw	r26, 0x07	; 7
    2306:	01 96       	adiw	r24, 0x01	; 1
    2308:	17 96       	adiw	r26, 0x07	; 7
    230a:	9c 93       	st	X, r25
    230c:	8e 93       	st	-X, r24
    230e:	16 97       	sbiw	r26, 0x06	; 6
    2310:	ce 01       	movw	r24, r28
    2312:	df 91       	pop	r29
    2314:	cf 91       	pop	r28
    2316:	1f 91       	pop	r17
    2318:	0f 91       	pop	r16
    231a:	08 95       	ret

0000231c <sprintf>:
    231c:	ae e0       	ldi	r26, 0x0E	; 14
    231e:	b0 e0       	ldi	r27, 0x00	; 0
    2320:	e4 e9       	ldi	r30, 0x94	; 148
    2322:	f1 e1       	ldi	r31, 0x11	; 17
    2324:	0c 94 19 10 	jmp	0x2032	; 0x2032 <__prologue_saves__+0x1c>
    2328:	0d 89       	ldd	r16, Y+21	; 0x15
    232a:	1e 89       	ldd	r17, Y+22	; 0x16
    232c:	86 e0       	ldi	r24, 0x06	; 6
    232e:	8c 83       	std	Y+4, r24	; 0x04
    2330:	1a 83       	std	Y+2, r17	; 0x02
    2332:	09 83       	std	Y+1, r16	; 0x01
    2334:	8f ef       	ldi	r24, 0xFF	; 255
    2336:	9f e7       	ldi	r25, 0x7F	; 127
    2338:	9e 83       	std	Y+6, r25	; 0x06
    233a:	8d 83       	std	Y+5, r24	; 0x05
    233c:	ae 01       	movw	r20, r28
    233e:	47 5e       	subi	r20, 0xE7	; 231
    2340:	5f 4f       	sbci	r21, 0xFF	; 255
    2342:	6f 89       	ldd	r22, Y+23	; 0x17
    2344:	78 8d       	ldd	r23, Y+24	; 0x18
    2346:	ce 01       	movw	r24, r28
    2348:	01 96       	adiw	r24, 0x01	; 1
    234a:	0e 94 6f 0c 	call	0x18de	; 0x18de <vfprintf>
    234e:	ef 81       	ldd	r30, Y+7	; 0x07
    2350:	f8 85       	ldd	r31, Y+8	; 0x08
    2352:	e0 0f       	add	r30, r16
    2354:	f1 1f       	adc	r31, r17
    2356:	10 82       	st	Z, r1
    2358:	2e 96       	adiw	r28, 0x0e	; 14
    235a:	e4 e0       	ldi	r30, 0x04	; 4
    235c:	0c 94 35 10 	jmp	0x206a	; 0x206a <__epilogue_restores__+0x1c>

00002360 <__ultoa_invert>:
    2360:	fa 01       	movw	r30, r20
    2362:	aa 27       	eor	r26, r26
    2364:	28 30       	cpi	r18, 0x08	; 8
    2366:	51 f1       	breq	.+84     	; 0x23bc <__ultoa_invert+0x5c>
    2368:	20 31       	cpi	r18, 0x10	; 16
    236a:	81 f1       	breq	.+96     	; 0x23cc <__ultoa_invert+0x6c>
    236c:	e8 94       	clt
    236e:	6f 93       	push	r22
    2370:	6e 7f       	andi	r22, 0xFE	; 254
    2372:	6e 5f       	subi	r22, 0xFE	; 254
    2374:	7f 4f       	sbci	r23, 0xFF	; 255
    2376:	8f 4f       	sbci	r24, 0xFF	; 255
    2378:	9f 4f       	sbci	r25, 0xFF	; 255
    237a:	af 4f       	sbci	r26, 0xFF	; 255
    237c:	b1 e0       	ldi	r27, 0x01	; 1
    237e:	3e d0       	rcall	.+124    	; 0x23fc <__ultoa_invert+0x9c>
    2380:	b4 e0       	ldi	r27, 0x04	; 4
    2382:	3c d0       	rcall	.+120    	; 0x23fc <__ultoa_invert+0x9c>
    2384:	67 0f       	add	r22, r23
    2386:	78 1f       	adc	r23, r24
    2388:	89 1f       	adc	r24, r25
    238a:	9a 1f       	adc	r25, r26
    238c:	a1 1d       	adc	r26, r1
    238e:	68 0f       	add	r22, r24
    2390:	79 1f       	adc	r23, r25
    2392:	8a 1f       	adc	r24, r26
    2394:	91 1d       	adc	r25, r1
    2396:	a1 1d       	adc	r26, r1
    2398:	6a 0f       	add	r22, r26
    239a:	71 1d       	adc	r23, r1
    239c:	81 1d       	adc	r24, r1
    239e:	91 1d       	adc	r25, r1
    23a0:	a1 1d       	adc	r26, r1
    23a2:	20 d0       	rcall	.+64     	; 0x23e4 <__ultoa_invert+0x84>
    23a4:	09 f4       	brne	.+2      	; 0x23a8 <__ultoa_invert+0x48>
    23a6:	68 94       	set
    23a8:	3f 91       	pop	r19
    23aa:	2a e0       	ldi	r18, 0x0A	; 10
    23ac:	26 9f       	mul	r18, r22
    23ae:	11 24       	eor	r1, r1
    23b0:	30 19       	sub	r19, r0
    23b2:	30 5d       	subi	r19, 0xD0	; 208
    23b4:	31 93       	st	Z+, r19
    23b6:	de f6       	brtc	.-74     	; 0x236e <__ultoa_invert+0xe>
    23b8:	cf 01       	movw	r24, r30
    23ba:	08 95       	ret
    23bc:	46 2f       	mov	r20, r22
    23be:	47 70       	andi	r20, 0x07	; 7
    23c0:	40 5d       	subi	r20, 0xD0	; 208
    23c2:	41 93       	st	Z+, r20
    23c4:	b3 e0       	ldi	r27, 0x03	; 3
    23c6:	0f d0       	rcall	.+30     	; 0x23e6 <__ultoa_invert+0x86>
    23c8:	c9 f7       	brne	.-14     	; 0x23bc <__ultoa_invert+0x5c>
    23ca:	f6 cf       	rjmp	.-20     	; 0x23b8 <__ultoa_invert+0x58>
    23cc:	46 2f       	mov	r20, r22
    23ce:	4f 70       	andi	r20, 0x0F	; 15
    23d0:	40 5d       	subi	r20, 0xD0	; 208
    23d2:	4a 33       	cpi	r20, 0x3A	; 58
    23d4:	18 f0       	brcs	.+6      	; 0x23dc <__ultoa_invert+0x7c>
    23d6:	49 5d       	subi	r20, 0xD9	; 217
    23d8:	31 fd       	sbrc	r19, 1
    23da:	40 52       	subi	r20, 0x20	; 32
    23dc:	41 93       	st	Z+, r20
    23de:	02 d0       	rcall	.+4      	; 0x23e4 <__ultoa_invert+0x84>
    23e0:	a9 f7       	brne	.-22     	; 0x23cc <__ultoa_invert+0x6c>
    23e2:	ea cf       	rjmp	.-44     	; 0x23b8 <__ultoa_invert+0x58>
    23e4:	b4 e0       	ldi	r27, 0x04	; 4
    23e6:	a6 95       	lsr	r26
    23e8:	97 95       	ror	r25
    23ea:	87 95       	ror	r24
    23ec:	77 95       	ror	r23
    23ee:	67 95       	ror	r22
    23f0:	ba 95       	dec	r27
    23f2:	c9 f7       	brne	.-14     	; 0x23e6 <__ultoa_invert+0x86>
    23f4:	00 97       	sbiw	r24, 0x00	; 0
    23f6:	61 05       	cpc	r22, r1
    23f8:	71 05       	cpc	r23, r1
    23fa:	08 95       	ret
    23fc:	9b 01       	movw	r18, r22
    23fe:	ac 01       	movw	r20, r24
    2400:	0a 2e       	mov	r0, r26
    2402:	06 94       	lsr	r0
    2404:	57 95       	ror	r21
    2406:	47 95       	ror	r20
    2408:	37 95       	ror	r19
    240a:	27 95       	ror	r18
    240c:	ba 95       	dec	r27
    240e:	c9 f7       	brne	.-14     	; 0x2402 <__ultoa_invert+0xa2>
    2410:	62 0f       	add	r22, r18
    2412:	73 1f       	adc	r23, r19
    2414:	84 1f       	adc	r24, r20
    2416:	95 1f       	adc	r25, r21
    2418:	a0 1d       	adc	r26, r0
    241a:	08 95       	ret

0000241c <eeprom_read_byte>:
    241c:	e1 99       	sbic	0x1c, 1	; 28
    241e:	fe cf       	rjmp	.-4      	; 0x241c <eeprom_read_byte>
    2420:	9f bb       	out	0x1f, r25	; 31
    2422:	8e bb       	out	0x1e, r24	; 30
    2424:	e0 9a       	sbi	0x1c, 0	; 28
    2426:	99 27       	eor	r25, r25
    2428:	8d b3       	in	r24, 0x1d	; 29
    242a:	08 95       	ret

0000242c <eeprom_read_word>:
    242c:	a8 e1       	ldi	r26, 0x18	; 24
    242e:	b0 e0       	ldi	r27, 0x00	; 0
    2430:	42 e0       	ldi	r20, 0x02	; 2
    2432:	50 e0       	ldi	r21, 0x00	; 0
    2434:	0c 94 30 12 	jmp	0x2460	; 0x2460 <eeprom_read_blraw>

00002438 <eeprom_write_byte>:
    2438:	26 2f       	mov	r18, r22

0000243a <eeprom_write_r18>:
    243a:	e1 99       	sbic	0x1c, 1	; 28
    243c:	fe cf       	rjmp	.-4      	; 0x243a <eeprom_write_r18>
    243e:	9f bb       	out	0x1f, r25	; 31
    2440:	8e bb       	out	0x1e, r24	; 30
    2442:	2d bb       	out	0x1d, r18	; 29
    2444:	0f b6       	in	r0, 0x3f	; 63
    2446:	f8 94       	cli
    2448:	e2 9a       	sbi	0x1c, 2	; 28
    244a:	e1 9a       	sbi	0x1c, 1	; 28
    244c:	0f be       	out	0x3f, r0	; 63
    244e:	01 96       	adiw	r24, 0x01	; 1
    2450:	08 95       	ret

00002452 <eeprom_write_word>:
    2452:	0e 94 1c 12 	call	0x2438	; 0x2438 <eeprom_write_byte>
    2456:	27 2f       	mov	r18, r23
    2458:	0c 94 1d 12 	jmp	0x243a	; 0x243a <eeprom_write_r18>

0000245c <eeprom_read_block>:
    245c:	dc 01       	movw	r26, r24
    245e:	cb 01       	movw	r24, r22

00002460 <eeprom_read_blraw>:
    2460:	fc 01       	movw	r30, r24
    2462:	e1 99       	sbic	0x1c, 1	; 28
    2464:	fe cf       	rjmp	.-4      	; 0x2462 <eeprom_read_blraw+0x2>
    2466:	06 c0       	rjmp	.+12     	; 0x2474 <eeprom_read_blraw+0x14>
    2468:	ff bb       	out	0x1f, r31	; 31
    246a:	ee bb       	out	0x1e, r30	; 30
    246c:	e0 9a       	sbi	0x1c, 0	; 28
    246e:	31 96       	adiw	r30, 0x01	; 1
    2470:	0d b2       	in	r0, 0x1d	; 29
    2472:	0d 92       	st	X+, r0
    2474:	41 50       	subi	r20, 0x01	; 1
    2476:	50 40       	sbci	r21, 0x00	; 0
    2478:	b8 f7       	brcc	.-18     	; 0x2468 <eeprom_read_blraw+0x8>
    247a:	08 95       	ret

0000247c <_exit>:
    247c:	f8 94       	cli

0000247e <__stop_program>:
    247e:	ff cf       	rjmp	.-2      	; 0x247e <__stop_program>
